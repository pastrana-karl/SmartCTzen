[{"D:\\Projects\\SmartCTzen\\client\\src\\index.js":"1","D:\\Projects\\SmartCTzen\\client\\src\\App.js":"2","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminLayout.js":"3","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\AllAdminLogin.js":"4","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminManageAdmins\\SuperAdminManageAdmins.js":"5","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContent.js":"6","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SecondStep.js":"7","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\ThirdStep.js":"8","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Login\\Login.js":"9","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FifthStep.js":"10","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminAccountSettings\\SuperAdminAccountSettings.js":"11","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Features\\Features.js":"12","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FourthStep.js":"13","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Home\\Home.js":"14","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"15","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SixthStep.js":"16","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"17","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SeventhStep.js":"18","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"19","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"20","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogout\\AdminLogout.js":"21","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FirstStep.js":"22","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminApplicants\\AdminApplicants.js":"23","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"24","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"25","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"26","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"27","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavBar\\NavBarHandle.js":"28","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"29","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"30","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"31","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminContainer\\SuperAdminContainer.js":"32","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContentNavItems\\SuperAdminContentNavItems.js":"33","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContentNavBar\\SuperAdminContentNavBar.js":"34","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Login\\LoginForm\\LoginForm.js":"35","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"36","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminToolbar\\SuperAdminToolbar.js":"37","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminNavigationItems\\SuperAdminNavigationItem\\SuperAdminNavigationItem.js":"38","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"39","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"40","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminNavigationItems\\SuperAdminNavigationItems.js":"41","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"42","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"43","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"44","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\LandingLayout\\LandingLayout.js":"45","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"46","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavBar\\NavBar.js":"47","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"48","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"49","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"50","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"51","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js":"52","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"53","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"54","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"55","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"56","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"57","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"58","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"59","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"60","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenLogout\\CitizenLogout.jsx":"61"},{"size":393,"mtime":1629179169582,"results":"62","hashOfConfig":"63"},{"size":7418,"mtime":1631344373951,"results":"64","hashOfConfig":"63"},{"size":1358,"mtime":1630373983026,"results":"65","hashOfConfig":"63"},{"size":1607,"mtime":1630373982948,"results":"66","hashOfConfig":"63"},{"size":1087,"mtime":1630373983031,"results":"67","hashOfConfig":"63"},{"size":5532,"mtime":1630569618551,"results":"68","hashOfConfig":"63"},{"size":2525,"mtime":1630911137365,"results":"69","hashOfConfig":"63"},{"size":5538,"mtime":1630911175915,"results":"70","hashOfConfig":"63"},{"size":542,"mtime":1629626168989,"results":"71","hashOfConfig":"63"},{"size":3471,"mtime":1631095536896,"results":"72","hashOfConfig":"63"},{"size":3278,"mtime":1630826727828,"results":"73","hashOfConfig":"63"},{"size":172,"mtime":1629626168940,"results":"74","hashOfConfig":"63"},{"size":3466,"mtime":1631095612449,"results":"75","hashOfConfig":"63"},{"size":193,"mtime":1629626168957,"results":"76","hashOfConfig":"63"},{"size":5523,"mtime":1630569618235,"results":"77","hashOfConfig":"63"},{"size":3994,"mtime":1631095577849,"results":"78","hashOfConfig":"63"},{"size":2508,"mtime":1630907286701,"results":"79","hashOfConfig":"63"},{"size":9289,"mtime":1630978646246,"results":"80","hashOfConfig":"63"},{"size":2041,"mtime":1630373982921,"results":"81","hashOfConfig":"63"},{"size":2214,"mtime":1630217883878,"results":"82","hashOfConfig":"63"},{"size":152,"mtime":1629626168636,"results":"83","hashOfConfig":"63"},{"size":8765,"mtime":1631071691373,"results":"84","hashOfConfig":"63"},{"size":638,"mtime":1629626168570,"results":"85","hashOfConfig":"63"},{"size":613,"mtime":1629626168923,"results":"86","hashOfConfig":"63"},{"size":5841,"mtime":1630826727786,"results":"87","hashOfConfig":"63"},{"size":7546,"mtime":1630826727803,"results":"88","hashOfConfig":"63"},{"size":2042,"mtime":1630373982917,"results":"89","hashOfConfig":"63"},{"size":627,"mtime":1629781548192,"results":"90","hashOfConfig":"63"},{"size":3265,"mtime":1631265892458,"results":"91","hashOfConfig":"63"},{"size":254,"mtime":1630124291336,"results":"92","hashOfConfig":"63"},{"size":322,"mtime":1630826727831,"results":"93","hashOfConfig":"63"},{"size":265,"mtime":1630373983136,"results":"94","hashOfConfig":"63"},{"size":477,"mtime":1630373982998,"results":"95","hashOfConfig":"63"},{"size":263,"mtime":1630373982994,"results":"96","hashOfConfig":"63"},{"size":1910,"mtime":1630373983060,"results":"97","hashOfConfig":"63"},{"size":1356,"mtime":1629626168603,"results":"98","hashOfConfig":"63"},{"size":229,"mtime":1630373983172,"results":"99","hashOfConfig":"63"},{"size":465,"mtime":1630373983156,"results":"100","hashOfConfig":"63"},{"size":211,"mtime":1629626169110,"results":"101","hashOfConfig":"63"},{"size":229,"mtime":1630569618583,"results":"102","hashOfConfig":"63"},{"size":269,"mtime":1630373983158,"results":"103","hashOfConfig":"63"},{"size":229,"mtime":1630569618584,"results":"104","hashOfConfig":"63"},{"size":210,"mtime":1630373983068,"results":"105","hashOfConfig":"63"},{"size":425,"mtime":1631337799121,"results":"106","hashOfConfig":"63"},{"size":767,"mtime":1630042205445,"results":"107","hashOfConfig":"63"},{"size":250,"mtime":1631337799096,"results":"108","hashOfConfig":"63"},{"size":3191,"mtime":1629781548182,"results":"109","hashOfConfig":"63"},{"size":1023,"mtime":1631265892305,"results":"110","hashOfConfig":"63"},{"size":810,"mtime":1631243953600,"results":"111","hashOfConfig":"63"},{"size":432,"mtime":1630569618623,"results":"112","hashOfConfig":"63"},{"size":297,"mtime":1629626169018,"results":"113","hashOfConfig":"63"},{"size":166,"mtime":1629626169206,"results":"114","hashOfConfig":"63"},{"size":245,"mtime":1629626169525,"results":"115","hashOfConfig":"63"},{"size":425,"mtime":1629626169458,"results":"116","hashOfConfig":"63"},{"size":219,"mtime":1629626169652,"results":"117","hashOfConfig":"63"},{"size":18085,"mtime":1631356323999,"results":"118","hashOfConfig":"63"},{"size":1855,"mtime":1631346219443,"results":"119","hashOfConfig":"63"},{"size":2201,"mtime":1631345009901,"results":"120","hashOfConfig":"63"},{"size":1561,"mtime":1631346401413,"results":"121","hashOfConfig":"63"},{"size":1436,"mtime":1631346383695,"results":"122","hashOfConfig":"63"},{"size":154,"mtime":1631343573137,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1go8aus",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\SmartCTzen\\client\\src\\index.js",[],["258","259"],"D:\\Projects\\SmartCTzen\\client\\src\\App.js",["260"],"import React, { useState } from 'react';\r\nimport { Redirect, BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Features from './components/Landing/Features/Features';\r\nimport Home from './components/Landing/Home/Home';\r\nimport Login from './components/Landing/Login/Login';\r\nimport AdminProfile from './components/AllAdmin/Administrator/AdminProfile/AdminProfile';\r\nimport AllAdminsLogin from './components/AllAdmin/AllAdminLogin';\r\nimport FirstStep from './components/Landing/Register/FirstStep';\r\nimport SecondStep from './components/Landing/Register/SecondStep';\r\nimport ThirdStep from './components/Landing/Register/ThirdStep';\r\nimport FourthStep from './components/Landing/Register/FourthStep';\r\nimport FifthStep from './components/Landing/Register/FifthStep';\r\nimport SixthStep from './components/Landing/Register/SixthStep';\r\nimport SeventhStep from './components/Landing/Register/SeventhStep';\r\nimport Progress from './components/Landing/Register/Progress';\r\nimport NavBarHandle from './components/UI/Navigation/NavBar/NavBarHandle'\r\n\r\n\r\nimport AdminProposals from './components/AllAdmin/Administrator/AdminProposals/AdminProposals';\r\nimport AdminReports from './components/AllAdmin/Administrator/AdminReports/AdminReports';\r\nimport AdminMessages from './components/AllAdmin/Administrator/AdminMessages/AdminMessages';\r\nimport AdminProjects from './components/AllAdmin/Administrator/AdminProjects/AdminProjects';\r\nimport AdminUsers from './components/AllAdmin/Administrator/AdminUsers/AdminUsers';\r\nimport AdminApplicants from './components/AllAdmin/Administrator/AdminApplicants/AdminApplicants';\r\nimport AdminLogout from './components/AllAdmin/Administrator/AdminLogout/AdminLogout';\r\nimport SuperAdminLayout from './components/AllAdmin/SuperAdmin/SuperAdminLayout';\r\nimport SuperAdminContent from './components/AllAdmin/SuperAdmin/SuperAdminContent/SuperAdminContent';\r\nimport SuperAdminManageAdmins from './components/AllAdmin/SuperAdmin/SuperAdminManageAdmins/SuperAdminManageAdmins';\r\nimport SuperAdminAccountSettings from './components/AllAdmin/SuperAdmin/SuperAdminAccountSettings/SuperAdminAccountSettings';\r\nimport AdminCreateProposals from './components/AllAdmin/Administrator/AdminCreateProposals/AdminCreateProposals';\r\nimport AdminCreateProjects from './components/AllAdmin/Administrator/AdminCreateProjects/AdminCreateProjects';\r\n\r\nimport CitizenNavBar from './components/Citizen/CitizenNav/CitizenNav';\r\nimport CitizenProfile from './pages/Citizen/CitizenProfile/CitizenProfile';\r\nimport CitizenProposals from './pages/Citizen/CitizenProposals/CitizenProposals';\r\nimport CitizenReports from './pages/Citizen/CitizenReports/CitizenReports';\r\nimport CitizenProjects from './pages/Citizen/CitizenProjects/CitizenProjects';\r\nimport CitizenLogout from './pages/Citizen/CitizenLogout/CitizenLogout';\r\n\r\nconst App = () => {\r\n  const [citizen, setCitizen] = useState({});\r\n\r\n  const updateCitizen = (data) => {\r\n    setCitizen((prevCitizen) => ({ ...prevCitizen, ...data }));\r\n  };\r\n\r\n  const resetCitizen = () => {\r\n    setCitizen({});\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBarHandle />\r\n      <Progress />\r\n      <CitizenNavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/features\">\r\n            <Features />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route\r\n             render={(props) => (\r\n              <FirstStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/create-account\"\r\n             exact={true}\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SecondStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/second\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <ThirdStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/third\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FourthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fourth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FifthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fifth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SixthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/sixth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SeventhStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen} />\r\n            )}\r\n            path=\"/seventh\"\r\n          />\r\n\r\n          {/**************************** CITIZEN Routes ****************************/}\r\n          <Route path=\"/citizen-profile\">\r\n            <CitizenProfile />\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-proposals\">\r\n            <CitizenProposals/>\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-reports\">\r\n            <CitizenReports/>\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-projects\">\r\n            <CitizenProjects/>\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-logout\">\r\n            <CitizenLogout/>\r\n          </Route>  \r\n\r\n          {/**************************** SUPER ADMIN and ADMIN Login ****************************/}\r\n          <Route path=\"/admin-login\">\r\n            <AllAdminsLogin />\r\n          </Route>\r\n\r\n          {/**************************** ADMIN Routes ****************************/}\r\n          <Route path=\"/admin-profile\">\r\n            <AdminProfile />\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposals\">\r\n            <AdminProposals />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-proposals\">\r\n            <AdminCreateProposals />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/admin-reports\">\r\n            <AdminReports />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-messages\">\r\n            <AdminMessages />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-projects\">\r\n            <AdminProjects />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-projects\">\r\n            <AdminCreateProjects />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-users\">\r\n            <AdminUsers />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-applicants\">\r\n            <AdminApplicants />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-logout\">\r\n            <AdminLogout />\r\n          </Route>\r\n\r\n          {/**************************** SUPER ADMIN PANEL ****************************/}\r\n          {/* <Route path =\"/sample-superadmin\">\r\n              <SuperAdminLayout />\r\n          </Route> */}\r\n\r\n          <Route path=\"/super-admin/content\">\r\n            <SuperAdminContent />\r\n          </Route>\r\n\r\n          <Route path=\"/super-admin/manage-admins\">\r\n            <SuperAdminManageAdmins />\r\n          </Route>\r\n\r\n          <Route path=\"/super-admin/account-settings\">\r\n            <SuperAdminAccountSettings />\r\n          </Route>\r\n\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n        </Switch>\r\n    </BrowserRouter>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminLayout.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\AllAdminLogin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminManageAdmins\\SuperAdminManageAdmins.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContent.js",["261"],"import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport SuperAdminLayout from '../SuperAdminLayout';\r\nimport SuperAdminContentNavBar from './SuperAdminContentNavBar/SuperAdminContentNavBar';\r\nimport SuperAdminContentNavItems from './SuperAdminContentNavItems/SuperAdminContentNavItems';\r\nimport Input from '../../../UI/Input/Input';\r\n\r\nimport classes from './SuperAdminContent.module.css'\r\nimport SuperAdminContainer from '../../../UI/SuperAdminContainer/SuperAdminContainer';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\nconst initialValues = {\r\n    header: '',\r\n    partner_communities: '',\r\n    users: '',\r\n    members: ''\r\n};\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form values', values)\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    header: Yup.string().required('Required'),\r\n    partner_communities: Yup.number().required('Required'),\r\n    users: Yup.number().required('Required'),\r\n    members: Yup.number().required('Required')\r\n});\r\n\r\nconst SuperAdminContent = ( props ) => {\r\n\r\n    // const [inputHeader, setInputHeader] = useState();\r\n    // const [inputPartnerCommunities, setInputPartnerCommunities] = useState();\r\n    // const [inputUsers, setInputUsers] = useState();\r\n    // const [inputMembers, setInputMembers] = useState();\r\n    // const [inputMessage, setInputMessages] = useState();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SuperAdminLayout>\r\n                <SuperAdminContentNavBar>\r\n                    <SuperAdminContentNavItems />\r\n                </SuperAdminContentNavBar>\r\n                <SuperAdminContainer>\r\n                    <form className={classes.SuperAdminForm}>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Header</label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                placeholder=\"Header\"\r\n                                id=\"header\"\r\n                                name=\"header\"\r\n                                { ...formik.getFieldProps('header') }\r\n                            />\r\n                            { formik.touched.header && formik.errors.header ? \r\n                                <div className={classes.InputValidation}>{formik.errors.header}</div> : null }\r\n                        </div>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Parter Communities</label>\r\n                            <Input \r\n                                type=\"number\"\r\n                                placeholder=\"Partner communities\"\r\n                                id=\"partner_communities\"\r\n                                name=\"partner_communities\"\r\n                                {...formik.getFieldProps('partner_communities')}\r\n                            />\r\n                            { formik.touched.partner_communities && formik.errors.partner_communities ? \r\n                                <div className={classes.InputValidation}>{formik.errors.partner_communities}</div> : null }\r\n                        </div>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Users</label>\r\n                            <Input \r\n                                type=\"number\"\r\n                                placeholder=\"Users\"\r\n                                id=\"users\"\r\n                                name=\"users\"\r\n                                { ...formik.getFieldProps('users')}\r\n                            />\r\n                            { formik.touched.users && formik.errors.users ? \r\n                                <div className={classes.InputValidation}>{formik.errors.users}</div> : null }\r\n                        </div>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Members</label>\r\n                            <Input \r\n                                type=\"number\"\r\n                                placeholder=\"Members\"\r\n                                id=\"members\"\r\n                                name=\"members\"\r\n                                { ...formik.getFieldProps('members')}\r\n                            />\r\n                            { formik.touched.members && formik.errors.members ? \r\n                                <div className={classes.InputValidation}>{formik.errors.members}</div> : null}\r\n                        </div>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Message</label>\r\n                            <textarea\r\n                                className={classes.SuperAdminTextArea}\r\n                                placeholder=\"Input CEO Message\"\r\n                                id=\"Enter CEO message\"\r\n                            />\r\n                        </div>\r\n                        <div className={classes.SuperAdminButtonDiv}>\r\n                            <SubmitButton />\r\n                            <CancelButton />\r\n                        </div>\r\n                    </form>\r\n                </SuperAdminContainer>\r\n            </SuperAdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SuperAdminContent;","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SecondStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\ThirdStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Login\\Login.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FifthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminAccountSettings\\SuperAdminAccountSettings.js",["262","263"],"import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport SuperAdminContainer from '../../../UI/SuperAdminContainer/SuperAdminContainer';\r\nimport SuperAdminLayout from '../SuperAdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\n\r\nimport classes from './SuperAdminAccountSettings.module.css';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n\r\nconst initialValues = {\r\n    email_address: '',\r\n    password: ''\r\n};\r\n\r\nconst onSubmit = ( values ) => {\r\n    console.log(\"Form values\", values);\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    email_address: Yup.string().email(\"Invalid format\").required(\"Required\"),\r\n    password: Yup.string().required(\"Required\")\r\n});\r\n\r\nconst SuperAdminAccountSettings = ( props ) => {\r\n    const [inputEmail, setInputEmail] = useState();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SuperAdminLayout>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Account Settings</h2>\r\n                </CardHeader>\r\n                <SuperAdminContainer>\r\n                    <form className={classes.SuperAdminForm}>\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Email address</label>\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"Email address\"\r\n                                id=\"email_address\"\r\n                                name=\"email_address\"\r\n                                { ...formik.getFieldProps('email_address') }\r\n                            />\r\n                            { formik.touched.email_address && formik.errors.email_address ? \r\n                                <div className={classes.InputValidation}>{formik.errors.email_address}</div> : null }\r\n                        </div>\r\n\r\n                        <div className={classes.SuperAdminContainerDiv}>\r\n                            <label>Password</label>\r\n                            <Input \r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                { ...formik.getFieldProps('password') }\r\n                            />\r\n                            { formik.touched.password && formik.errors.password ? \r\n                                <div className={classes.InputValidation}>{formik.errors.password}</div> : null }\r\n                        </div>\r\n\r\n                        <div className={classes.SuperAdminButtonDiv}>\r\n                            <SubmitButton />\r\n                            <CancelButton />\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </SuperAdminContainer>\r\n            </SuperAdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SuperAdminAccountSettings;","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Features\\Features.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FourthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Home\\Home.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["264","265"],"import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminProfileButton from '../../../UI/Buttons/AdminProfileButton/AdminProfileButton';\r\nimport ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\nimport ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\nimport classes from './AdminProfile.module.css';\r\n\r\nconst initialValues = {\r\n    city_municipality: '',\r\n    region: '',\r\n    email: '',\r\n    password: ''\r\n}\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form data', values)\r\n};\r\n\r\nconst AdminProfile = () => {\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: values => {\r\n            console.log('Form values', values)\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.Content}>\r\n                    <div className={classes.AdminProfile}>\r\n                        <ProfileIconCard />\r\n                        <h2>Summary</h2>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <AdminProfileButton>Reports</AdminProfileButton>\r\n                            <AdminProfileButton>Proposals</AdminProfileButton>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Personal Information</h2>\r\n                        <div>\r\n                            <form className={classes.AdminProfileFormDiv}>\r\n                                <div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"City/Municipality\"\r\n                                            type=\"text\"\r\n                                            id=\"city_municipality\"\r\n                                            name=\"city_municipality\"\r\n                                            readOnly=\"readOnly\"\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.city_municipality}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"region\">Region</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Region\"\r\n                                            type=\"text\"\r\n                                            id=\"region\"\r\n                                            name=\"region\"\r\n                                            readOnly=\"readOnly\"\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.region}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        {/* LOGIN CREDENTIALS */}\r\n\r\n                        <h2>Login Credentials</h2>\r\n                        <div>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={classes.AdminProfileFormDiv}>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Email Address</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Email address\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.email}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Password</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.password}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.ButtonDiv}>\r\n                                    <SubmitButton />\r\n                                    <CancelButton />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdminProfile;","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SixthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\SeventhStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogout\\AdminLogout.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\FirstStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminApplicants\\AdminApplicants.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["266","267"],"import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\nimport classes from './AdminCreateProjects.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    description: '',\r\n    date: '',\r\n    location: ''\r\n};\r\n\r\nconst onSubmit = async (values) => {\r\n    console.log('Form values', values);\r\n\r\n    const {...data} = values;\r\n    const res = await axios.post('/api/projects', data)\r\n        .catch(err => {\r\n            console.log('Error: ', err.res.data);\r\n        });\r\n};\r\n\r\n// const validate = values => {\r\n//     let errors ={};\r\n\r\n//     if (!values.title) errors.title = \"Required\";\r\n//     if (!values.description) errors.description = \"Required\";\r\n//     if (!values.date) errors.date = \"Required\";\r\n//     if (!values.location) errors.location = \"Required\";\r\n\r\n//     return errors;\r\n// }\r\n\r\nconst validationSchema = Yup.object({\r\n    title: Yup.string().required('Required'),\r\n    description: Yup.string().required('Required'),\r\n    date: Yup.string().required('Required'),\r\n    location: Yup.string().required('Required')\r\n});\r\n\r\nconst AdminCreateProjects = ( props ) => {\r\n    // const formik = useFormik({\r\n    //     initialValues,\r\n    //     onSubmit,\r\n    //     validationSchema\r\n    // });\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProjectsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProjectsContentDiv}>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <Form className={classes.AdminCreateProjectsForm}>\r\n                        <div className={classes.AdminCreateProjectsFormDiv}>\r\n                            <div className={classes.AdminCreateProjectsFormInput}>\r\n                                <label>Project Title</label>\r\n                                <FormikInput \r\n                                    type=\"text\"\r\n                                    placeholder=\"Project Title\"\r\n                                    id=\"title\"\r\n                                    name=\"title\"\r\n                                />\r\n                                <ErrorMessage name=\"title\">\r\n                                    {\r\n                                        errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                    }\r\n                                </ErrorMessage>\r\n                            </div>\r\n                            <div className={classes.AdminCreateProjectsFormInput}>\r\n                                <label>Project Description</label>\r\n                                <FormikInput\r\n                                    type=\"text\"\r\n                                    placeholder=\"Project Description\"\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                />\r\n                                <ErrorMessage name=\"description\">\r\n                                    {\r\n                                        errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                    }\r\n                                </ErrorMessage>\r\n                            </div>\r\n                            <div className={classes.AdminCreateProjectsFormInput}>\r\n                                <label>When</label>\r\n                                <FormikInput \r\n                                    type=\"text\"\r\n                                    placeholder=\"Date\"\r\n                                    id=\"date\"\r\n                                    name=\"date\"\r\n                                />\r\n                                <ErrorMessage name=\"date\">\r\n                                    {\r\n                                        errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                    }\r\n                                </ErrorMessage>\r\n                            </div>\r\n                            <div className={classes.AdminCreateProjectsFormInput}>\r\n                                <label>Where</label>\r\n                                <FormikInput \r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    id=\"location\"\r\n                                    name=\"location\"\r\n                                />\r\n                                <ErrorMessage name=\"location\">\r\n                                    {\r\n                                        errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                    }\r\n                                </ErrorMessage>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <SubmitButton />\r\n                            <CancelButton />\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            \r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default AdminCreateProjects;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["268","269","270"],"import React, { useState } from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\nimport classes from './AdminCreateProposals.module.css';\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    description: '',\r\n    date: '',\r\n    location: ''\r\n};\r\n\r\nconst onSubmit = async (values) => {\r\n    console.log('Form values', values);\r\n\r\n    // await fetch('/api/initiatives', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //         values\r\n    //     })\r\n    // });\r\n    const {...data} = values;\r\n\r\n    console.log(data);\r\n    const res = await axios.post('/api/initiatives', data)\r\n        .catch(err => {\r\n            console.log('Error: ', err.res.data);\r\n        });\r\n    \r\n};\r\n\r\n// const validate = values => {\r\n//     let errors = {};\r\n\r\n//     if (!values.title) errors.title = \"Required\";\r\n//     if (!values.description) errors.description = \"Required\";\r\n//     if (!values.date) errors.date = \"Required\";\r\n//     if (!values.location) errors.location = \"Required\";\r\n\r\n//     return errors;\r\n// };\r\n\r\nconst validationSchema = Yup.object({\r\n    title: Yup.string().required('Required'),\r\n    description: Yup.string().required('Required'),\r\n    date: Yup.string().required('Required'),\r\n    location: Yup.string().required(\"Required\")\r\n});\r\n\r\nconst AdminCreateProposals = ( props ) => {  \r\n    // const [inputProposalTitle, setInputProposalTitle] = useState();\r\n    // const [inputProposalDescription, setInputProposalDescription] = useState();\r\n    // const [inputProposalDate, setInputProposalDate] = useState();\r\n    // const [inputProposalLocation, setInputProposalLocation] = useState();\r\n    // const [inputProposalPhoto, serInputProposalPhoto] = useState();\r\n\r\n    // const formik = useFormik({\r\n    //     initialValues,\r\n    //     onSubmit,\r\n    //     validationSchema\r\n    // });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminCreateProposalsHeader}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Proposals</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.AdminCreateProposalsContentDiv}>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.AdminCreateProposalForm}>\r\n                            <div className={classes.AdminCreateProposalFormDiv}>\r\n                                <div className={classes.AdminCreateProposalsFormInput}>\r\n                                    <label>Proposal Title</label>\r\n                                    <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Proposal Title\"\r\n                                        id=\"title\"\r\n                                        name=\"title\"\r\n                                    />\r\n                                    <ErrorMessage name=\"title\">\r\n                                        {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                    </ErrorMessage>\r\n                                </div>\r\n                                <div className={classes.AdminCreateProposalsFormInput}>\r\n                                    <label>Description</label>\r\n                                    <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Description\"\r\n                                        id=\"description\"\r\n                                        name=\"description\"\r\n                                        // {...formik.getFieldProps('description')}\r\n                                    />\r\n                                    <ErrorMessage name=\"name\">\r\n                                        {\r\n                                            errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                        }\r\n                                    </ErrorMessage>\r\n                                    {/* {formik.touched.description && formik.errors.description ? <div className={classes.InputValidation}>{formik.errors.description}</div> : null} */}\r\n                                </div>\r\n                                <div className={classes.AdminCreateProposalsFormInput}>\r\n                                    <label>When</label>\r\n                                    <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"When\"\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                        // {...formik.getFieldProps('date')}\r\n                                    />\r\n                                    <ErrorMessage name=\"date\">\r\n                                        {\r\n                                            errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                        }\r\n                                    </ErrorMessage>\r\n                                    {/* {formik.touched.date && formik.errors.date ? <div className={classes.InputValidation}>{formik.errors.date}</div> : null} */}\r\n                                </div>\r\n                                <div className={classes.AdminCreateProposalsFormInput}>\r\n                                    <label>Where</label>\r\n                                    <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Where\"\r\n                                        id=\"location\"\r\n                                        name=\"location\"\r\n                                        // {...formik.getFieldProps('location')}\r\n                                    />\r\n                                    <ErrorMessage name=\"location\">\r\n                                        {\r\n                                            errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                        }\r\n                                    </ErrorMessage>\r\n                                    {/* {formik.touched.location && formik.errors.location ? <div className={classes.InputValidation}>{formik.errors.location}</div> : null} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ButtonDiv}>\r\n                                <SubmitButton />\r\n                                <CancelButton />\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminCreateProposals;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavBar\\NavBarHandle.js",["271"],"import NavBar from './NavBar';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LandingLayout from '../../../Landing/LandingLayout/LandingLayout';\r\n\r\nconst NavBarHandle = ({ location: { pathname } }) => {\r\n    const isHome = pathname === '/';\r\n    const isFeatures = pathname === '/features';\r\n    const isLogin = pathname === '/login';\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        {isHome || isFeatures || isLogin ? ( \r\n          //  <NavBar />\r\n          <LandingLayout />\r\n       ) : ( <div></div> )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\nexport default withRouter(NavBarHandle);","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["272","273","274","275","276"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminConversations from './AdminConversations/AdminConversations';\r\nimport AdminMessage from './AdminMessage/AdminMessage';\r\n\r\nimport classes from './AdminMessages.module.css';\r\n\r\nconst AdminMessages = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n\r\n    //insert this code soon:\r\n    //const { user } = useContext(AuthContext)\r\n\r\n    // useEffect(() => {\r\n    //     const getConversations = async () => {\r\n    //         try {\r\n    //             const res = await axios.get(\"/conversations/\" + user._id);\r\n    //             setConversations(res.data);\r\n    //             console.log(res);\r\n    //         } catch(err) {\r\n    //             console.log(err);\r\n    //         }\r\n    //     };\r\n\r\n    //     getConversations();\r\n    // }, [user._id]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        <AdminConversations />\r\n                        <AdminConversations />\r\n                        <AdminConversations />\r\n                    </div>\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            <div className={classes.AdminChatBoxTop}>\r\n                                {/* {conversations.map(conversation => {\r\n                                    <AdminMessage conversation={conversation} currentUser={user} />\r\n                                })} */}\r\n                                \r\n                                <AdminMessage />\r\n                                <AdminMessage own />\r\n                                <AdminMessage />\r\n                                <AdminMessage own />\r\n                                <AdminMessage />\r\n                                <AdminMessage own />\r\n                                <AdminMessage />\r\n                                \r\n                            </div>\r\n                            <div className={classes.AdminChatBoxBottom}>\r\n                                <textarea\r\n                                    className={classes.ChatMessageInput}\r\n                                    placeholder=\"Write something...\"\r\n                                ></textarea>\r\n                                <button className={classes.ChatSubmitButton}>Send</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminContainer\\SuperAdminContainer.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContentNavItems\\SuperAdminContentNavItems.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\SuperAdmin\\SuperAdminContent\\SuperAdminContentNavBar\\SuperAdminContentNavBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Login\\LoginForm\\LoginForm.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminToolbar\\SuperAdminToolbar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminNavigationItems\\SuperAdminNavigationItem\\SuperAdminNavigationItem.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\SuperAdminNavigation\\SuperAdminNavigationItems\\SuperAdminNavigationItems.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\LandingLayout\\LandingLayout.js",["277"],"import React from 'react';\r\n\r\nimport NavigationItem from '../../UI/Navigation/NavigationItems/NavigationItem/NavigationItem';\r\nimport NavigationItems from '../../UI/Navigation/NavigationItems/NavigationItems';\r\nimport Toolbar from '../../UI/Navigation/Toolbar/Toolbar';\r\n\r\nimport classes from './LandingLayout.module.css';\r\n\r\nconst LandingLayout = ( props ) => (\r\n    <React.Fragment>\r\n        <Toolbar>\r\n            <NavigationItems>\r\n                <NavigationItem link=\"/\" >Home</NavigationItem>\r\n                <NavigationItem link=\"/features\" >Features</NavigationItem>\r\n                <NavigationItem link=\"/login\" >Login</NavigationItem>\r\n            </NavigationItems>\r\n        </Toolbar>        \r\n    </React.Fragment>\r\n);\r\n\r\nexport default LandingLayout;","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavBar\\NavBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["278","279","280"],"import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport classes from './AdminConversations.module.css';\r\n\r\nconst AdminConversations = ({conversation, currentUser}) => {\r\n    //insert soon\r\n    // const [user, setUser] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     const friendId = conversation.members.find(member => member !== currentUser._id);\r\n    \r\n    //     const getUser = async () => {\r\n    //         const res = await axios('/citizens?id=' + friendId);\r\n    //         console.log(res);\r\n    //     }\r\n    // }, []);\r\n\r\n    return(\r\n        <div className={classes.AdminConversations}>\r\n            <img \r\n                className={classes.AdminConversationsImg} \r\n                src=\"https://images.pexels.com/photos/1165999/pexels-photo-1165999.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" \r\n                alt=\"sample-image\" />\r\n            <span className={classes.ConversationName}>Sample Test</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminConversations","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["281"],"import React from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './CitizenProfile.css';\r\n\r\nconst CitizenProfile = () => (\r\n    <>\r\n        <Container className = 'citizenProfile-container'>\r\n            <div className = 'citizenAccountImg-shadow'>\r\n                <div className = 'citizenAccountImg'>\r\n                    <img src= 'https://res.cloudinary.com/karlstorage/image/upload/v1631243465/free-img/sasjbg0hekrbn7vlc5eo.jpg' alt=\"\" ></img>\r\n                </div>\r\n            </div>\r\n\r\n            <div  className = 'col-md-10 offset-md-1' id = 'citizenProfile-body'>\r\n                <div className = 'citizenProfile-name'>\r\n                    <p>Juan Miguel Dela Cruz</p>\r\n                </div>\r\n\r\n                <div className = 'citizenProfile-statsDesktop'>\r\n                    <Row>\r\n                        <Col className = 'citizenProfile-Badge'>\r\n                            <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img src=\"https://imgur.com/vxihw43.png\" alt=\"FUCKSHIT\"></img>\r\n                            </div>\r\n                            <h4>KEVIN</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Proposals Created</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Approved Proposals</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Verified Reports</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Voted Proposals</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <div className = 'citizenProfile-statsMobile'>\r\n                    <Col>\r\n                        <Row className = 'citizenProfile-Badge'>\r\n                            <Col>\r\n                                <Row>\r\n                                    <div className = 'citizenProfile-BadgeImg'>\r\n                                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"FUCKSHIT\"></img>\r\n                                    </div>\r\n                                </Row>\r\n                                <Row><h4>KEVIN</h4></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                                <Col>\r\n                                    <Row><h4>Proposals Created</h4></Row>\r\n                                    <Row><p>1</p></Row>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                            <Row><h4>Approved Proposals</h4></Row>\r\n                            <Row><p>1</p></Row>\r\n                            </Col>\r\n                            \r\n                            \r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Verified Reports</h4></Row>\r\n                                <Row><p>1</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Voted Proposals</h4></Row>\r\n                                <Row><p>1</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n            \r\n            <Form className = 'citizenProfile-edit'>\r\n                <h3>Personal Information</h3>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"lname\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"fname\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"mname\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Suffix</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sname\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sex\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Birth Date</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Full Address</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                \r\n                <h3>Login Credentials</h3>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n              \r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            className='citizenProfile-input'\r\n                            type=\"text\"\r\n                            name=\"password\"\r\n                            autoComplete=\"off\"\r\n                        />               \r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Link to = '#' className = 'citizenProfile-passwordUpdate'><i className=\"editIcon far fa-edit\"></i></Link>\r\n\r\n        </Container>\r\n    </>\r\n);\r\n\r\n\r\nexport default CitizenProfile;\r\n\r\n// import React, { useState } from 'react';\r\n// import { useFormik } from 'formik';\r\n\r\n// import ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\n// import ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\n// import classes from './CitizenProfile.module.css';\r\n\r\n// const initialValues = {\r\n//     last_name: '',\r\n//     first_name: '',\r\n//     middle_name: '',\r\n//     suffix: '',\r\n//     sex: '',\r\n//     birthdate: '',\r\n//     address:'',\r\n//     email: '',\r\n//     password: ''\r\n// }\r\n\r\n// const onSubmit = values => {\r\n//     console.log('Form data', values)\r\n// };\r\n\r\n// const CitizenProfile = () => {\r\n//     const formik = useFormik({\r\n//         initialValues,\r\n//         onSubmit: values => {\r\n//             console.log('Form values', values)\r\n//         }\r\n//     });\r\n\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <CitizenLayout>\r\n//                 <div className={classes.Content}>\r\n//                     <div className={classes.CitizenProfile}>\r\n//                         <ProfileIconCard />\r\n                        \r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <CitizenProfileButton>Proposals Created</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Approved Proposals</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Verified Reports</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Voted Proposals</CitizenProfileButton>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <h2>Personal Information</h2>\r\n//                         <div>\r\n//                             <form className={classes.CitizenProfileFormDiv}>\r\n//                                 <div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"last_name\">Last Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Last Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"last_name\"\r\n//                                             name=\"last_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.last_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"first_name\">First Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"First Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"first_name\"\r\n//                                             name=\"first_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.first_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"middle_name\">Middle Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Middle Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"middle_name\"\r\n//                                             name=\"middle_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.middle_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"suffix\">Suffix</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Suffix\"\r\n//                                             type=\"text\"\r\n//                                             id=\"suffix\"\r\n//                                             name=\"suffix\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.suffix}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"sex\">Sex</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"sex\"\r\n//                                             type=\"text\"\r\n//                                             id=\"sex\"\r\n//                                             name=\"sex\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.sex}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"birthdate\">Birthdate</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Birthdate\"\r\n//                                             type=\"text\"\r\n//                                             id=\"birthdate\"\r\n//                                             name=\"birthdate\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.birthdate}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"address\">Full Addreses</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Address\"\r\n//                                             type=\"text\"\r\n//                                             id=\"address\"\r\n//                                             name=\"address\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.address}\r\n//                                         />\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n\r\n//                         {/* LOGIN CREDENTIALS */}\r\n\r\n//                         <h2>Login Credentials</h2>\r\n//                         <div>\r\n//                             <form onSubmit={formik.handleSubmit}>\r\n//                                 <div className={classes.CitizenProfileFormDiv}>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label>Email Address</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Email address\"\r\n//                                             type=\"email\"\r\n//                                             id=\"email\"\r\n//                                             name=\"email\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.email}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label>Password</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Password\"\r\n//                                             type=\"password\"\r\n//                                             id=\"password\"\r\n//                                             name=\"password\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.password}\r\n//                                         />\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className={classes.ButtonDiv}>\r\n//                                     <SubmitButton />\r\n//                                     <CancelButton />\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </CitizenLayout>\r\n//         </React.Fragment>\r\n//     );\r\n// }\r\n\r\n// export default CitizenProfile;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenLogout\\CitizenLogout.jsx",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":27,"column":8,"nodeType":"288","messageId":"289","endLine":27,"endColumn":24},{"ruleId":"286","severity":1,"message":"290","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"291","line":29,"column":12,"nodeType":"288","messageId":"289","endLine":29,"endColumn":22},{"ruleId":"286","severity":1,"message":"292","line":29,"column":24,"nodeType":"288","messageId":"289","endLine":29,"endColumn":37},{"ruleId":"286","severity":1,"message":"290","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"293","line":20,"column":7,"nodeType":"288","messageId":"289","endLine":20,"endColumn":15},{"ruleId":"286","severity":1,"message":"294","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":13},{"ruleId":"286","severity":1,"message":"295","line":27,"column":11,"nodeType":"288","messageId":"289","endLine":27,"endColumn":14},{"ruleId":"286","severity":1,"message":"290","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"294","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":13},{"ruleId":"286","severity":1,"message":"295","line":38,"column":11,"nodeType":"288","messageId":"289","endLine":38,"endColumn":14},{"ruleId":"286","severity":1,"message":"296","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":14},{"ruleId":"286","severity":1,"message":"297","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"298","line":1,"column":28,"nodeType":"288","messageId":"289","endLine":1,"endColumn":38},{"ruleId":"286","severity":1,"message":"299","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"300","line":12,"column":12,"nodeType":"288","messageId":"289","endLine":12,"endColumn":25},{"ruleId":"286","severity":1,"message":"301","line":12,"column":27,"nodeType":"288","messageId":"289","endLine":12,"endColumn":43},{"ruleId":"286","severity":1,"message":"302","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":15},{"ruleId":"286","severity":1,"message":"299","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":13},{"ruleId":"286","severity":1,"message":"297","line":2,"column":17,"nodeType":"288","messageId":"289","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":21,"column":13,"nodeType":"305","endLine":24,"endColumn":38},{"ruleId":"286","severity":1,"message":"306","line":2,"column":26,"nodeType":"288","messageId":"289","endLine":2,"endColumn":32},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'SuperAdminLayout' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'inputEmail' is assigned a value but never used.","'setInputEmail' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'Input' is defined but never used.","'res' is assigned a value but never used.","'NavBar' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'axios' is defined but never used.","'conversations' is assigned a value but never used.","'setConversations' is assigned a value but never used.","'classes' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]