[{"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\index.js":"1","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\context\\Context.js":"2","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\App.js":"3","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\context\\Reducer.js":"4","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"5","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"6","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"7","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"8","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"9","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"10","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"11","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"12","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"13","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"14","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"15","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"16","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"17","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"18","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"19","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"20","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"21","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"22","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"23","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"24","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"25","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"26","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"27","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"28","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"29","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"30","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"31","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"32","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"33","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"34","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"35","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"36","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"37","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"38","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"39","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"40","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"41","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogout\\AdminLogout.js":"42","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"43","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"44","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"45","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"46","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSideBar.jsx":"47","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"48","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"49","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"50","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"51","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"52","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"53","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"54","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenLogout\\CitizenLogout.jsx":"55","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"56","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"57","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"58","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"59","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"60","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"61","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"62","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"63","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"64","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"65","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"66","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"67","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"68","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"69","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"70","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"71","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"72","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"73","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"74","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"75","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js":"76","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"77","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSubMenu.jsx":"78","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSideBarData.jsx":"79","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"80","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"81","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"82","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"83","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"84","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"85","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"86","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"87","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"88","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"89","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"90","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"91","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"92","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"93","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"94","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"95","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"96","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"97","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js":"98","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"99","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"100"},{"size":502,"mtime":1632232563568,"results":"101","hashOfConfig":"102"},{"size":1216,"mtime":1632494783545,"results":"103","hashOfConfig":"102"},{"size":14896,"mtime":1633168417722,"results":"104","hashOfConfig":"102"},{"size":3965,"mtime":1632840129438,"results":"105","hashOfConfig":"102"},{"size":2508,"mtime":1630973135283,"results":"106","hashOfConfig":"102"},{"size":4061,"mtime":1632840129385,"results":"107","hashOfConfig":"102"},{"size":1886,"mtime":1632232563513,"results":"108","hashOfConfig":"102"},{"size":9631,"mtime":1632840129528,"results":"109","hashOfConfig":"102"},{"size":9254,"mtime":1632840129547,"results":"110","hashOfConfig":"102"},{"size":3502,"mtime":1632840129480,"results":"111","hashOfConfig":"102"},{"size":4355,"mtime":1632840129467,"results":"112","hashOfConfig":"102"},{"size":4229,"mtime":1632840129580,"results":"113","hashOfConfig":"102"},{"size":3656,"mtime":1632840129548,"results":"114","hashOfConfig":"102"},{"size":7512,"mtime":1632840129591,"results":"115","hashOfConfig":"102"},{"size":2988,"mtime":1632840129561,"results":"116","hashOfConfig":"102"},{"size":10297,"mtime":1633264571181,"results":"117","hashOfConfig":"102"},{"size":3661,"mtime":1632840129529,"results":"118","hashOfConfig":"102"},{"size":2542,"mtime":1632840129696,"results":"119","hashOfConfig":"102"},{"size":5002,"mtime":1632232563682,"results":"120","hashOfConfig":"102"},{"size":3386,"mtime":1632840129660,"results":"121","hashOfConfig":"102"},{"size":2946,"mtime":1632840129711,"results":"122","hashOfConfig":"102"},{"size":2633,"mtime":1632840129685,"results":"123","hashOfConfig":"102"},{"size":2346,"mtime":1632840129622,"results":"124","hashOfConfig":"102"},{"size":9944,"mtime":1633001174498,"results":"125","hashOfConfig":"102"},{"size":2965,"mtime":1632840129633,"results":"126","hashOfConfig":"102"},{"size":3483,"mtime":1632840129723,"results":"127","hashOfConfig":"102"},{"size":8492,"mtime":1632840129620,"results":"128","hashOfConfig":"102"},{"size":3674,"mtime":1632840129725,"results":"129","hashOfConfig":"102"},{"size":5913,"mtime":1632840129618,"results":"130","hashOfConfig":"102"},{"size":9136,"mtime":1633001174484,"results":"131","hashOfConfig":"102"},{"size":3773,"mtime":1632840129256,"results":"132","hashOfConfig":"102"},{"size":7491,"mtime":1632840129621,"results":"133","hashOfConfig":"102"},{"size":17723,"mtime":1633168417776,"results":"134","hashOfConfig":"102"},{"size":2591,"mtime":1633168417782,"results":"135","hashOfConfig":"102"},{"size":2757,"mtime":1632840129687,"results":"136","hashOfConfig":"102"},{"size":2133,"mtime":1633001174296,"results":"137","hashOfConfig":"102"},{"size":2968,"mtime":1633168417792,"results":"138","hashOfConfig":"102"},{"size":2753,"mtime":1633168417779,"results":"139","hashOfConfig":"102"},{"size":22543,"mtime":1633168417735,"results":"140","hashOfConfig":"102"},{"size":18152,"mtime":1633168417729,"results":"141","hashOfConfig":"102"},{"size":13007,"mtime":1633277414776,"results":"142","hashOfConfig":"102"},{"size":152,"mtime":1630110091424,"results":"143","hashOfConfig":"102"},{"size":4032,"mtime":1632548603833,"results":"144","hashOfConfig":"102"},{"size":2792,"mtime":1633168417794,"results":"145","hashOfConfig":"102"},{"size":10558,"mtime":1633263771113,"results":"146","hashOfConfig":"102"},{"size":1027,"mtime":1631450283893,"results":"147","hashOfConfig":"102"},{"size":2063,"mtime":1633001174397,"results":"148","hashOfConfig":"102"},{"size":733,"mtime":1631454216493,"results":"149","hashOfConfig":"102"},{"size":3134,"mtime":1633155148262,"results":"150","hashOfConfig":"102"},{"size":6736,"mtime":1633004884930,"results":"151","hashOfConfig":"102"},{"size":4460,"mtime":1633414526806,"results":"152","hashOfConfig":"102"},{"size":8204,"mtime":1633410888594,"results":"153","hashOfConfig":"102"},{"size":15725,"mtime":1633365161200,"results":"154","hashOfConfig":"102"},{"size":18165,"mtime":1633168418649,"results":"155","hashOfConfig":"102"},{"size":154,"mtime":1631357870066,"results":"156","hashOfConfig":"102"},{"size":14772,"mtime":1633365374242,"results":"157","hashOfConfig":"102"},{"size":1561,"mtime":1632306439166,"results":"158","hashOfConfig":"102"},{"size":8539,"mtime":1633412929753,"results":"159","hashOfConfig":"102"},{"size":2220,"mtime":1633407361539,"results":"160","hashOfConfig":"102"},{"size":6129,"mtime":1633412118994,"results":"161","hashOfConfig":"102"},{"size":789,"mtime":1632232563534,"results":"162","hashOfConfig":"102"},{"size":1966,"mtime":1632232563544,"results":"163","hashOfConfig":"102"},{"size":2183,"mtime":1632232563487,"results":"164","hashOfConfig":"102"},{"size":1403,"mtime":1633168417765,"results":"165","hashOfConfig":"102"},{"size":907,"mtime":1633254975826,"results":"166","hashOfConfig":"102"},{"size":1584,"mtime":1632840129238,"results":"167","hashOfConfig":"102"},{"size":254,"mtime":1630110091499,"results":"168","hashOfConfig":"102"},{"size":425,"mtime":1633168417801,"results":"169","hashOfConfig":"102"},{"size":386,"mtime":1633172985151,"results":"170","hashOfConfig":"102"},{"size":211,"mtime":1630110091478,"results":"171","hashOfConfig":"102"},{"size":253,"mtime":1633001174444,"results":"172","hashOfConfig":"102"},{"size":255,"mtime":1633331818158,"results":"173","hashOfConfig":"102"},{"size":845,"mtime":1633168417816,"results":"174","hashOfConfig":"102"},{"size":1237,"mtime":1633168417814,"results":"175","hashOfConfig":"102"},{"size":297,"mtime":1630110091473,"results":"176","hashOfConfig":"102"},{"size":166,"mtime":1630110091481,"results":"177","hashOfConfig":"102"},{"size":432,"mtime":1630973135297,"results":"178","hashOfConfig":"102"},{"size":2007,"mtime":1632232563292,"results":"179","hashOfConfig":"102"},{"size":921,"mtime":1632232563284,"results":"180","hashOfConfig":"102"},{"size":364,"mtime":1632232563203,"results":"181","hashOfConfig":"102"},{"size":210,"mtime":1630973135409,"results":"182","hashOfConfig":"102"},{"size":250,"mtime":1631357870038,"results":"183","hashOfConfig":"102"},{"size":219,"mtime":1631176074594,"results":"184","hashOfConfig":"102"},{"size":462,"mtime":1632232563548,"results":"185","hashOfConfig":"102"},{"size":245,"mtime":1631337116424,"results":"186","hashOfConfig":"102"},{"size":14031,"mtime":1633407127541,"results":"187","hashOfConfig":"102"},{"size":3383,"mtime":1632852156646,"results":"188","hashOfConfig":"102"},{"size":4954,"mtime":1632840129337,"results":"189","hashOfConfig":"102"},{"size":3385,"mtime":1632840129203,"results":"190","hashOfConfig":"102"},{"size":4028,"mtime":1633168417786,"results":"191","hashOfConfig":"102"},{"size":2510,"mtime":1632840129227,"results":"192","hashOfConfig":"102"},{"size":286,"mtime":1632840129401,"results":"193","hashOfConfig":"102"},{"size":205,"mtime":1632840129387,"results":"194","hashOfConfig":"102"},{"size":8385,"mtime":1633014889862,"results":"195","hashOfConfig":"102"},{"size":2401,"mtime":1633168417743,"results":"196","hashOfConfig":"102"},{"size":2751,"mtime":1633168417748,"results":"197","hashOfConfig":"102"},{"size":2557,"mtime":1633168417755,"results":"198","hashOfConfig":"102"},{"size":221,"mtime":1633014889873,"results":"199","hashOfConfig":"102"},{"size":10093,"mtime":1633168417798,"results":"200","hashOfConfig":"102"},{"size":1757,"mtime":1633286130247,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},"13fchym",{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"204"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"204"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"204"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"204"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"204"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"204"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"204"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"204"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"204"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"204"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"204"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"204"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"204"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"204"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"204"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"204"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"204"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"204"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"204"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"204"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"204"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"204"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"204"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"204"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"204"},"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\index.js",[],["430","431"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\context\\Context.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\App.js",["432","433"],"import React, { useState, useContext } from 'react';\r\nimport { Context } from './context/Context';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport LandingNavBar from './components/Landing/Navigation/LandingNavBar';\r\nimport Home from './pages/Landing/Home/Home';\r\nimport CitizenLogin from './pages/Landing/CitizenLogin/CitizenLogin';\r\nimport CitizenForgot from './pages/Landing/CitizenForgot/CitizenForgot';\r\nimport CitizenEmail from './pages/Landing/CitizenEmail/CitizenEmail';\r\nimport Features from './pages/Landing/Feature/Features';\r\nimport Progress from './components/Landing/Register/Progress';\r\nimport FirstStep from './pages/Landing/Register/FirstStep';\r\nimport SecondStep from './pages/Landing/Register/SecondStep';\r\nimport ThirdStep from './pages/Landing/Register/ThirdStep';\r\nimport FourthStep from './pages/Landing/Register/FourthStep';\r\nimport FifthStep from './pages/Landing/Register/FifthStep';\r\nimport SixthStep from './pages/Landing/Register/SixthStep';\r\nimport SeventhStep from './pages/Landing/Register/SeventhStep';\r\n\r\nimport CitizenNavBar from './components/Citizen/CitizenNav/CitizenNav';\r\nimport CitizenProfile from './pages/Citizen/CitizenProfile/CitizenProfile';\r\nimport CitizenProposals from './pages/Citizen/CitizenProposals/CitizenProposals';\r\nimport CitizenReports from './pages/Citizen/CitizenReports/CitizenReports';\r\nimport CitizenProjects from './pages/Citizen/CitizenProjects/CitizenProjects';\r\n\r\nimport AdminForgot from './components/AllAdmin/Administrator/AdminForgot/AdminForgot';\r\nimport AdminEmail from './components/AllAdmin/Administrator/AdminEmail/AdminEmail';\r\nimport AdminProfile from './components/AllAdmin/Administrator/AdminProfile/AdminProfile';\r\nimport AdminLogin from './components/AllAdmin/Administrator/AdminLogin/AdminLogin';\r\nimport AdminProposals from './components/AllAdmin/Administrator/AdminProposals/AdminProposals';\r\nimport AdminReports from './components/AllAdmin/Administrator/AdminReports/AdminReports';\r\nimport AdminMessages from './components/AllAdmin/Administrator/AdminMessages/AdminMessages';\r\nimport AdminProjects from './components/AllAdmin/Administrator/AdminProjects/AdminProjects';\r\nimport AdminUsers from './components/AllAdmin/Administrator/AdminUsers/AdminUsers';\r\nimport Applicants from './components/AllAdmin/Administrator/Applicants/Applicants';\r\nimport SingleApplicants from './components/AllAdmin/Administrator/SingleApplicants/SingleApplicants';\r\nimport SingleUsers from './components/AllAdmin/Administrator/SingleUsers/SingleUsers';\r\nimport AdminCreateProposals from './components/AllAdmin/Administrator/AdminCreateProposals/AdminCreateProposals';\r\nimport AdminCreateProjects from './components/AllAdmin/Administrator/AdminCreateProjects/AdminCreateProjects';\r\n\r\nimport CitizenPassUpdate from './pages/Citizen/CitizenProfile/CitizenPassUpdate/CitizenPassUpdate';\r\nimport CitizenCreateProposal from './pages/Citizen/CitizenProposals/CreateProposals/CitizenCreateProposals';\r\nimport CitizenViewProposal from './pages/Citizen/CitizenProposals/ViewProposals/CitizenViewProposal';\r\nimport CitizenViewReport from './pages/Citizen/CitizenReports/ViewReports/CitizenViewReport';\r\nimport CitizenSubmitReport from './pages/Citizen/CitizenReports/SubmitReport/CitizenSubmitReport';\r\nimport CitizenChatReport from './pages/Citizen/CitizenReports/ChatReports/CitizenChatReport';\r\nimport CitizenViewProject from './pages/Citizen/CitizenProjects/CitizenViewProject/CitizenViewProject';\r\nimport ProposalNav from './components/Citizen/ProposalNav/ProposalNav';\r\nimport ReportsNav from './components/Citizen/ReportsNav/ReportsNav';\r\n\r\nimport SANavBar from './components/SuperAdmin/SaSideBar';\r\nimport SALogin from './pages/SuperAdmin/SALogin/SALogin';\r\nimport SAForgot from './pages/SuperAdmin/SAForgot/SAForgot';\r\nimport SAEmail from './pages/SuperAdmin/SAEmail/SAEmail';\r\nimport SAContentHome from './pages/SuperAdmin/SAContentHome/SAContentHome';\r\nimport SAAnnouncements from './pages/SuperAdmin/SAAnnouncements/SAAnnouncements';\r\nimport SAFeaturedMember from './pages/SuperAdmin/SAFeaturedMember/SAFeaturedMember';\r\nimport SAEula from './pages/SuperAdmin/SAEula/SAEula';\r\nimport SAAddFeaturedMember from './pages/SuperAdmin/SAAddFeaturedMember/SAAddFeaturedMember';\r\nimport SAContentFeature from './pages/SuperAdmin/SAContentFeature/SAContentFeature';\r\nimport SAAddFeature from './pages/SuperAdmin/SAAddFeature/SAAddFeature';\r\nimport SAFeatures from './pages/SuperAdmin/SAFeatures/SAFeatures';\r\nimport SAManage from './pages/SuperAdmin/SAManage/SAManage';\r\nimport SASearchAdmin from './pages/SuperAdmin/SASearchAdmin/SASearchAdmin';\r\nimport SAAddAdmin from './pages/SuperAdmin/SAAddAdmin/SAAddAdmin';\r\nimport SAAccount from './pages/SuperAdmin/SAAccount/SAAccount';\r\nimport AdminReportsDashboard from './components/AllAdmin/Administrator/AdminReportsDashboard/AdminReportsDashboard';\r\nimport AdminProposalsDashboard from './components/AllAdmin/Administrator/AdminProposalsDashboard/AdminProposalsDashboard';\r\nimport AdminEachProposal from './components/AllAdmin/Administrator/AdminEachProposal/AdminEachProposal';\r\nimport AdminEachProject from './components/AllAdmin/Administrator/AdminEachProject/AdminEachProject';\r\nimport AdminEachReport from './components/AllAdmin/Administrator/AdminEachReport/AdminEachReport';\r\nimport AdminUpdateProject from './components/AllAdmin/Administrator/AdminUpdateProject/AdminUpdateProject';\r\n\r\nconst App = () => {\r\n\r\n  //Register data passing...\r\n  const [citizen, setCitizen] = useState({});\r\n\r\n  const updateCitizen = (data) => {\r\n    setCitizen((prevCitizen) => ({ ...prevCitizen, ...data }));\r\n  };\r\n\r\n  const resetCitizen = () => {\r\n    setCitizen({});\r\n  };\r\n\r\n  //Citizen User...\r\n  const { user } = useContext(Context);\r\n\r\n  // console.log(user);\r\n\r\n  //Super Administrator User...\r\n  const { saUser } = useContext(Context);\r\n\r\n  //Administrator User...\r\n  const { aUser } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <LandingNavBar />\r\n      <Progress />\r\n\r\n      <CitizenNavBar />\r\n      {/* <ProposalNav /> */}\r\n\r\n      <SANavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/features\">\r\n            <Features />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/forgot-password\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenForgot />}\r\n          </Route>\r\n\r\n          <Route path=\"/change-password/:token\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenEmail />}\r\n          </Route>\r\n\r\n          <Route\r\n             render={(props) => (\r\n              <FirstStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen}/>\r\n            )}\r\n            path=\"/create-account\"\r\n             exact={true}\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SecondStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/second\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <ThirdStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/third\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FourthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fourth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FifthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fifth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SixthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/sixth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SeventhStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen} />\r\n            )}\r\n            path=\"/seventh\"\r\n          />\r\n\r\n          {/**************************** CITIZEN Routes ****************************/}\r\n\r\n          <Route path=\"/citizen-profile\">  \r\n            {user ? <CitizenProfile /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-pass-update\">\r\n            {user ? <CitizenPassUpdate /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-proposals\">\r\n            {user ? <CitizenProposals /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-view-proposals\">\r\n            <CitizenViewProposal/>\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-create-proposals\">\r\n            {user ? <CitizenCreateProposal /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-reports\">\r\n            {user ? <CitizenReports /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-reports\">\r\n            {user ? <CitizenViewReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-submit-reports\">\r\n            {user ? <CitizenSubmitReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-chat-report\">\r\n            {user ? <CitizenChatReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-projects\">\r\n            {user ? <CitizenProjects /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-project\">\r\n            {user ? <CitizenViewProject /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          {/**************************** ADMIN Routes ****************************/} \r\n\r\n          <Route path=\"/admin-login\">\r\n            {aUser ? <Redirect to=\"/admin-profile\" /> : <AdminLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-forgot\">\r\n            <AdminForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-change/:token\">\r\n            <AdminEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-profile\">\r\n            {aUser ? <AdminProfile /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposals\">\r\n            {aUser ? <AdminProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposal/:id\">\r\n            {aUser ? <AdminEachProposal /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-proposals\">\r\n            {aUser ? <AdminCreateProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-reports\">\r\n            {aUser ? <AdminReports /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-report/:id\">\r\n            {aUser ? <AdminEachReport /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/reports\">\r\n            {aUser ? <AdminReportsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-messages\">\r\n            {aUser ? <AdminMessages /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-projects\">\r\n            {aUser ? <AdminProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-project/:id\">\r\n            {aUser ? <AdminEachProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/proposals\">\r\n            {aUser ? <AdminProposalsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-projects\">\r\n            {aUser ? <AdminCreateProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-update-project/:id\">\r\n            {aUser ? <AdminUpdateProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-users\">\r\n            {aUser ? <AdminUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants\">\r\n            {aUser ? <Applicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants-Verification\">\r\n            {aUser ? <SingleApplicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Admin-viewUsers\">\r\n            {aUser ? <SingleUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          {/**************************** SUPER ADMIN Routes ****************************/}\r\n          \r\n          <Route path=\"/superAdmin-login\">\r\n            {saUser ? <Redirect to=\"/SAContent-home\" /> : <SALogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-forgot\">\r\n            <SAForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-changePassword/:token\">\r\n            <SAEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-home\">\r\n            {saUser ? <SAContentHome /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-announcements\">\r\n            {saUser ? <SAAnnouncements /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-FeaturedMember\">\r\n            {saUser ? <SAFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-Eula\">\r\n            {saUser ? <SAEula /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-addFeaturedMember\">\r\n            {saUser ? <SAAddFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-feature\">\r\n            {saUser ? <SAContentFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-feature\">\r\n            {saUser ? <SAAddFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-feature\">\r\n            {saUser ? <SAFeatures /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAManage-admin\">\r\n            {saUser ? <SAManage /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SASearch-admin\">\r\n            {saUser ? <SASearchAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-admin\">\r\n            {saUser ? <SAAddAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-account\">\r\n            {saUser ? <SAAccount /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n        </Switch>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["434","435","436","437"],"import React, { useState, useContext, useRef } from 'react';\r\nimport CardForm from '../../../UI/Cards/CardForm/CardForm';\r\nimport Input from '../../../UI/Input/Input';\r\nimport LoginButton from '../../../UI/Buttons/LoginButton/LoginButton';\r\nimport { loginCall } from '../../../../api_calls/adminApiCall';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport classes from './AdminLogin.module.css';\r\n\r\nconst AdminLogin = () => {\r\n    // const email = useRef();\r\n    // const password = useRef();\r\n    // const { user, isFetching, error, dispatch } = useContext(Context);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     loginCall(\r\n    //         { email: email.current.value, password: password.current.value }, \r\n    //         dispatch\r\n    //     );\r\n    // };\r\n\r\n    // console.log(user);\r\n//KD's code\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { aUser, dispatch, isFetching } = useContext(Context);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: \"ALOGIN_START\" });\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/admin/login\", {\r\n            email,\r\n            password,\r\n        })\r\n\r\n        dispatch({ type: \"ALOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: `${err.response.status}`,\r\n            text: `${err.response.data.message}`,\r\n        });\r\n        dispatch({ type: \"ALOGIN_FAILURE\" });\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        // <div className={classes.Content}>\r\n        //     <form className={classes.CardForm} onSubmit={handleSubmit}>\r\n        //         <h3>SmartCTLogo</h3>\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"email\"\r\n        //             placeholder=\"Email address\"\r\n        //             ref={email}\r\n        //             id=\"email\"\r\n        //         />\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"password\"\r\n        //             placeholder=\"Password\"\r\n        //             ref={password}\r\n        //             id=\"password\"\r\n\r\n        //         />\r\n        //         <div className={classes.ButtonDiv}>\r\n        //             <LoginButton type=\"submit\"/>\r\n        //         </div>\r\n        //         <div className={classes.HyperlinkDiv}>\r\n        //             <a href=\"/forgot-password\" className={classes.Hyperlink}>\r\n        //             Forgot Password\r\n        //             </a>\r\n        //         </div>\r\n        //     </form>\r\n        // </div>\r\n        //KD's Code\r\n        <div className={classes.Content}>\r\n            <CardForm onSubmit = { handleSubmit }>\r\n                <h3>SmartCTLogo</h3>\r\n                <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange = {e => setEmail(e.target.value)} \r\n                    id=\"email\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {e => setPassword(e.target.value)} \r\n                    id=\"password\"\r\n\r\n                />\r\n                <div className={classes.ButtonDiv}>\r\n                    <LoginButton type=\"submit\"/>\r\n                </div>\r\n                <div className={classes.HyperlinkDiv}>\r\n                    <a href=\"/admin-forgot\" className={classes.Hyperlink}>\r\n                    Forgot Password\r\n                    </a>\r\n                </div>\r\n            </CardForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["438","439","440","441","442","443","444"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminProfileButton from '../../../UI/Buttons/AdminProfileButton/AdminProfileButton';\r\nimport ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\nimport ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './AdminProfile.module.css';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport TextError from '../../../UI/Text/TextError';\r\nimport axios from 'axios';\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required!'),\r\n    password: Yup.string().required('Required!')\r\n});\r\n\r\nconst AdminProfile = () => {\r\n    const { aUser, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [logs, setLogs] = useState([]);\r\n\r\n    // const onSubmit = values => {\r\n    //     if (values.email !== aUser.user.email) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     console.log('Form data', values);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/administrator/?userType=Administrator`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        fetchLogs();\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: values => {\r\n            if (values.email !== aUser.data.user.email) {\r\n                console.log(\"Incorrect email\")\r\n                return false;\r\n            }\r\n    \r\n            console.log('Form data', values)\r\n            axios.patch('/api/admin/' + aUser.data.user._id, values);\r\n        }\r\n    });\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const uploadPhotoHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"AUPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: aUser.token,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.patch(\"/api/admin/\" + aUser.data.user._id, updateAccount);\r\n                    dispatch({ type: \"AUPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"AUPDATE_FAILURE\" })\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is required!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n        }\r\n    }\r\n\r\n    console.log(aUser);\r\n    return (\r\n        // <React.Fragment>\r\n        //     <AdminLayout>\r\n        //         <div className={classes.Content}>\r\n        //             <div className={classes.AdminProfile}>\r\n        //                 <ProfileIconCard />\r\n        //                 <h2>Summary</h2>\r\n        //                 <div className={classes.ButtonDiv}>\r\n        //                     <Link to = \"/admin-summary/reports\">\r\n        //                         <AdminProfileButton>Reports</AdminProfileButton>\r\n        //                     </Link>\r\n        //                     <Link to = '/admin-summary/proposals'>\r\n        //                         <AdminProfileButton>Proposals</AdminProfileButton>\r\n        //                     </Link>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div>\r\n        //                 <h2>Personal Information</h2>\r\n        //                 <div>\r\n        //                     <form className={classes.AdminProfileFormDiv}>\r\n        //                         <div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"City/Municipality\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"city_municipality\"\r\n        //                                     name=\"city_municipality\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.city}\r\n        //                                 />\r\n        //                             </div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"region\">Region</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"Region\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"region\"\r\n        //                                     name=\"region\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.region}\r\n        //                                 />\r\n        //                             </div>\r\n        //                         </div>\r\n        //                     </form>\r\n        //                 </div>\r\n\r\n        //                 {/* LOGIN CREDENTIALS */}\r\n\r\n                        // <h2>Login Credentials</h2>\r\n                        // <div>\r\n                        //     <form onSubmit={formik.handleSubmit}>\r\n                        //         <div className={classes.AdminProfileFormDiv}>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Email Address</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Email address\"\r\n                        //                     type=\"email\"\r\n                        //                     id=\"email\"\r\n                        //                     name=\"email\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.email}\r\n                        //                 />\r\n                        //             </div>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Password</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Password\"\r\n                        //                     type=\"password\"\r\n                        //                     id=\"password\"\r\n                        //                     name=\"password\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.password}\r\n                        //                 />\r\n                        //             </div>\r\n                        //         </div>\r\n                        //         <div className={classes.ButtonDiv}>\r\n                        //             <SubmitButton />\r\n                        //             <CancelButton />\r\n                        //         </div>\r\n                        //     </form>\r\n                        // </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </AdminLayout>\r\n        // </React.Fragment>\r\n\r\n\r\n            <AdminLayout>\r\n                <div className={classes.Content}>\r\n                    <div className={classes.AdminProfile}>\r\n                        <div className={classes.AdminAccountShadow}>\r\n                            <div className={classes.AdminAccountImage}>\r\n                                <img src= {file ? (URL.createObjectURL(file)) : `${aUser.data.user.profilePic}`} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {iconUpload === false &&\r\n                            <>\r\n                                <div className={classes.AdminProfileChangeLink}>\r\n                                    <p onClick={ setIconTrue }>Change Profile Picture?</p>\r\n                                </div>\r\n\r\n                                <div className={classes.AdminProfileChangeImg}>\r\n                                    <Form.Label ><i class=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        {iconUpload &&\r\n                            <div className={classes.AdminProfileChangeImg}>\r\n                                <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n                                <Form.Label  htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                            </div>\r\n                        }\r\n\r\n                        <Form className={classes.AdminProfileEdit} onSubmit={ uploadPhotoHandler }>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    id=\"iconImg\"\r\n                                    type=\"file\"\r\n                                    name=\"adminImg\"\r\n                                    style = {{display: \"none\"}}\r\n                                    onChange = {(e) => setFile(e.target.files[0])}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button id=\"btnImg\" type='submit' style={{display:'none'}}></Button>\r\n                        </Form>\r\n\r\n                        <h3>{aUser.data.user.username}</h3>\r\n                        <h2>Summary</h2>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <Link to = \"/admin-summary/reports\">\r\n                                <AdminProfileButton>Reports</AdminProfileButton>\r\n                            </Link>\r\n                            <Link to = '/admin-summary/proposals'>\r\n                                <AdminProfileButton>Proposals</AdminProfileButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Personal Information</h2>\r\n                        <div>\r\n                            <div className={classes.AdminProfileFormDiv}>\r\n                                <div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.city}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"region\">Region</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.region}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h2>Login Credentials</h2>\r\n                        <div>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={classes.AdminProfileFormDiv}>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Email Address</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Email address\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Password</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.ButtonDiv}>\r\n                                    <SubmitButton />\r\n                                    <CancelButton />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        {/* LOGIN CREDENTIALS */}\r\n\r\n                        {/* <h6>Fill this up to change password</h6>\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}>\r\n                                <Form>\r\n                                    <div className={classes.AdminProfileFormDiv}>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Email Address</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Email address\"\r\n                                                type=\"email\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                            />\r\n                                            <ErrorMessage name='email' component={TextError} />\r\n                                        </div>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Password</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                            />\r\n                                            <ErrorMessage name='password' component={TextError} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.ButtonDiv}>\r\n                                        <SubmitButton />\r\n                                        <CancelButton />\r\n                                    </div>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminProfile;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["445"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport classes from './AdminProposals.module.css';\r\n\r\nconst AdminProposals = () => {\r\n    //Without AXIOS\r\n    const [proposals, setProposals] = useState();\r\n    \r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('api/proposals');\r\n            \r\n            const responseData = await response.json();\r\n\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const string = 'watch?v=S_mgSHCWCmA';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProposals}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Proposals</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>            \r\n                            <th>ID</th>  \r\n                            <th>Title</th>\r\n                            <th>Location</th>\r\n                            <th>Upvote</th>\r\n                            <th>Downvote</th>\r\n                            <th>Status</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {proposals && proposals.map((proposal) => (\r\n                        <tr key={proposal._id}>\r\n                            <td>{proposal._id}</td>\r\n                            <td>{proposal.title}</td>\r\n                            <td>{proposal.location}</td>\r\n                            <td>{proposal.upvote}</td>\r\n                            <td>{proposal.downvote}</td>\r\n                            <td>{proposal.status}</td>\r\n                            <td><Link to={'/admin-proposal/' + proposal._id}>Click here</Link></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-proposals'>\r\n                        <button className={classes.Button}>Create Proposals</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProposals;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",["446"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport axios from 'axios'\r\nimport '../Applicants/Applicants.css'\r\n\r\nconst AdminUsers = () => {\r\n    const [citizenUser, setCitizenUser] = useState([]);\r\n    const [citizenID, setCitizenID] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getCitizen = async () => {\r\n            const res = await axios.get(`/api/citizen/?status=${true}`);\r\n            setCitizenUser(res.data);\r\n\r\n            if(res.data[0] === undefined) {\r\n                setCitizenID(null);\r\n            } else {\r\n                setCitizenID(res.data[0]._id);\r\n            }\r\n        }\r\n\r\n        getCitizen();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <Container>\r\n                    <div  className = 'Applicants-header'>\r\n                        <h1>Users</h1>\r\n                    </div>\r\n\r\n                    <div  className = 'col-md-10 offset-md-1' id = 'Applicants-body'>\r\n                        {citizenID !== undefined && citizenID !== null ? (\r\n                        <>\r\n                            <Row>\r\n                                <Col className='Applicants-searchTitle'><h4>Lastname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Firstname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Status</h4></Col>\r\n                                <Col className='Applicants-searchTitle' id = 'applicantEmail'><h4>Email</h4></Col>\r\n                                <Col className='Applicants-searchTitle'></Col>\r\n                            </Row>\r\n                            {citizenUser.map((A) => (\r\n                                <Row key={A._id}>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.lastname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.firstname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>Approved</h4></Col>\r\n                                    <Col className='Applicants-searchResult' id = 'applicantEmail'><h4>{A.email}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4><Link to = {`/Admin-viewUsers/${A._id}`}><i className=\"fas fa-external-link-alt\"></i></Link></h4></Col>\r\n                                </Row>\r\n                            ))}\r\n                        </>\r\n                        ) : (\r\n                            <h4 style={{textAlign: \"center\", color: \"grey\"}}>No current users</h4>\r\n                        )}\r\n                    </div>\r\n                </Container>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminUsers;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["447"],"import React, { useEffect, useState, useParams } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport classes from './AdminProjects.module.css';\r\n\r\nconst AdminProjects = ( props ) => {\r\n    const [projects, setProjects] = useState();    \r\n    // const { handle } = useParams();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    //const string = 'watch?v=S_mgSHCWCmA';\r\n    console.log(projects);\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProjects}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Projects</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project ID</th>\r\n                            <th>Project Title</th>\r\n                            <th>Date</th>\r\n                            <th>Time</th>\r\n                            <th>Location</th>\r\n                            <th>Status</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects && projects.map(project => (\r\n                        <tr key={project._id}>\r\n                            <td>{project._id}</td>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.date}</td>\r\n                            <td>Time</td>\r\n                            <td>{project.location}</td>\r\n                            <td>{project.status}</td>\r\n                            {/* <td><a href={'/admin-project/:id'}>Click here</a></td> */}\r\n                            <td>\r\n                                <Link to={'/admin-project/' + project._id}>Click here</Link>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-projects'>\r\n                        <button className={classes.Button}>Create Projects</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProjects;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["448","449","450","451"],"import React, { useContext, useState } from 'react';\r\n// import { useFormik } from 'formik';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProposals.module.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminCreateProposals = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProposal = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProposal.coverImage = res.data.secure_url;\r\n            // console.log(data);\r\n\r\n            try {\r\n                const res = await axios.post('/api/proposals/', createProposal);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data);\r\n        // console.log('data-image' + data.coverImage[0]);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProposalsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Proposals</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProposalsContentDiv}>\r\n                <form className={classes.AdminCreateProposalForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProposalFormDiv}>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                defaultValue={aUser.data.user.username}\r\n                                ref={register}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Proposal Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Proposal Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Description</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [ coverImage, setCoverImage ] = useState()\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: ''\r\n//         },\r\n//         onSubmit: values => {\r\n\r\n//             let data = new FormData();\r\n//             data.append('coverImage', values.coverImage);\r\n\r\n//             console.log('Form data', values);\r\n//             console.log({\r\n//                 fileName: values.file.name,\r\n//             });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n\r\n//     return(\r\n        // <AdminLayout>\r\n        //     <div className={classes.AdminCreateProposalsHeader}>\r\n        //         <CardHeader>\r\n        //             <h2 className={classes.Text}>Proposals</h2>\r\n        //         </CardHeader>\r\n        //     </div>\r\n        //     <div className={classes.AdminCreateProposalsContentDiv}>\r\n        //         <form className={classes.AdminCreateProposalForm} onSubmit={formik.handleSubmit}>\r\n        //             <div className={classes.AdminCreateProposalFormDiv}>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Username</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='userName'\r\n        //                         name='userName'\r\n        //                         placeholder='Username'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={aUser.user.username}\r\n        //                     />\r\n        //                     { formik.touched.userName && formik.errors.userName ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n        //                         ) : null }\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Proposal Title</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='title'\r\n        //                         name='title'\r\n        //                         placeholder='Proposal Title'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.title}\r\n        //                     />\r\n        //                     { formik.touched.title && formik.errors.title ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Description</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='description'\r\n        //                         name='description'\r\n        //                         placeholder='Description'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.description}\r\n        //                     />\r\n        //                     { formik.touched.description && formik.errors.description ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='location'\r\n        //                         name='location'\r\n        //                         placeholder='Location'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.location}\r\n        //                     />\r\n        //                     { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='file'\r\n        //                         id='coverImage'\r\n        //                         name='coverImage'\r\n        //                         placeholder='Location'\r\n        //                         onChange={(event) => {\r\n        //                             setCoverImage('coverImage', event.currentTarget.files[0]);\r\n        //                         }}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.coverImage}\r\n        //                     />\r\n        //                     {/* { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null} */}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className={classes.ButtonDiv}>\r\n        //                 <SubmitButton />\r\n        //                 <CancelButton />\r\n        //             </div>\r\n        //         </form>\r\n        //         <div className={classes.QuoteDiv}>\r\n        //             <p className={classes.Quote}>{messageCap}</p>\r\n        //         </div>\r\n        //     </div>\r\n        //  </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     // const [userName, setUserName] = useState('');\r\n//     // const [title, setTitle] = useState('');\r\n//     // const [description, setDescription] = useState('');\r\n//     // const [location, setLocation] = useState('');\r\n//     // const [message, setMessage] = useState('');\r\n//     // const [coverImage, setCoverImage] = useState(null);\r\n\r\n//     // const onChangeFile = e => {\r\n//     //     setCoverImage(e.target.files[0]);\r\n//     // }\r\n\r\n//     // const changeOnClick = (e) => {\r\n//     //     e.preventDefault();\r\n\r\n//     //     const formData = new FormData();\r\n//     //     formData.append('userName', userName);\r\n//     //     formData.append('title', title);\r\n//     //     formData.append('description', description);\r\n//     //     formData.append('location', location);\r\n//     //     formData.append('coverImage', coverImage);\r\n\r\n//     //     setUserName('');\r\n//     //     setTitle('');\r\n//     //     setDescription('');\r\n//     //     setLocation('');\r\n        \r\n//     //     console.log(formData);\r\n//     // }\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const formData = new FormData();\r\n//             //formData.append('coverImage', coverImage);\r\n//             axios.post('/api/proposals', values);\r\n//             console.log(values);\r\n//             //console.log(formData)\r\n//             //const formData = await new FormData();\r\n\r\n//             // formData.append('userName', values.userName);\r\n//             // formData.append('title', title);\r\n//             // formData.append('description', description);\r\n//             // formData.append('location', location);\r\n\r\n//             // setUserName('');\r\n//             // setTitle('');\r\n//             // setDescription('');\r\n//             // setLocation('');\r\n\r\n//             // axios.post('/api/proposals', formData)\r\n//             //     .then((res) => setMessage(res.data))\r\n//             //     .catch((err) => {\r\n//             //         console.log(err);\r\n//             // });\r\n//             // console.log(userName);\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n//     //console.log(aUser.user.username);\r\n//     //console.log('Form values', formik.values); \r\n\r\n//     return(\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProposalsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Proposals</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProposalsContentDiv}>\r\n//                 <form className={classes.AdminCreateProposalForm} onSubmit={formik.onSubmit}>\r\n//                     <div className={classes.AdminCreateProposalFormDiv}>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 className={classes.Input}\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='Username'\r\n//                                 //onChange={(e) => setUserName(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={aUser.user.username}\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Proposal Title'\r\n//                                 //onChange={(e) => setTitle(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             {/* { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 // onChange={(e) => setDescription(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             {/* { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 // onChange={(e) => setLocation(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             {/* { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         {/* <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Image</label>\r\n//                             <Input\r\n//                                 type='file'\r\n//                                 id='coverImage'\r\n//                                 name='coverImage'\r\n//                                 placeholder='Insert Photo'\r\n//                                 onChange={onChangeFile}\r\n//                                 // onChange={e => {\r\n//                                 //     formik.handleChange;\r\n//                                 //     setFilename('coverImage', e.target.files[0]);\r\n//                                 // }}\r\n//                                 // value={formik.values.coverImage}\r\n//                             />\r\n//                             { formik.touched.coverImage && formik.errors.coverImage ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.coverImage}</div>\r\n//                                 ) : null}\r\n//                         </div> */}\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//                 <div className={classes.QuoteDiv}>\r\n//                     <p className={classes.Quote}>{messageCap}</p>\r\n//                 </div>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["452","453","454","455","456"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProjects.module.css';\r\n\r\nconst AdminCreateProjects = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProject = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.post('/api/projects', createProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProjectsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProjectsContentDiv}>\r\n                <form className={classes.AdminCreateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProjectsFormDiv}>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.userName && <p className={classes.InputValidation}>{errors.userName.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Proposal Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    )\r\n}\r\n\r\nexport default AdminCreateProjects;\r\n\r\n// const AdminCreateProjects = () => {\r\n//     const { aUser } = useContext(Context);\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: '',\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const {...data} = values;\r\n\r\n//             console.log('Form data', values);\r\n//             axios.post('/api/projects/', values);\r\n//                 // .catch(err => {\r\n//                 //     console.log('Error: ', err);\r\n//                 // });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n    \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <form className={classes.AdminCreateProjectsForm} onSubmit={formik.handleSubmit}>\r\n//                     <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='User'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.userName}\r\n//                                 disable\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Project Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Project Title'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;\r\n\r\n// import React from 'react';\r\n// import { Formik, Form, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// import CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n// import AdminLayout from '../AdminLayout/AdminLayout';\r\n// import Input from '../../../UI/Input/Input';\r\n// import FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\n// import classes from './AdminCreateProjects.module.css';\r\n// import axios from 'axios';\r\n\r\n\r\n// const initialValues = {\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     location: ''\r\n// };\r\n\r\n// const onSubmit = async (values) => {\r\n//     console.log('Form values', values);\r\n\r\n//     const {...data} = values;\r\n//     const res = await axios.post('/api/projects', data)\r\n//         .catch(err => {\r\n//             console.log('Error: ', err.res.data);\r\n//         });\r\n// };\r\n\r\n// // const validate = values => {\r\n// //     let errors ={};\r\n\r\n// //     if (!values.title) errors.title = \"Required\";\r\n// //     if (!values.description) errors.description = \"Required\";\r\n// //     if (!values.date) errors.date = \"Required\";\r\n// //     if (!values.location) errors.location = \"Required\";\r\n\r\n// //     return errors;\r\n// // }\r\n\r\n// const validationSchema = Yup.object({\r\n//     title: Yup.string().required('Required'),\r\n//     description: Yup.string().required('Required'),\r\n//     date: Yup.string().required('Required'),\r\n//     location: Yup.string().required('Required')\r\n// });\r\n\r\n// const AdminCreateProjects = ( props ) => {\r\n//     // const formik = useFormik({\r\n//     //     initialValues,\r\n//     //     onSubmit,\r\n//     //     validationSchema\r\n//     // });\r\n\r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                 >\r\n//                     <Form className={classes.AdminCreateProjectsForm}>\r\n//                         <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Title\"\r\n//                                     id=\"title\"\r\n//                                     name=\"title\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"title\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Description</label>\r\n//                                 <FormikInput\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Description\"\r\n//                                     id=\"description\"\r\n//                                     name=\"description\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"description\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>When</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Date\"\r\n//                                     id=\"date\"\r\n//                                     name=\"date\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"date\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Where</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Location\"\r\n//                                     id=\"location\"\r\n//                                     name=\"location\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"location\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <SubmitButton />\r\n//                             <CancelButton />\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n            \r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["457"],"import React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminConversations from './AdminConversations/AdminConversations';\r\nimport AdminMessage from './AdminMessage/AdminMessage';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminMessages.module.css';\r\n\r\nconst AdminMessages = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chatMessages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const { aUser } = useContext(Context);\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8800\");\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            }); \r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", aUser.data.user._id);\r\n        socket.current.on(\"getUsers\", aUser => {\r\n            console.log(aUser);\r\n        });\r\n    }, [aUser]);\r\n    // insert this code soon:\r\n    // const { user } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/conversations/\" + aUser.data.user._id);\r\n                // const res = await axios.get(\"/api/conversations/\" + aUser.data?.user?._id);\r\n                setConversations(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        getConversations();\r\n    }, [aUser.data.user._id]);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n                setMessages(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat]);\r\n\r\n    // console.log(currentChat);\r\n   \r\n    // console.log(aUser.data.user._id);\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: aUser.data.user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        };\r\n\r\n        const receiverId = currentChat.members.find(member => member !== aUser.data.user._id);\r\n        \r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: aUser.data.user._id,\r\n            receiverId,\r\n            text: newMessage\r\n        });\r\n\r\n        console.log(receiverId);\r\n\r\n        try {\r\n            const res = await axios.post(\"/api/messages/\", message);\r\n            setMessages([...chatMessages, res.data]);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [chatMessages])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        {\r\n                            conversations.map(c => (\r\n                                <div onClick={() => setCurrentChat(c)}>\r\n                                    <AdminConversations conversation={c} currentUser={aUser.data?.user}  />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {/* <AdminConversations /> */}\r\n                    </div>\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            {\r\n                                <>\r\n                                    <div className={classes.AdminChatBoxTop}>\r\n                                        {chatMessages.map(m => (\r\n                                            <div ref={scrollRef}>\r\n                                                <AdminMessage messages={m} own={m.sender === aUser.data.user?._id} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className={classes.AdminChatBoxBottom}>\r\n                                        <textarea\r\n                                            className={classes.ChatMessageInput}\r\n                                            placeholder=\"Write something...\"\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            value={newMessage}\r\n                                        ></textarea>\r\n                                        <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;\r\n// import React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { io } from 'socket.io-client';\r\n\r\n// import CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n// import AdminLayout from '../AdminLayout/AdminLayout';\r\n// import AdminConversations from './AdminConversations/AdminConversations';\r\n// import AdminMessage from './AdminMessage/AdminMessage';\r\n// import { Context } from '../../../../context/Context';\r\n\r\n// import classes from './AdminMessages.module.css';\r\n\r\n// const AdminMessages = ( props ) => {\r\n//     const [conversations, setConversations] = useState([]);\r\n//     const [currentChat, setCurrentChat] = useState(null);\r\n//     const [chatMessages, setMessages] = useState([]);\r\n//     const [newMessage, setNewMessage] = useState(\"\");\r\n//     const [arrivalMessage, setArrivalMessage] = useState(null);\r\n//     const socket = useRef();\r\n//     const { aUser } = useContext(Context);\r\n//     const scrollRef = useRef();\r\n\r\n//     useEffect(() => {\r\n//         socket.current = io(\"ws://localhost:8800\");\r\n//         socket.current.on(\"getMessage\", data => {\r\n//             setArrivalMessage({\r\n//                 sender: data.senderId,\r\n//                 text: data.text,\r\n//                 createdAt: Date.now()\r\n//             }); \r\n//         });\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n//         setMessages(prev => [...prev, arrivalMessage])\r\n//     }, [arrivalMessage, currentChat]);\r\n\r\n//     useEffect(() => {\r\n//         socket.current.emit(\"addUser\", aUser.data.user._id);\r\n//         socket.current.on(\"getUsers\", aUser => {\r\n//             console.log(aUser);\r\n//         });\r\n//     }, [aUser]);\r\n//     // insert this code soon:\r\n//     // const { user } = useContext(Context)\r\n\r\n//     useEffect(() => {\r\n//         const getConversations = async () => {\r\n//             try {\r\n//                 const res = await axios.get(\"/api/conversations/\" + aUser.data?.user?._id);\r\n//                 setConversations(res.data);\r\n//                 //console.log(res);\r\n//             } catch(err) {\r\n//                 console.log(err);\r\n//             }\r\n//         };\r\n\r\n//         getConversations();\r\n//     }, [aUser.data.user._id]);\r\n\r\n//     useEffect(() => {\r\n//         const getMessages = async () => {\r\n//             try {\r\n//                 const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n//                 setMessages(res.data);\r\n//                 //console.log(res);\r\n//             } catch(err) {\r\n//                 console.log(err);\r\n//             }\r\n//         };\r\n//         getMessages();\r\n//     }, [currentChat]);\r\n\r\n//     // console.log(currentChat);\r\n   \r\n//     // console.log(aUser.data.user._id);\r\n//    const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const message = {\r\n//             sender: aUser.data.user._id,\r\n//             text: newMessage,\r\n//             conversationId: currentChat._id\r\n//         };\r\n\r\n//         const receiverId = currentChat.members.find(member => member !== aUser.data.user._id);\r\n        \r\n//         socket.current.emit(\"sendMessage\", {\r\n//             senderId: aUser.data.user._id,\r\n//             receiverId,\r\n//             text: newMessage\r\n//         });\r\n\r\n//         try {\r\n//             const res = await axios.post(\"/api/messages/\", message);\r\n//             setMessages([...chatMessages, res.data]);\r\n//         } catch(err) {\r\n//             console.log(err);\r\n//         }\r\n//         // window.location.reload(false);\r\n//     };\r\n\r\n//     // useEffect(() => {\r\n        \r\n//     // }, []);\r\n\r\n//     useEffect(() => {\r\n//         scrollRef.current?.scrollIntoView({\r\n//             behavior: \"smooth\"\r\n//         });\r\n//     }, [chatMessages])\r\n\r\n//     console.log(chatMessages);\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <AdminLayout>\r\n//                 <div className={classes.AdminMessages}>\r\n//                     <CardHeader>\r\n//                         <h2 className={classes.Text}>Messages</h2>\r\n//                     </CardHeader>\r\n//                 </div>\r\n//                 <div className={classes.Messenger}>\r\n//                     <div className={classes.AdminChatMenu}>\r\n//                         <input\r\n//                             placeholder=\"Search messages\"\r\n//                             className={classes.AdminChatMenuSearch}\r\n//                         />\r\n//                         {\r\n//                             conversations.map(c => (\r\n//                                 <div onClick={() => setCurrentChat(c)}>\r\n//                                     <AdminConversations conversation={c} currentUser={aUser.data?.user}  />\r\n//                                 </div>\r\n//                             ))\r\n//                         }\r\n//                         {/* <AdminConversations /> */}\r\n//                     </div>\r\n//                     <div className={classes.AdminChat}>\r\n//                         <div className={classes.AdminChatWrapper}>\r\n//                             {\r\n//                                 <>\r\n//                                     <div className={classes.AdminChatBoxTop}>\r\n//                                         {chatMessages.map(m => (\r\n//                                             <div ref={scrollRef} >\r\n//                                                 <AdminMessage messages={m} own={m.sender === aUser.data.user?._id} key={m._id}/>\r\n//                                             </div>\r\n//                                         ))}\r\n//                                     </div>\r\n//                                     <div className={classes.AdminChatBoxBottom}>\r\n//                                         <textarea\r\n//                                             className={classes.ChatMessageInput}\r\n//                                             placeholder=\"Write something...\"\r\n//                                             onChange={(e) => setNewMessage(e.target.value)}\r\n//                                             value={newMessage}\r\n//                                         ></textarea>\r\n//                                         <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n//                                     </div>\r\n//                                 </>\r\n//                             }\r\n//                         </div>\r\n//                     </div> \r\n//                 </div>\r\n//             </AdminLayout>\r\n//         </React.Fragment>\r\n//     );\r\n// };\r\n\r\n// export default AdminMessages;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogout\\AdminLogout.js",[],["458","459"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["460","461"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ReportsNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ReportsNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg reportNavbar-mainbg\">\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\" data-toggle=\"dropdown\" data-target=\"#reportNavbarSupportedContent\" aria-controls=\"reportNavbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"reportnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Confirmed\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Cancelled\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Resolved\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ReportsNav);","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSideBar.jsx",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["462","463"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ProposalNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ProposalNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg proposalNavbar-mainbg\">\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"proposalnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Approved\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Rejected\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                My Proposals\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ProposalNav);","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",["464"],"import React, { useState, useContext } from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport './CitizenPassUpdate.css';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\n\r\n\r\n// const CitizenPassUpdate = () => (\r\n//     <>\r\n//         <Container className = 'citizenPassUpdate-container'>\r\n//             <Form className = 'citizenPassUpdate-edit'>\r\n//                     <h3>Update Password</h3>\r\n\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Current Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"curpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>New Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"newpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Confirm Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"conpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Row className='citizenPassUpdate-BtnContainer'>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n//                         </Col>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '#' className = 'citizenPassUpdate-Btn'>Change</Link>\r\n//                         </Col>\r\n//                     </Row>\r\n//                 </Form>\r\n//         </Container>\r\n//     </>\r\n// );\r\n\r\n\r\nconst CitizenPassUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n\r\n    const passwordUpdate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const checkPass = {\r\n            userId: user.data.user._id,\r\n            oldPassword,\r\n        }\r\n\r\n        console.log(checkPass)\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/password-citizenCompare\", checkPass)\r\n\r\n            dispatch({ type: \"UPDATE_START\" })\r\n            const updateAccount = {\r\n                userId: user.data.user._id,\r\n                newPassword,\r\n                token: user.token,\r\n            }\r\n            try {\r\n                const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Update Successfull',\r\n                    text: '',\r\n                });\r\n                \r\n                Array.from(document.querySelectorAll(\"input\")).forEach(\r\n                    input => (input.value = \"\"),\r\n                    setOldPassword(\"\"),\r\n                    setNewPassword(\"\"),\r\n                );\r\n\r\n                setRedirect(true);\r\n                \r\n                dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n            } catch (err) {\r\n                console.log(err);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${err.response.status}`,\r\n                    text: `${err.response.data.message}`,\r\n                });\r\n                dispatch({ type: \"UPDATE_FAILURE\" })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-profile' />) }\r\n            <Container className = 'citizenPassUpdate-container'>\r\n                <Form className = 'citizenPassUpdate-edit' onSubmit = { passwordUpdate }>\r\n                        <h3>Update Password</h3>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Current Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setOldPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setNewPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        \r\n                        <Row className='citizenPassUpdate-BtnContainer'>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n                            </Col>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Button className = 'citizenPassUpdate-Btn' variant = \"danger\" type = 'submit'>Change</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\nexport default CitizenPassUpdate;\r\n    ","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["465","466","467","468"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["469","470"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["471","472","473"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\n// import classes from '../../CitizenProposals/CreateProposals/CitizenCreateProposals.module.css';\r\n// import './CitizenSubmitReport.css';\r\nimport classes from './CitizenSubmitReport.module.css';\r\n\r\nconst CitizenSubmitReport = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const reportData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                reportData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/reports', reportData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            { redirect && (<Redirect to = '/citizen-reports' />) }\r\n            <Container className={classes.CitizenSubmitReportsContentContainer}>\r\n                <Row>\r\n                    <div className={classes.CitizenSubmitReportsQuotesDiv}>\r\n                        <h1>Found a problem? Go submit a report</h1>\r\n                    </div>\r\n                    <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.CitizenSubmitReportForm}>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Row className={classes.CitizenSubmitReportFormInput}>\r\n                                            <label>Report Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Report Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        <Row className={classes.CitizenSubmitReportFormInput}>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className={classes.CitizenSubmitReportHeader}>\r\n                                        <h2>Reporting a problem or an issue is your <span className={classes.texthighlight}>ambag</span></h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className={classes.CitizenSubmitReportFormInput}>\r\n                                        <label>Location</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Location\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.CitizenSubmitReportPhotoInputContainer}>\r\n                                    <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n                                    <Col className={classes.CitizenSubmitReportPhotoInput}>\r\n                                        <div className={classes.CitizenSubmitReportImg}>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={classes.CitizenSubmitReportButtonDiv}>\r\n                                            <SubmitButton />\r\n                                            <button type=\"reset\" className={classes.CitizenSubmitReportClearBtn}>Clear</button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Form>\r\n                    </Formik>\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* <Container className=\"citizenSubmitReport-container\">\r\n                <Row>\r\n                    <div className=\"citizen-header\">\r\n                        <h1>Found a problem? Go submit a report</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className=\"citizenSubmitReport-edit\">\r\n                            <Col>\r\n                                <Row className=\"citizenSubmitReportFormTopRow\">\r\n                                    <Col className=\"citizenSubmitReportFormTopRow2\">\r\n                                        <Row className=\"citizenSubmitReport-input\">\r\n                                            <label>Report Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Report Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className=\"citizenSubmitReportQuote\">\r\n                                        <h2>Reporting a problem or an issue is your <span className=\"text-highlight\">ambag</span></h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    <Col className=\"citizenSubmitReport-input\">\r\n                                        <label>Location</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Location\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.CitizenCreateProposalPhotoInput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"ButtonDiv\">\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Form>\r\n                    </Formik>  \r\n                </Row>\r\n            </Container> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CitizenSubmitReport;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["474"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../../context/Context';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport './CitizenProfile.css';\r\n\r\nconst CitizenProfile = () => {\r\n    const { user, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [logs, setLogs] = useState([]);\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const citizen = user.data.user.firstname + \" \" + user.data.user.lastname;\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/citizens/?user=${citizen}`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        fetchLogs();\r\n    }, [])\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<div style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></div>\";\r\n            })}`,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"UPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: user.token,\r\n        }\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                    dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n        \r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"UPDATE_FAILURE\" })\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n        }\r\n    }\r\n    return(\r\n        <Container className = 'citizenProfile-container'>\r\n            <div className = 'citizenAccountImg-shadow'>\r\n                <div className = 'citizenAccountImg'>\r\n                    <img src= {file ? (URL.createObjectURL(file)) : `${user.data.user.profilePic}`} alt=\"\" ></img>\r\n                </div>\r\n            </div>\r\n            \r\n            {iconUpload === false &&\r\n                <>\r\n                    <div className = 'citizenProfile-changeLink'>\r\n                        <p onClick = { setIconTrue }>Change Profile Picture?</p>\r\n                    </div>\r\n\r\n                    <div className=\"citizenProfile-changeImg\">\r\n                        <Form.Label ><i className=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {iconUpload &&\r\n                <div className=\"citizenProfile-changeImg\">\r\n                    <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n                    <Form.Label  htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                </div>\r\n            }\r\n\r\n            <div  className = 'col-md-10 offset-md-1' id = 'citizenProfile-body'>\r\n                <div className = 'citizenProfile-name'> \r\n                     <p>{user.data.user.firstname + \" \" + user.data.user.middlename + \" \" + user.data.user.lastname}</p>\r\n                 </div>\r\n                 <div className = 'citizenProfile-statsDesktop'>\r\n                    <Row>\r\n                        <Col className = 'citizenProfile-Badge'>\r\n                            <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img src='' alt=\"badge\"></img> \r\n                             </div>\r\n                            <h4>Badge</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Proposals Created</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Approved Proposals</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Verified Reports</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Voted Proposals</h4>\r\n                                    <p>1</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className = 'citizenProfile-statsMobile'>\r\n                    <Col>\r\n                        <Row className = 'citizenProfile-Badge'>\r\n                            <Col>\r\n                                <Row>\r\n                                    <div className = 'citizenProfile-BadgeImg'>\r\n                                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"badge\"></img>\r\n                                    </div>\r\n                                </Row>\r\n                                <Row><h4>KEVIN</h4></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                                <Col>\r\n                                    <Row><h4>Proposals Created</h4></Row>\r\n                                    <Row><p>1</p></Row>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                            <Row><h4>Approved Proposals</h4></Row>\r\n                            <Row><p>1</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Verified Reports</h4></Row>\r\n                                <Row><p>1</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Voted Proposals</h4></Row>\r\n                                <Row><p>1</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n            \r\n            <Form className = 'citizenProfile-edit' onSubmit = { handleSubmit }>\r\n                <h3>Personal Information</h3>\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                        id=\"iconImg\"\r\n                        type=\"file\"\r\n                        name=\"citizenImg\"\r\n                        style = {{display: \"none\"}}\r\n                        onChange = {(e) => setFile(e.target.files[0])}\r\n                    />\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"lname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.lastname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"fname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.firstname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"mname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.middlename}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Suffix</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.suffix}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sex\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.sex}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Birth Date</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.birthdate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Full Address</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.street +\" \"+user.data.user.barangay +\" \"+user.data.user.city +\" \"+user.data.user.region}\r\n                    />\r\n                </Form.Group>\r\n                \r\n                <h3>Login Credentials</h3>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.email}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button id=\"btnImg\" type = 'submit' style={{display:'none'}}></Button>\r\n            </Form>\r\n            <Link to = '/citizen-pass-update' className = 'citizenProfile-passwordUpdate'><i className=\"editIcon far fa-edit\"></i></Link>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CitizenProfile;\r\n// import React, { useState } from 'react';\r\n// import { useFormik } from 'formik';\r\n// import ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\n// import ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n// import classes from './CitizenProfile.module.css';\r\n// const initialValues = {\r\n//     last_name: '',\r\n//     first_name: '',\r\n//     middle_name: '',\r\n//     suffix: '',\r\n//     sex: '',\r\n//     birthdate: '',\r\n//     address:'',\r\n//     email: '',\r\n//     password: ''\r\n// }\r\n// const onSubmit = values => {\r\n//     console.log('Form data', values)\r\n// };\r\n// const CitizenProfile = () => {\r\n//     const formik = useFormik({\r\n//         initialValues,\r\n//         onSubmit: values => {\r\n//             console.log('Form values', values)\r\n//         }\r\n//     });\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <CitizenLayout>\r\n//                 <div className={classes.Content}>\r\n//                     <div className={classes.CitizenProfile}>\r\n//                         <ProfileIconCard />\r\n                        \r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <CitizenProfileButton>Proposals Created</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Approved Proposals</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Verified Reports</CitizenProfileButton>\r\n//                             <CitizenProfileButton>Voted Proposals</CitizenProfileButton>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <h2>Personal Information</h2>\r\n//                         <div>\r\n//                             <form className={classes.CitizenProfileFormDiv}>\r\n//                                 <div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"last_name\">Last Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Last Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"last_name\"\r\n//                                             name=\"last_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.last_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"first_name\">First Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"First Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"first_name\"\r\n//                                             name=\"first_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.first_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"middle_name\">Middle Name</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Middle Name\"\r\n//                                             type=\"text\"\r\n//                                             id=\"middle_name\"\r\n//                                             name=\"middle_name\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.middle_name}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"suffix\">Suffix</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Suffix\"\r\n//                                             type=\"text\"\r\n//                                             id=\"suffix\"\r\n//                                             name=\"suffix\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.suffix}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"sex\">Sex</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"sex\"\r\n//                                             type=\"text\"\r\n//                                             id=\"sex\"\r\n//                                             name=\"sex\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.sex}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"birthdate\">Birthdate</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Birthdate\"\r\n//                                             type=\"text\"\r\n//                                             id=\"birthdate\"\r\n//                                             name=\"birthdate\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.birthdate}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label htmlFor=\"address\">Full Addreses</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Address\"\r\n//                                             type=\"text\"\r\n//                                             id=\"address\"\r\n//                                             name=\"address\"\r\n//                                             readOnly=\"readOnly\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.address}\r\n//                                         />\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n//                         {/* LOGIN CREDENTIALS */}\r\n//                         <h2>Login Credentials</h2>\r\n//                         <div>\r\n//                             <form onSubmit={formik.handleSubmit}>\r\n//                                 <div className={classes.CitizenProfileFormDiv}>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label>Email Address</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Email address\"\r\n//                                             type=\"email\"\r\n//                                             id=\"email\"\r\n//                                             name=\"email\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.email}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className={classes.InputDiv}>\r\n//                                         <label>Password</label>\r\n//                                         <ProfileInput\r\n//                                             placeholder=\"Password\"\r\n//                                             type=\"password\"\r\n//                                             id=\"password\"\r\n//                                             name=\"password\"\r\n//                                             onChange={formik.handleChange}\r\n//                                             value={formik.values.password}\r\n//                                         />\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className={classes.ButtonDiv}>\r\n//                                     <SubmitButton />\r\n//                                     <CancelButton />\r\n//                                 </div>\r\n//                             </form>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </CitizenLayout>\r\n//         </React.Fragment>\r\n//     );\r\n// }\r\n// export default CitizenProfile;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenLogout\\CitizenLogout.jsx",[],["475","476"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["477","478","479","480"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router';\r\nimport { Row, Col, Container, Button } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CitizenCreateProposal = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const proposalData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                proposalData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/proposals', proposalData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n    // console.log(citizenUser.user.data.user._id);\r\n    return(\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-proposals' />) }\r\n            <Container className={classes.CitizenCreateProposalContentContainer}>\r\n                <Row>\r\n                    <div className={classes.QuoteDiv}>\r\n                        <h1>Go create your proposal and make an impact!</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.CitizenCreateProposalForm}>\r\n                            <Col>\r\n                                <Row className={classes.CitizenCreateProposalFormTopRow}>\r\n                                    <Col className={classes.CitizenCreateProposalFormTopRow2}>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Proposal Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Proposal Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className={classes.CitizenCreateProposalHeader}>\r\n                                            <h2>Pursue your calling </h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label>Where</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Where\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                    {/* <Col></Col> */}\r\n                                </Row>\r\n                                <Row className={classes.CitizenSubmitProposalPhotoInputContainer}>\r\n                                    <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n                                    <Col className={classes.CitizenCreateProposalPhotoInput}>\r\n                                        <div className={classes.CitizenCreateProposalImg}>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"icon fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n\r\n                                    {/* <Col></Col> */}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={classes.ButtonDiv}>\r\n                                            <SubmitButton />\r\n                                            <button type=\"reset\" className={classes.CitizenCreateProposalClearBtn}>Clear</button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Form>\r\n                    </Formik>    \r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    //  {/* <React.Fragment> */}\r\n    //          {/* <div className={classes.CitizenCreateProposalContentDiv}> */}\r\n    //              {/* <div className={classes.QuoteDiv}> */}\r\n    //                  {/* <h1>Go create your proposal and make an impact!</h1> */}\r\n    //              {/* </div> */}\r\n\r\n    //              {/* <Formik */}\r\n    //                 {/* //  initialValues={initialValues}\r\n    //                 //  validationSchema={validationSchema}\r\n    //                 //  onSubmit={onSubmit}\r\n    //             //  > */}\r\n    //                  {/* <Form className={classes.CitizenCreateProposalForm}> */}\r\n    //                      {/* <div className={classes.CitizenCreateProposalFormDiv}> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Proposal Title</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Proposal Title\"\r\n    //                                 //  id=\"title\"\r\n    //                                 //  name=\"title\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"title\"> */}\r\n    //                                  {/* {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>} */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Description</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Description\"\r\n    //                                 //  id=\"description\"\r\n    //                                 //  name=\"description\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"name\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>When</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"When\"\r\n    //                                 //  id=\"date\"\r\n    //                                 //  name=\"date\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"date\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Where</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Where\"\r\n    //                                 //  id=\"location\"\r\n    //                                 //  name=\"location\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"location\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                      {/* </div> */}\r\n    //                      {/* <div className={classes.ButtonDiv}> */}\r\n    //                          {/* <SubmitButton /> */}\r\n    //                          {/* <CancelButton /> */}\r\n    //                      {/* </div> */}\r\n    //                  {/* </Form> */}\r\n    //              {/* </Formik> */}\r\n    //          {/* </div> */}\r\n    //      {/* </React.Fragment> */}\r\n    );\r\n};\r\n\r\nexport default CitizenCreateProposal;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["481","482","483"],"import React from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './CitizenViewReport.css';\r\n\r\nconst CitizenViewReport = () => (\r\n    <>\r\n        <Container className = 'citizenViewReport-container'>\r\n            <Row className=\"citizenViewReport-header\">\r\n                <Row>\r\n                    <Col claasName=\"citizenViewReport-title\">\r\n                    <h2>Ahay</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-auth\">\r\n                    <Col>Reporter: IC</Col>\r\n                    <Col>Submitted on: September 22, 2021</Col>\r\n                </Row>\r\n            </Row>\r\n            <Row className=\"citizenViewReport-description\">\r\n                <p>So ayun nga, nag catgirl ata yung prof namin sa klase. Di ako sure mismo kasi nakaasa lang ako sa chat namin nung oras na yun.</p>\r\n            </Row> \r\n            <Row className=\"citizenViewReport-footer\">\r\n                <Row className=\"citizenViewReport-details\">\r\n                    <Col>Where: Cainta, Rizal</Col>\r\n                    <Col>Status: Confirmed</Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-img-container\">\r\n                    <Col className=\"citizenViewReport-img-frame\">\r\n                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"Report\"></img>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n);\r\nexport default CitizenViewReport;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["484","485","486","487","488","489"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["490","491","492","493","494","495"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",["496","497","498"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["499"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './AdminConversations.module.css';\r\n\r\nconst AdminConversations = ({conversation, currentUser}) => {\r\n    //insert soon\r\n    const [citizenUser, setCitizenUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const friendId = conversation.members.find(m => m !== currentUser._id);\r\n        \r\n        // console.log(\"current user is \" + currentUser.user._id);\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/citizen/' + friendId);\r\n                setCitizenUser(res.data);\r\n                // console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    //console.log(citizenUser);\r\n    //console.log(citizenUser._id);\r\n    return(\r\n        <div className={classes.AdminConversations}>\r\n            <img \r\n                className={classes.AdminConversationsImg} \r\n                src=\"https://images.pexels.com/photos/1165999/pexels-photo-1165999.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" \r\n                alt=\"sample-image\" />\r\n            <span className={classes.ConversationName}>{citizenUser?.firstname + ' ' + citizenUser?.lastname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminConversations;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["500"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenConversations.module.css';\r\n\r\nconst CitizenConversations = ({conversation, currentUser}) => {\r\n    const [adminUser, setAdminUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const adminId = conversation.members.find(m => m !== currentUser._id);\r\n        //console.log(\"current user \" + adminId);\r\n\r\n        const getAdminUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/admin/' + adminId);\r\n                setAdminUser(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }; \r\n        getAdminUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    \r\n    //console.log(currentUser);\r\n\r\n    return(\r\n        <div className={classes.CitizenConversations}>\r\n            <img \r\n                className={classes.CitizenConversationsImg}\r\n                src={currentUser.data.user.profilePic}\r\n                alt=\"sample-image\"\r\n            />\r\n            <span className={classes.ConversationName}>{adminUser?.username}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitizenConversations;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSubMenu.jsx",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenCatNav\\CitizenSideBarData.jsx",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525"],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["526"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport CardSummary from '../../../UI/Cards/CardDashboard/CardSummary';\r\n\r\nimport classes from './AdminProposalsDashboard.module.css';\r\nimport Tables from '../../../UI/Tables/Tables';\r\n\r\nconst AdminProposalsDashboard = () => {\r\n    const [topProposals, setTopProposals] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    let rCount = 0;\r\n    \r\n    useEffect(() => {\r\n        const fetchTopProposals = async () => {\r\n            const res = await axios.get('/api/proposals/topProposals');\r\n            setTopProposals(res.data);\r\n        }\r\n\r\n        fetchTopProposals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        const fetchApproved = async () => {\r\n            const res = await axios.get('/api/proposals/approved');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setAccepted(count);\r\n        }\r\n\r\n        fetchApproved();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchRejected = async () => {\r\n            const res = await axios.get('/api/proposals/rejected');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setRejected(count);\r\n        }\r\n\r\n        fetchRejected();\r\n    }, []);\r\n\r\n    console.log(topProposals);\r\n    console.log(accepted);\r\n    console.log(rejected);\r\n\r\n    \r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProposalsDashboard}>\r\n                <CardHeader>\r\n                <h2 className={classes.Text}>Proposals Summary</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.LeaderboardsHeader}>\r\n                <h3>Leaderboards</h3>\r\n            </div>\r\n            <div className={classes.Divider}>\r\n                <div className={classes.TableDiv}>\r\n                    <table className={classes.Table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Proposal ID</th>\r\n                                <th>Proposal Title</th>\r\n                                <th>Upvote</th>\r\n                                <th>Downvote</th>\r\n                                <th>Percentage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {topProposals.map((p) => (\r\n                                <tr key = {p._id}>\r\n                                    <td>{++rCount}</td>\r\n                                    <td>{p._id}</td>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.upvote.length}</td>\r\n                                    <td>{p.downvote.length}</td>\r\n                                    <td>{Math.trunc(((p.upvote.length - p.downvote.length) / (p.upvote.length + p.downvote.length)) * 100)}%</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className={classes.CardData}>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Approved Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{accepted}</p>\r\n                    </CardSummary>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Rejected Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{rejected}</p>\r\n                    </CardSummary>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default AdminProposalsDashboard;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["527","528","529","530","531","532","533"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\nimport classes from './AdminUpdateProject.module.css';\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    description: '',\r\n    location: ''\r\n}\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    title: Yup.string().required('Required!'),\r\n    description: Yup.string().required('Required!'),\r\n    location: Yup.string().required('Required!')\r\n});\r\n\r\nconst AdminUpdateProject = () => {\r\n    const [currentProject, setCurrentProject] = useState([]);\r\n    const [formValues, setFormValues] = useState(null);\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const findProject = async () => {\r\n          const response = await fetch('/api/projects/' + params.id);\r\n          const responseData = await response.json();\r\n          //console.log(responseData);\r\n          setCurrentProject(responseData.data.project);\r\n        }\r\n        findProject();\r\n      }, []);\r\n\r\n    const onSubmit = values => {\r\n        console.log('Form values', values);\r\n        axios.patch('/api/projects/' + params.id, values);\r\n    }\r\n\r\n    // const validationSchema = Yup.object({\r\n    //     title: Yup.string().required('Required!'),\r\n    //     description: Yup.string().required('Required!'),\r\n    //     location: Yup.string().required('Required!')\r\n    // });\r\n\r\n    // const formik = useFormik({\r\n    //     initialValues: {\r\n    //         title: null,\r\n    //         description: '',\r\n    //         location: '',\r\n    //     },\r\n    //     onSubmit: values => {\r\n    //         //const {...data} = values;\r\n\r\n    //         console.log('Form data', values);\r\n    //         // axios.patch('/api/projects/' + params.id, {\r\n\r\n    //         // });\r\n    //             // .catch(err => {\r\n    //             //     console.log('Error: ', err);\r\n    //             // });\r\n    //     },\r\n    //     validationSchema\r\n    // });\r\n\r\n    return (\r\n        // <AdminLayout>\r\n        //     <div className={classes.AdminProjects}>\r\n        //         <CardHeader>\r\n        //             <h2 className={classes.Text}>Projects</h2>\r\n        //         </CardHeader>\r\n        //     </div>\r\n        //     <div className={classes.AdminUpdateProjectsContentDiv}>\r\n        //         <form className={classes.AdminUpdateProjectsForm} onSubmit={formik.handleSubmit}>\r\n        //             <div className={classes.AdminUpdateProjectsFormDiv}>\r\n        //                 <div className={classes.AdminUpdateProjectsFormInput}>\r\n        //                     <label>Project Title</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='title'\r\n        //                         name='title'\r\n        //                         placeholder='Project Title'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={currentProject.title}\r\n                                \r\n        //                     />\r\n        //                 </div>\r\n        //                 <div className={classes.AdminUpdateProjectsFormInput}>\r\n        //                     <label>Description</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='description'\r\n        //                         name='description'\r\n        //                         placeholder='Description'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={currentProject.description}\r\n                                \r\n        //                     />\r\n        //                 </div>\r\n        //                 <div className={classes.AdminUpdateProjectsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='location'\r\n        //                         name='location'\r\n        //                         placeholder='Location'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={currentProject.location}\r\n        //                     />\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className={classes.ButtonDiv}>\r\n        //                 <button className={classes.UpdateButton} type=\"submit\">Update</button>\r\n        //             </div>\r\n        //         </form>\r\n        //     </div>\r\n        // </AdminLayout>\r\n\r\n        <AdminLayout>\r\n            <div className={classes.AdminProjects}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminUpdateProjectsContentDiv}>\r\n                <Formik\r\n                    initialValues={formValues || initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                    enableReinitialize>\r\n                    <Form className={classes.AdminUpdateProjectsForm}>\r\n                        <div className={classes.AdminUpdateProjectsFormDiv}>\r\n                            <div className={classes.AdminUpdateProjectsFormInput}>\r\n                                <label>Project Title</label>\r\n                                <Field\r\n                                    className={classes.FormikInput}\r\n                                    type='text'\r\n                                    id='title'\r\n                                    name='title'\r\n                                    placeholder='Project Title'\r\n                                />\r\n                                <ErrorMessage name='title' />\r\n                            </div>\r\n                            <div className={classes.AdminUpdateProjectsFormInput}>\r\n                                <label>Description</label>\r\n                                <Field\r\n                                    className={classes.FormikInput}\r\n                                    type='text'\r\n                                    id='description'\r\n                                    name='description'\r\n                                    placeholder='Description'\r\n                                />\r\n                                <ErrorMessage name='description' />\r\n                            </div>\r\n                            <div className={classes.AdminUpdateProjectsFormInput}>\r\n                                <label>Location</label>\r\n                                <Field\r\n                                    className={classes.FormikInput}\r\n                                    type='text'\r\n                                    id='location'\r\n                                    name='location'\r\n                                    placeholder='Location'\r\n                                />\r\n                                <ErrorMessage name='location' />\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n                            <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n                                console.log('Button');\r\n                                setFormValues(currentProject);\r\n                            }}>Load Data</button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminUpdateProject;","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["534","535","536","537","538"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProject.module.css\";\r\n\r\nconst AdminEachProject = () => {\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProject = async () => {\r\n      const response = await fetch('/api/projects/' + params.id);\r\n      const responseData = await response.json();\r\n      //console.log(responseData);\r\n      setCurrentProject(responseData.data.project);\r\n    }\r\n    findProject();\r\n  }, []);\r\n \r\n\r\n  const accomplished = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Accomplished'\r\n    });\r\n    console.log(response);\r\n  };\r\n\r\n  const ongoing = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Ongoing'\r\n    });\r\n    console.log(response);\r\n  };\r\n  \r\n  console.log(currentProject.coverImage);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProject}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Projects</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProjectDiv}>\r\n        <h3 className={classes.TitleText}>{currentProject.title}</h3>\r\n        <div className={classes.ProjectInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n             {currentProject.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProject.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={ongoing} disabled={disable}>Ongoing</button>\r\n          <button className={classes.Button} onClick={accomplished}>Accomplished</button>\r\n          <Link to={'/admin-update-project/' + params.id}>\r\n            <button className={classes.Button}>Update</button>\r\n          </Link>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProject;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["539","540"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProposal.module.css\";\r\n\r\nconst AdminEachProposal = () => {\r\n  const [currentProposal, setCurrentProposal] = useState([]);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProposal = async () => {\r\n      const response = await fetch('/api/proposals/' + params.id);\r\n      const responseData = await response.json();\r\n\r\n      setCurrentProposal(responseData.data.proposal);\r\n    }\r\n    findProposal();\r\n  }, []);\r\n\r\n  \r\n  const approveProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Approved'\r\n    });\r\n  };\r\n\r\n  const rejectProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Rejected'\r\n    });\r\n  };\r\n\r\n  const deleteProposal = () => {\r\n    axios.delete('/api/proposals/' + params.id);\r\n    console.log('Delete')\r\n  };\r\n\r\n  const upVoteProposal = () => {\r\n    axios.patch('/api/proposals/upVote/' + params.id);\r\n    console.log('Upvote');\r\n  }\r\n\r\n  const downVoteProposals = () => {\r\n    axios.patch('/api/proposals/downVote/' + params.id);\r\n    console.log('Downvote');\r\n  }\r\n  //console.log(currentProposal.coverImage);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProposals}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Proposals</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProposalDiv}>\r\n        <h3 className={classes.TitleText}>{currentProposal.title}</h3>\r\n        <div className={classes.ProposalInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentProposal.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProposal.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.VoteDiv}>\r\n        <button className={classes.VoteButton} onClick={upVoteProposal}>Upvote</button>\r\n        <button className={classes.VoteButton} onClick={downVoteProposals}>Downvote</button>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={approveProposal}>Approve</button>\r\n          <button className={classes.Button} onClick={rejectProposal}>Reject</button>\r\n          <button className={classes.Button} onClick={deleteProposal}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProposal;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["541","542"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachReport.module.css\";\r\n\r\nconst AdminEachReport = () => {\r\n  const [currentReport, setCurrentReport] = useState([]);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findReport = async () => {\r\n      const response = await fetch('/api/reports/' + params.id);\r\n      const responseData = await response.json();\r\n \r\n      setCurrentReport(responseData.data.report);\r\n    }\r\n    findReport();\r\n  }, []);\r\n\r\n  const confirmReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Confirmed'\r\n    });\r\n    console.log(res);\r\n  };\r\n\r\n  const cancelReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Cancelled'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const resolveReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Resolved'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const deleteReport = async () => {\r\n    const res = await axios.delete('/api/reports/' + params.id);\r\n    console.log('Delete Reports');\r\n  }\r\n\r\n  //console.log(currentReport);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachReport}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Reports</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ReportDiv}>\r\n        <h3 className={classes.TitleText}>{currentReport.title}</h3>\r\n        <div className={classes.ReportInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentReport.description}\r\n            </p>\r\n          </div>\r\n          <p>Image Source</p>\r\n        </div>\r\n        <div className={classes.Gallery}>\r\n            <h5>Image Placeholder</h5>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={confirmReport}>Confirm</button>\r\n          <button className={classes.Button} onClick={cancelReport}>Cancel</button>\r\n          <button className={classes.Button} onClick={resolveReport}>Resolved</button>\r\n          <button className={classes.Button} onClick={deleteReport}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachReport;\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js",[],"C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["543","544","545"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Form, Container, Button } from 'react-bootstrap';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport { Context } from '../../../../context/Context';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport './SingleUsers.css';\r\n\r\nconst SingleUsers = () => {\r\n    const settings = {\r\n        dots: true,\r\n        fade: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        className: 'slides'\r\n    }\r\n\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [applicant, setApplicant] = useState([]);\r\n    const [validID, setValidID] = useState([]);\r\n    const [birthCert, setBirthCert] = useState([]);\r\n    const [residency, setResidency] = useState([]);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { aUser } = useContext(Context); \r\n\r\n    useEffect(() => {\r\n        const getApplicant = async ()=>{\r\n            const res = await axios.get(\"/api/citizen/\" + path)\r\n            setApplicant(res.data)\r\n            setValidID(res.data.validIDPic)\r\n            setResidency(res.data.residencyPic)\r\n            setBirthCert(res.data.birthCertPic)\r\n        }\r\n\r\n        getApplicant();\r\n\r\n    }, [path]);\r\n    \r\n    const handleAccept = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/\" + path, admin);\r\n            Swal.fire('Applicant Accepted', \"You've successfuly accepted an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleReject = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.delete(`/api/citizen/${path}`, { data: admin });\r\n            Swal.fire('Applicant Rejected', \"You've rejected an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/Applicants' />) }\r\n            <Container className = 'Applicant-verificationContainer'>\r\n                <div  className = 'ApplicantVerification-header'>\r\n                    <h1>SmartCTzen User</h1>\r\n                </div>\r\n\r\n                <div className = 'ApplicantVerification-body'>\r\n                    <Form className=\"ApplicantVerification-form\">\r\n                        <Form.Group>\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.firstname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.lastname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Middle name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.middlename}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Suffix</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.suffix === \"\" ? \"N/A\" : applicant.suffix }\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Sex</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.sex}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Birtdate</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.birthdate}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.street + ' ' + applicant.barangay + ' ' + applicant.city}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Region</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.region}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.province}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Zipcode</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.zipcode}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Valid ID</h1>\r\n                        </div>\r\n\r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {validID.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Proof of Residency</h1>\r\n                        </div>\r\n\r\n                        \r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {residency.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        {birthCert[0] !== undefined &&\r\n                            <> \r\n                                <div  className = 'ApplicantVerification-header'>\r\n                                    <h1>Birth Certificate</h1>\r\n                                </div>\r\n\r\n                                \r\n                                <div className = 'applicantDocumentsImg'>\r\n                                    <Slider {...settings}>\r\n                                        {birthCert.map((pic) => (\r\n                                            <div key={pic}>\r\n                                                <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Slider>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Form>\r\n\r\n                    <Link to = '/admin-users' className = 'ApplicantVerificationLink'>Back</Link>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleUsers\r\n","C:\\Users\\Kevin\\Documents\\GitHub\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["546","547"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenChatOnline.module.css';\r\n\r\nconst CitizenChatOnline = ({currentId, setCurrentChat}) => {\r\n    const [allAdmins, setAllAdmins] = useState();\r\n\r\n\r\n    //Gets all admins\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/admin');\r\n            const responseData = await response.json();\r\n            setAllAdmins(responseData);\r\n            //console.log(responseData)\r\n        }\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const handleClick = async (user) => {\r\n        try {\r\n            const res = await fetch(`/api/conversations/${currentId}/${user._id}` );\r\n            //setCurrentChat(res)\r\n            console.log(res);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n   //console.log(allAdmins);\r\n\r\n    return ( \r\n        <div className={classes.ChatOnline}>\r\n            {/* Display Admins */}\r\n            {allAdmins && allAdmins.map((admin) => (\r\n            <div className={classes.ChatOnlineAdmin} key={admin._id}  onClick={() => handleClick(admin)}> \r\n                <div className={classes.ChatOnlineImageContainer}>\r\n                <img \r\n                    className={classes.ChatOnlineImage}\r\n                    src=\"https://images.pexels.com/photos/7322511/pexels-photo-7322511.jpeg?cs=srgb&dl=pexels-koolshooters-7322511.jpg&fm=jpg\" \r\n                />\r\n                <div className={classes.ChatOnlineBadge}></div>\r\n                </div>\r\n                <span className={classes.ChatOnlineName}>{admin.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CitizenChatOnline;\r\n\r\n",{"ruleId":"548","replacedBy":"549"},{"ruleId":"550","replacedBy":"551"},{"ruleId":"552","severity":1,"message":"553","line":48,"column":8,"nodeType":"554","messageId":"555","endLine":48,"endColumn":19},{"ruleId":"552","severity":1,"message":"556","line":49,"column":8,"nodeType":"554","messageId":"555","endLine":49,"endColumn":18},{"ruleId":"552","severity":1,"message":"557","line":1,"column":39,"nodeType":"554","messageId":"555","endLine":1,"endColumn":45},{"ruleId":"552","severity":1,"message":"558","line":5,"column":10,"nodeType":"554","messageId":"555","endLine":5,"endColumn":19},{"ruleId":"552","severity":1,"message":"559","line":28,"column":11,"nodeType":"554","messageId":"555","endLine":28,"endColumn":16},{"ruleId":"552","severity":1,"message":"560","line":28,"column":28,"nodeType":"554","messageId":"555","endLine":28,"endColumn":38},{"ruleId":"552","severity":1,"message":"561","line":3,"column":10,"nodeType":"554","messageId":"555","endLine":3,"endColumn":13},{"ruleId":"552","severity":1,"message":"562","line":3,"column":15,"nodeType":"554","messageId":"555","endLine":3,"endColumn":18},{"ruleId":"552","severity":1,"message":"563","line":3,"column":26,"nodeType":"554","messageId":"555","endLine":3,"endColumn":35},{"ruleId":"552","severity":1,"message":"564","line":11,"column":8,"nodeType":"554","messageId":"555","endLine":11,"endColumn":23},{"ruleId":"552","severity":1,"message":"565","line":18,"column":10,"nodeType":"554","messageId":"555","endLine":18,"endColumn":19},{"ruleId":"552","severity":1,"message":"566","line":19,"column":8,"nodeType":"554","messageId":"555","endLine":19,"endColumn":17},{"ruleId":"552","severity":1,"message":"567","line":23,"column":7,"nodeType":"554","messageId":"555","endLine":23,"endColumn":23},{"ruleId":"552","severity":1,"message":"568","line":24,"column":11,"nodeType":"554","messageId":"555","endLine":24,"endColumn":17},{"ruleId":"552","severity":1,"message":"569","line":4,"column":8,"nodeType":"554","messageId":"555","endLine":4,"endColumn":18},{"ruleId":"552","severity":1,"message":"570","line":1,"column":38,"nodeType":"554","messageId":"555","endLine":1,"endColumn":47},{"ruleId":"552","severity":1,"message":"571","line":1,"column":29,"nodeType":"554","messageId":"555","endLine":1,"endColumn":37},{"ruleId":"552","severity":1,"message":"572","line":4,"column":13,"nodeType":"554","messageId":"555","endLine":4,"endColumn":16},{"ruleId":"552","severity":1,"message":"573","line":9,"column":8,"nodeType":"554","messageId":"555","endLine":9,"endColumn":13},{"ruleId":"552","severity":1,"message":"574","line":45,"column":23,"nodeType":"554","messageId":"555","endLine":45,"endColumn":26},{"ruleId":"552","severity":1,"message":"575","line":3,"column":10,"nodeType":"554","messageId":"555","endLine":3,"endColumn":19},{"ruleId":"552","severity":1,"message":"572","line":4,"column":13,"nodeType":"554","messageId":"555","endLine":4,"endColumn":16},{"ruleId":"552","severity":1,"message":"573","line":10,"column":8,"nodeType":"554","messageId":"555","endLine":10,"endColumn":13},{"ruleId":"552","severity":1,"message":"559","line":18,"column":13,"nodeType":"554","messageId":"555","endLine":18,"endColumn":18},{"ruleId":"552","severity":1,"message":"574","line":44,"column":23,"nodeType":"554","messageId":"555","endLine":44,"endColumn":26},{"ruleId":"552","severity":1,"message":"576","line":1,"column":40,"nodeType":"554","messageId":"555","endLine":1,"endColumn":50},{"ruleId":"548","replacedBy":"577"},{"ruleId":"550","replacedBy":"578"},{"ruleId":"552","severity":1,"message":"579","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":14},{"ruleId":"552","severity":1,"message":"580","line":4,"column":10,"nodeType":"554","messageId":"555","endLine":4,"endColumn":13},{"ruleId":"552","severity":1,"message":"579","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":14},{"ruleId":"552","severity":1,"message":"580","line":4,"column":10,"nodeType":"554","messageId":"555","endLine":4,"endColumn":13},{"ruleId":"552","severity":1,"message":"581","line":8,"column":8,"nodeType":"554","messageId":"555","endLine":8,"endColumn":20},{"ruleId":"552","severity":1,"message":"582","line":4,"column":15,"nodeType":"554","messageId":"555","endLine":4,"endColumn":21},{"ruleId":"552","severity":1,"message":"583","line":5,"column":16,"nodeType":"554","messageId":"555","endLine":5,"endColumn":23},{"ruleId":"552","severity":1,"message":"584","line":9,"column":12,"nodeType":"554","messageId":"555","endLine":9,"endColumn":17},{"ruleId":"552","severity":1,"message":"585","line":9,"column":19,"nodeType":"554","messageId":"555","endLine":9,"endColumn":27},{"ruleId":"552","severity":1,"message":"586","line":7,"column":10,"nodeType":"554","messageId":"555","endLine":7,"endColumn":16},{"ruleId":"552","severity":1,"message":"587","line":27,"column":15,"nodeType":"554","messageId":"555","endLine":27,"endColumn":23},{"ruleId":"552","severity":1,"message":"581","line":8,"column":8,"nodeType":"554","messageId":"555","endLine":8,"endColumn":20},{"ruleId":"588","severity":1,"message":"589","line":32,"column":7,"nodeType":"590","endLine":32,"endColumn":9,"suggestions":"591"},{"ruleId":"552","severity":1,"message":"574","line":76,"column":27,"nodeType":"554","messageId":"555","endLine":76,"endColumn":30},{"ruleId":"588","severity":1,"message":"592","line":24,"column":8,"nodeType":"590","endLine":24,"endColumn":10,"suggestions":"593"},{"ruleId":"548","replacedBy":"594"},{"ruleId":"550","replacedBy":"595"},{"ruleId":"552","severity":1,"message":"586","line":5,"column":31,"nodeType":"554","messageId":"555","endLine":5,"endColumn":37},{"ruleId":"552","severity":1,"message":"581","line":8,"column":8,"nodeType":"554","messageId":"555","endLine":8,"endColumn":20},{"ruleId":"588","severity":1,"message":"589","line":31,"column":7,"nodeType":"590","endLine":31,"endColumn":9,"suggestions":"596"},{"ruleId":"552","severity":1,"message":"574","line":75,"column":27,"nodeType":"554","messageId":"555","endLine":75,"endColumn":30},{"ruleId":"552","severity":1,"message":"597","line":2,"column":20,"nodeType":"554","messageId":"555","endLine":2,"endColumn":24},{"ruleId":"552","severity":1,"message":"586","line":2,"column":26,"nodeType":"554","messageId":"555","endLine":2,"endColumn":32},{"ruleId":"552","severity":1,"message":"579","line":3,"column":10,"nodeType":"554","messageId":"555","endLine":3,"endColumn":14},{"ruleId":"552","severity":1,"message":"598","line":4,"column":8,"nodeType":"554","messageId":"555","endLine":4,"endColumn":13},{"ruleId":"552","severity":1,"message":"556","line":5,"column":8,"nodeType":"554","messageId":"555","endLine":5,"endColumn":18},{"ruleId":"552","severity":1,"message":"597","line":6,"column":20,"nodeType":"554","messageId":"555","endLine":6,"endColumn":24},{"ruleId":"552","severity":1,"message":"586","line":6,"column":26,"nodeType":"554","messageId":"555","endLine":6,"endColumn":32},{"ruleId":"552","severity":1,"message":"583","line":7,"column":10,"nodeType":"554","messageId":"555","endLine":7,"endColumn":17},{"ruleId":"552","severity":1,"message":"599","line":22,"column":11,"nodeType":"554","messageId":"555","endLine":22,"endColumn":23},{"ruleId":"552","severity":1,"message":"598","line":2,"column":8,"nodeType":"554","messageId":"555","endLine":2,"endColumn":13},{"ruleId":"552","severity":1,"message":"586","line":3,"column":20,"nodeType":"554","messageId":"555","endLine":3,"endColumn":26},{"ruleId":"552","severity":1,"message":"600","line":11,"column":12,"nodeType":"554","messageId":"555","endLine":11,"endColumn":21},{"ruleId":"552","severity":1,"message":"601","line":11,"column":23,"nodeType":"554","messageId":"555","endLine":11,"endColumn":35},{"ruleId":"552","severity":1,"message":"602","line":12,"column":11,"nodeType":"554","messageId":"555","endLine":12,"endColumn":20},{"ruleId":"588","severity":1,"message":"603","line":21,"column":7,"nodeType":"590","endLine":21,"endColumn":9,"suggestions":"604"},{"ruleId":"552","severity":1,"message":"576","line":1,"column":58,"nodeType":"554","messageId":"555","endLine":1,"endColumn":68},{"ruleId":"552","severity":1,"message":"605","line":6,"column":8,"nodeType":"554","messageId":"555","endLine":6,"endColumn":19},{"ruleId":"552","severity":1,"message":"606","line":23,"column":11,"nodeType":"554","messageId":"555","endLine":23,"endColumn":20},{"ruleId":"607","severity":1,"message":"608","line":31,"column":13,"nodeType":"609","endLine":34,"endColumn":38},{"ruleId":"607","severity":1,"message":"608","line":30,"column":13,"nodeType":"609","endLine":34,"endColumn":15},{"ruleId":"552","severity":1,"message":"610","line":3,"column":39,"nodeType":"554","messageId":"555","endLine":3,"endColumn":48},{"ruleId":"552","severity":1,"message":"611","line":3,"column":50,"nodeType":"554","messageId":"555","endLine":3,"endColumn":63},{"ruleId":"552","severity":1,"message":"612","line":4,"column":45,"nodeType":"554","messageId":"555","endLine":4,"endColumn":62},{"ruleId":"552","severity":1,"message":"579","line":5,"column":10,"nodeType":"554","messageId":"555","endLine":5,"endColumn":14},{"ruleId":"552","severity":1,"message":"613","line":5,"column":16,"nodeType":"554","messageId":"555","endLine":5,"endColumn":24},{"ruleId":"552","severity":1,"message":"614","line":7,"column":8,"nodeType":"554","messageId":"555","endLine":7,"endColumn":19},{"ruleId":"552","severity":1,"message":"615","line":17,"column":19,"nodeType":"554","messageId":"555","endLine":17,"endColumn":27},{"ruleId":"552","severity":1,"message":"616","line":18,"column":12,"nodeType":"554","messageId":"555","endLine":18,"endColumn":19},{"ruleId":"552","severity":1,"message":"617","line":18,"column":21,"nodeType":"554","messageId":"555","endLine":18,"endColumn":31},{"ruleId":"552","severity":1,"message":"618","line":19,"column":12,"nodeType":"554","messageId":"555","endLine":19,"endColumn":20},{"ruleId":"552","severity":1,"message":"619","line":19,"column":22,"nodeType":"554","messageId":"555","endLine":19,"endColumn":33},{"ruleId":"552","severity":1,"message":"620","line":20,"column":9,"nodeType":"554","messageId":"555","endLine":20,"endColumn":14},{"ruleId":"588","severity":1,"message":"621","line":40,"column":7,"nodeType":"590","endLine":40,"endColumn":9,"suggestions":"622"},{"ruleId":"623","severity":1,"message":"624","line":55,"column":26,"nodeType":"625","messageId":"626","endLine":55,"endColumn":28},{"ruleId":"588","severity":1,"message":"627","line":63,"column":7,"nodeType":"590","endLine":63,"endColumn":17,"suggestions":"628"},{"ruleId":"623","severity":1,"message":"624","line":78,"column":26,"nodeType":"625","messageId":"626","endLine":78,"endColumn":28},{"ruleId":"588","severity":1,"message":"627","line":86,"column":7,"nodeType":"590","endLine":86,"endColumn":17,"suggestions":"629"},{"ruleId":"552","severity":1,"message":"587","line":95,"column":23,"nodeType":"554","messageId":"555","endLine":95,"endColumn":31},{"ruleId":"552","severity":1,"message":"630","line":105,"column":23,"nodeType":"554","messageId":"555","endLine":105,"endColumn":32},{"ruleId":"552","severity":1,"message":"587","line":117,"column":23,"nodeType":"554","messageId":"555","endLine":117,"endColumn":31},{"ruleId":"552","severity":1,"message":"587","line":140,"column":27,"nodeType":"554","messageId":"555","endLine":140,"endColumn":35},{"ruleId":"552","severity":1,"message":"630","line":151,"column":27,"nodeType":"554","messageId":"555","endLine":151,"endColumn":36},{"ruleId":"552","severity":1,"message":"587","line":164,"column":23,"nodeType":"554","messageId":"555","endLine":164,"endColumn":31},{"ruleId":"552","severity":1,"message":"574","line":192,"column":15,"nodeType":"554","messageId":"555","endLine":192,"endColumn":18},{"ruleId":"631","severity":1,"message":"632","line":298,"column":29,"nodeType":"609","endLine":298,"endColumn":71},{"ruleId":"552","severity":1,"message":"633","line":9,"column":8,"nodeType":"554","messageId":"555","endLine":9,"endColumn":14},{"ruleId":"552","severity":1,"message":"557","line":1,"column":27,"nodeType":"554","messageId":"555","endLine":1,"endColumn":33},{"ruleId":"552","severity":1,"message":"634","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":21},{"ruleId":"552","severity":1,"message":"575","line":3,"column":10,"nodeType":"554","messageId":"555","endLine":3,"endColumn":19},{"ruleId":"552","severity":1,"message":"573","line":8,"column":8,"nodeType":"554","messageId":"555","endLine":8,"endColumn":13},{"ruleId":"552","severity":1,"message":"635","line":10,"column":8,"nodeType":"554","messageId":"555","endLine":10,"endColumn":20},{"ruleId":"552","severity":1,"message":"581","line":11,"column":8,"nodeType":"554","messageId":"555","endLine":11,"endColumn":20},{"ruleId":"588","severity":1,"message":"636","line":42,"column":10,"nodeType":"590","endLine":42,"endColumn":12,"suggestions":"637"},{"ruleId":"552","severity":1,"message":"557","line":1,"column":27,"nodeType":"554","messageId":"555","endLine":1,"endColumn":33},{"ruleId":"552","severity":1,"message":"634","line":2,"column":10,"nodeType":"554","messageId":"555","endLine":2,"endColumn":21},{"ruleId":"552","severity":1,"message":"617","line":10,"column":19,"nodeType":"554","messageId":"555","endLine":10,"endColumn":29},{"ruleId":"588","severity":1,"message":"636","line":22,"column":6,"nodeType":"590","endLine":22,"endColumn":8,"suggestions":"638"},{"ruleId":"631","severity":1,"message":"632","line":56,"column":13,"nodeType":"609","endLine":56,"endColumn":78},{"ruleId":"588","severity":1,"message":"636","line":22,"column":6,"nodeType":"590","endLine":22,"endColumn":8,"suggestions":"639"},{"ruleId":"631","severity":1,"message":"632","line":69,"column":13,"nodeType":"609","endLine":69,"endColumn":79},{"ruleId":"588","severity":1,"message":"636","line":20,"column":6,"nodeType":"590","endLine":20,"endColumn":8,"suggestions":"640"},{"ruleId":"552","severity":1,"message":"574","line":44,"column":11,"nodeType":"554","messageId":"555","endLine":44,"endColumn":14},{"ruleId":"552","severity":1,"message":"586","line":2,"column":27,"nodeType":"554","messageId":"555","endLine":2,"endColumn":33},{"ruleId":"552","severity":1,"message":"641","line":46,"column":11,"nodeType":"554","messageId":"555","endLine":46,"endColumn":23},{"ruleId":"552","severity":1,"message":"642","line":71,"column":11,"nodeType":"554","messageId":"555","endLine":71,"endColumn":23},{"ruleId":"552","severity":1,"message":"598","line":1,"column":8,"nodeType":"554","messageId":"555","endLine":1,"endColumn":13},{"ruleId":"631","severity":1,"message":"632","line":39,"column":17,"nodeType":"609","endLine":42,"endColumn":19},"no-native-reassign",["643"],"no-negated-in-lhs",["644"],"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'ProfileIconCard' is defined but never used.","'propTypes' is defined but never used.","'TextError' is defined but never used.","'validationSchema' is assigned a value but never used.","'string' is assigned a value but never used.","'CardHeader' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","'Yup' is defined but never used.","'Input' is defined but never used.","'res' is assigned a value but never used.","'useFormik' is defined but never used.","'useReducer' is defined but never used.",["643"],["644"],"'Link' is defined but never used.","'Nav' is defined but never used.","'CancelButton' is defined but never used.","'Column' is defined but never used.","'NavLink' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","'Button' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.","ArrayExpression",["645"],"React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["646"],["643"],["644"],["647"],"'Form' is defined but never used.","'axios' is defined but never used.","'deletereport' is assigned a value but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["648"],"'AdminLayout' is defined but never used.","'scrollRef' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["649"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["650"],["651"],"'response2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Tables' is defined but never used.","'useLocation' is defined but never used.","'SubmitButton' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["652"],["653"],["654"],["655"],"'handleAccept' is assigned a value but never used.","'handleReject' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"656","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"665","fix":"667"},{"desc":"668","fix":"669"},{"desc":"668","fix":"670"},{"desc":"668","fix":"671"},{"desc":"668","fix":"672"},"Update the dependencies array to be: [citizenUser]",{"range":"673","text":"674"},"Update the dependencies array to be: [citizen]",{"range":"675","text":"676"},{"range":"677","text":"674"},"Update the dependencies array to be: [path]",{"range":"678","text":"679"},"Update the dependencies array to be: [proposalId]",{"range":"680","text":"681"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"682","text":"683"},{"range":"684","text":"683"},"Update the dependencies array to be: [params.id]",{"range":"685","text":"686"},{"range":"687","text":"686"},{"range":"688","text":"686"},{"range":"689","text":"686"},[1535,1537],"[citizenUser]",[914,916],"[citizen]",[1406,1408],[805,807],"[path]",[1790,1792],"[proposalId]",[2572,2582],"[proposal, user.data.user._id]",[3361,3371],[1442,1444],"[params.id]",[812,814],[712,714],[691,693]]