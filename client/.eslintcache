[{"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js":"1","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js":"2","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js":"3","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js":"4","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"5","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"6","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"7","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"8","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"9","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"10","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"11","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"12","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"13","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"14","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"15","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"16","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"17","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"18","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"19","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"20","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"21","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"22","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"23","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"24","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"25","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"26","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"27","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"28","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"29","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"30","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"31","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"32","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"33","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"34","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"35","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"36","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"37","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"38","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"39","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"40","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"41","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"42","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"43","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"44","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"45","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"46","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"47","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"48","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"49","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"50","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"51","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"52","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"53","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"54","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"55","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"56","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"57","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"58","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"59","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"60","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"61","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"62","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"63","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"64","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"65","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"66","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"67","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"68","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"69","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"70","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"71","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"72","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"73","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"74","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"75","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"76","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"77","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"78","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"79","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"80","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"81","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"82","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"83","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"84","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"85","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"86","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"87","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"88","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"89","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"90","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"91","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"92","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"93"},{"size":502,"mtime":1632024220082,"results":"94","hashOfConfig":"95"},{"size":14896,"mtime":1633095148072,"results":"96","hashOfConfig":"95"},{"size":1216,"mtime":1633083964466,"results":"97","hashOfConfig":"95"},{"size":3965,"mtime":1632787586711,"results":"98","hashOfConfig":"95"},{"size":4061,"mtime":1632647701956,"results":"99","hashOfConfig":"95"},{"size":2508,"mtime":1630923076504,"results":"100","hashOfConfig":"95"},{"size":3502,"mtime":1632787586718,"results":"101","hashOfConfig":"95"},{"size":1886,"mtime":1631521809228,"results":"102","hashOfConfig":"95"},{"size":4355,"mtime":1632787586714,"results":"103","hashOfConfig":"95"},{"size":5002,"mtime":1632159535339,"results":"104","hashOfConfig":"95"},{"size":4032,"mtime":1632572954074,"results":"105","hashOfConfig":"95"},{"size":9631,"mtime":1632848169039,"results":"106","hashOfConfig":"95"},{"size":3661,"mtime":1632572954083,"results":"107","hashOfConfig":"95"},{"size":9254,"mtime":1632848169073,"results":"108","hashOfConfig":"95"},{"size":2946,"mtime":1632787586886,"results":"109","hashOfConfig":"95"},{"size":3656,"mtime":1632572954089,"results":"110","hashOfConfig":"95"},{"size":10297,"mtime":1632848169110,"results":"111","hashOfConfig":"95"},{"size":2542,"mtime":1632787586873,"results":"112","hashOfConfig":"95"},{"size":3386,"mtime":1632787586794,"results":"113","hashOfConfig":"95"},{"size":2633,"mtime":1632647702328,"results":"114","hashOfConfig":"95"},{"size":2346,"mtime":1632647702242,"results":"115","hashOfConfig":"95"},{"size":2988,"mtime":1632572954093,"results":"116","hashOfConfig":"95"},{"size":3383,"mtime":1632787586860,"results":"117","hashOfConfig":"95"},{"size":3674,"mtime":1632647702405,"results":"118","hashOfConfig":"95"},{"size":9944,"mtime":1632907577045,"results":"119","hashOfConfig":"95"},{"size":7491,"mtime":1632647702226,"results":"120","hashOfConfig":"95"},{"size":2965,"mtime":1632848169177,"results":"121","hashOfConfig":"95"},{"size":3483,"mtime":1632647702390,"results":"122","hashOfConfig":"95"},{"size":2757,"mtime":1632647702360,"results":"123","hashOfConfig":"95"},{"size":5913,"mtime":1632848169146,"results":"124","hashOfConfig":"95"},{"size":8492,"mtime":1632647702221,"results":"125","hashOfConfig":"95"},{"size":3385,"mtime":1632787586503,"results":"126","hashOfConfig":"95"},{"size":2510,"mtime":1632787586510,"results":"127","hashOfConfig":"95"},{"size":3773,"mtime":1632787586573,"results":"128","hashOfConfig":"95"},{"size":9136,"mtime":1632986971756,"results":"129","hashOfConfig":"95"},{"size":4229,"mtime":1632572954098,"results":"130","hashOfConfig":"95"},{"size":2133,"mtime":1632889922032,"results":"131","hashOfConfig":"95"},{"size":2747,"mtime":1633191541732,"results":"132","hashOfConfig":"95"},{"size":4028,"mtime":1633168021981,"results":"133","hashOfConfig":"95"},{"size":2792,"mtime":1633095148163,"results":"134","hashOfConfig":"95"},{"size":6176,"mtime":1633254878815,"results":"135","hashOfConfig":"95"},{"size":22428,"mtime":1633250700418,"results":"136","hashOfConfig":"95"},{"size":2557,"mtime":1633142262885,"results":"137","hashOfConfig":"95"},{"size":2771,"mtime":1633174484442,"results":"138","hashOfConfig":"95"},{"size":4947,"mtime":1633253549166,"results":"139","hashOfConfig":"95"},{"size":2401,"mtime":1633141727284,"results":"140","hashOfConfig":"95"},{"size":4954,"mtime":1632848168851,"results":"141","hashOfConfig":"95"},{"size":7516,"mtime":1633243727775,"results":"142","hashOfConfig":"95"},{"size":2935,"mtime":1633243727229,"results":"143","hashOfConfig":"95"},{"size":10568,"mtime":1633243727245,"results":"144","hashOfConfig":"95"},{"size":8255,"mtime":1633243727621,"results":"145","hashOfConfig":"95"},{"size":18162,"mtime":1633177346588,"results":"146","hashOfConfig":"95"},{"size":11442,"mtime":1633243727183,"results":"147","hashOfConfig":"95"},{"size":13151,"mtime":1633191062610,"results":"148","hashOfConfig":"95"},{"size":3134,"mtime":1633002149954,"results":"149","hashOfConfig":"95"},{"size":733,"mtime":1632244653193,"results":"150","hashOfConfig":"95"},{"size":1027,"mtime":1632244653201,"results":"151","hashOfConfig":"95"},{"size":13373,"mtime":1633173506118,"results":"152","hashOfConfig":"95"},{"size":4269,"mtime":1633173506110,"results":"153","hashOfConfig":"95"},{"size":16060,"mtime":1633179669013,"results":"154","hashOfConfig":"95"},{"size":14233,"mtime":1633245262013,"results":"155","hashOfConfig":"95"},{"size":2155,"mtime":1633173506113,"results":"156","hashOfConfig":"95"},{"size":8393,"mtime":1633173506134,"results":"157","hashOfConfig":"95"},{"size":1561,"mtime":1632572954072,"results":"158","hashOfConfig":"95"},{"size":18193,"mtime":1633243727728,"results":"159","hashOfConfig":"95"},{"size":4478,"mtime":1633243727713,"results":"160","hashOfConfig":"95"},{"size":7456,"mtime":1633243492166,"results":"161","hashOfConfig":"95"},{"size":9606,"mtime":1633173506140,"results":"162","hashOfConfig":"95"},{"size":789,"mtime":1631772487985,"results":"163","hashOfConfig":"95"},{"size":1966,"mtime":1631772488004,"results":"164","hashOfConfig":"95"},{"size":1584,"mtime":1632787586544,"results":"165","hashOfConfig":"95"},{"size":637,"mtime":1633255345010,"results":"166","hashOfConfig":"95"},{"size":1403,"mtime":1633102175042,"results":"167","hashOfConfig":"95"},{"size":254,"mtime":1633151906818,"results":"168","hashOfConfig":"95"},{"size":211,"mtime":1629619238980,"results":"169","hashOfConfig":"95"},{"size":205,"mtime":1632596902141,"results":"170","hashOfConfig":"95"},{"size":425,"mtime":1633067938763,"results":"171","hashOfConfig":"95"},{"size":286,"mtime":1632591048936,"results":"172","hashOfConfig":"95"},{"size":255,"mtime":1632981125317,"results":"173","hashOfConfig":"95"},{"size":253,"mtime":1632979110420,"results":"174","hashOfConfig":"95"},{"size":359,"mtime":1633172938136,"results":"175","hashOfConfig":"95"},{"size":845,"mtime":1633227468606,"results":"176","hashOfConfig":"95"},{"size":1243,"mtime":1633227987704,"results":"177","hashOfConfig":"95"},{"size":1758,"mtime":1633235064490,"results":"178","hashOfConfig":"95"},{"size":432,"mtime":1632997362370,"results":"179","hashOfConfig":"95"},{"size":297,"mtime":1629618403252,"results":"180","hashOfConfig":"95"},{"size":210,"mtime":1630333640183,"results":"181","hashOfConfig":"95"},{"size":250,"mtime":1631322385105,"results":"182","hashOfConfig":"95"},{"size":245,"mtime":1629618143712,"results":"183","hashOfConfig":"95"},{"size":219,"mtime":1629617925559,"results":"184","hashOfConfig":"95"},{"size":462,"mtime":1631945107822,"results":"185","hashOfConfig":"95"},{"size":364,"mtime":1632033019368,"results":"186","hashOfConfig":"95"},{"size":2183,"mtime":1631521809200,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ijylg",{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js",["376","377"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["378","379","380","381"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["382"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["383"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["384"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["385","386"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["387","388"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["389","390"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["391","392","393","394"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from \"axios\";\r\n\r\nimport SubmitButton from \"../../../UI/Buttons/SubmitButton/SubmitButton\";\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from \"./AdminEachProposal.module.css\";\r\n\r\n\r\nconst AdminEachProposal = () => {\r\n  const [currentProposal, setCurrentProposal] = useState([]);\r\n  const [comments, setComments] = useState();\r\n  const { aUser } = useContext(Context);\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const params = useParams();\r\n  \r\n  //console.log(aUser.data.user.username);\r\n  \r\n  useEffect(() => {\r\n    const findProposal = async () => {\r\n      const response = await fetch('/api/proposals/' + params.id);\r\n      const responseData = await response.json();\r\n\r\n      setCurrentProposal(responseData.data.proposal);\r\n      setComments(responseData.data.proposal.comments);\r\n    }\r\n    findProposal();\r\n  }, []);\r\n\r\n  //console.log(currentProposal);\r\n  //console.log(comments);\r\n  \r\n  const approveProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Approved'\r\n    });\r\n  };\r\n\r\n  const rejectProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Rejected'\r\n    });\r\n  };\r\n\r\n  const deleteProposal = () => {\r\n    axios.delete('/api/proposals/' + params.id);\r\n    console.log('Delete')\r\n  };\r\n\r\n  const upVoteProposal = () => {\r\n    axios.patch('/api/proposals/upVote/' + params.id);\r\n    console.log('Upvote');\r\n  }\r\n\r\n  const downVoteProposals = () => {\r\n    axios.patch('/api/proposals/downVote/' + params.id);\r\n    console.log('Downvote');\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    \r\n    const values = {\r\n      user: aUser.data.user.username,\r\n      message: data.comment\r\n    }\r\n\r\n    console.log(values)\r\n\r\n    const res = await axios.patch(`/api/proposals/comments/${currentProposal._id}`, values)\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n      //setComments(responseData.data.proposal.comments);\r\n      //console.log(values);\r\n      window.location.reload(false);\r\n  }\r\n  //console.log(currentProposal.coverImage);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProposals}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Proposals</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProposalDiv}>\r\n        <h3 className={classes.TitleText}>{currentProposal.title}</h3>\r\n        <div className={classes.ProposalInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentProposal.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProposal.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.VoteDiv}>\r\n        <button className={classes.VoteButton} onClick={upVoteProposal}>Upvote</button>\r\n        <button className={classes.VoteButton} onClick={downVoteProposals}>Downvote</button>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={approveProposal}>Approve</button>\r\n          <button className={classes.Button} onClick={rejectProposal}>Reject</button>\r\n          <button className={classes.Button} onClick={deleteProposal}>Delete</button>\r\n      </div>\r\n      <div className={classes.AdminCommentFormDivContainer}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={classes.AdminCommentProposalFormDiv}>\r\n            <input\r\n              className={classes.Input}\r\n              type='text'\r\n              id='comment'\r\n              name='comment'\r\n              placeholder='Comment your thoughts...'\r\n              ref={register({ maxLength: 500 })}\r\n              />\r\n              {errors.comment && <p className={classes.InputValidation}>500 characters only</p>}\r\n            \r\n            <div className={classes.ButtonContainer}>\r\n              <SubmitButton />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {\r\n        comments && comments.map(comment => (\r\n          <div className={classes.AdminViewProposalComment} key={comment._id}>\r\n            <div className={classes.AdminViewProposalCommentDivImg}>\r\n              <img src='https://imgur.com/urZfDtd.png'/>\r\n            </div>\r\n            <div className={classes.AdminViewProposalCommentBody}>\r\n              <div>{comment.user}</div>\r\n              <div>{comment.message}</div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProposal;\r\n",["395","396"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["397","398","399","400","401"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["402","403"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["404","405","406","407","408"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["409","410","411","412","413","414"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["429","430"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["431","432"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["433","434","435"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["436","437","438","439","440","441"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["442","443"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["470","471","472","473","474","475"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["476","477","478","479","480","481"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["482","483","484"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["485"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",["486","487","488"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["489","490"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["491"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["492"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["493"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],{"ruleId":"494","severity":1,"message":"495","line":48,"column":8,"nodeType":"496","messageId":"497","endLine":48,"endColumn":19},{"ruleId":"494","severity":1,"message":"498","line":49,"column":8,"nodeType":"496","messageId":"497","endLine":49,"endColumn":18},{"ruleId":"494","severity":1,"message":"499","line":1,"column":39,"nodeType":"496","messageId":"497","endLine":1,"endColumn":45},{"ruleId":"494","severity":1,"message":"500","line":5,"column":10,"nodeType":"496","messageId":"497","endLine":5,"endColumn":19},{"ruleId":"494","severity":1,"message":"501","line":28,"column":11,"nodeType":"496","messageId":"497","endLine":28,"endColumn":16},{"ruleId":"494","severity":1,"message":"502","line":28,"column":28,"nodeType":"496","messageId":"497","endLine":28,"endColumn":38},{"ruleId":"494","severity":1,"message":"503","line":1,"column":38,"nodeType":"496","messageId":"497","endLine":1,"endColumn":47},{"ruleId":"494","severity":1,"message":"504","line":9,"column":8,"nodeType":"496","messageId":"497","endLine":9,"endColumn":14},{"ruleId":"494","severity":1,"message":"505","line":1,"column":40,"nodeType":"496","messageId":"497","endLine":1,"endColumn":50},{"ruleId":"494","severity":1,"message":"506","line":1,"column":29,"nodeType":"496","messageId":"497","endLine":1,"endColumn":37},{"ruleId":"494","severity":1,"message":"507","line":42,"column":23,"nodeType":"496","messageId":"497","endLine":42,"endColumn":26},{"ruleId":"508","severity":1,"message":"509","line":20,"column":6,"nodeType":"510","endLine":20,"endColumn":8,"suggestions":"511"},{"ruleId":"494","severity":1,"message":"507","line":44,"column":11,"nodeType":"496","messageId":"497","endLine":44,"endColumn":14},{"ruleId":"494","severity":1,"message":"512","line":7,"column":10,"nodeType":"496","messageId":"497","endLine":7,"endColumn":17},{"ruleId":"494","severity":1,"message":"513","line":26,"column":11,"nodeType":"496","messageId":"497","endLine":26,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":32,"column":6,"nodeType":"510","endLine":32,"endColumn":8,"suggestions":"514"},{"ruleId":"494","severity":1,"message":"507","line":74,"column":11,"nodeType":"496","messageId":"497","endLine":74,"endColumn":14},{"ruleId":"515","severity":1,"message":"516","line":100,"column":13,"nodeType":"517","endLine":100,"endColumn":79},{"ruleId":"515","severity":1,"message":"516","line":136,"column":15,"nodeType":"517","endLine":136,"endColumn":57},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","replacedBy":"521"},{"ruleId":"494","severity":1,"message":"499","line":1,"column":27,"nodeType":"496","messageId":"497","endLine":1,"endColumn":33},{"ruleId":"494","severity":1,"message":"522","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":21},{"ruleId":"494","severity":1,"message":"523","line":10,"column":19,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"508","severity":1,"message":"509","line":22,"column":6,"nodeType":"510","endLine":22,"endColumn":8,"suggestions":"524"},{"ruleId":"515","severity":1,"message":"516","line":56,"column":13,"nodeType":"517","endLine":56,"endColumn":78},{"ruleId":"494","severity":1,"message":"525","line":1,"column":17,"nodeType":"496","messageId":"497","endLine":1,"endColumn":27},{"ruleId":"494","severity":1,"message":"512","line":5,"column":10,"nodeType":"496","messageId":"497","endLine":5,"endColumn":17},{"ruleId":"494","severity":1,"message":"526","line":3,"column":10,"nodeType":"496","messageId":"497","endLine":3,"endColumn":19},{"ruleId":"494","severity":1,"message":"527","line":4,"column":13,"nodeType":"496","messageId":"497","endLine":4,"endColumn":16},{"ruleId":"494","severity":1,"message":"528","line":10,"column":8,"nodeType":"496","messageId":"497","endLine":10,"endColumn":13},{"ruleId":"494","severity":1,"message":"501","line":18,"column":13,"nodeType":"496","messageId":"497","endLine":18,"endColumn":18},{"ruleId":"494","severity":1,"message":"507","line":44,"column":23,"nodeType":"496","messageId":"497","endLine":44,"endColumn":26},{"ruleId":"494","severity":1,"message":"526","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":19},{"ruleId":"494","severity":1,"message":"529","line":3,"column":26,"nodeType":"496","messageId":"497","endLine":3,"endColumn":35},{"ruleId":"494","severity":1,"message":"527","line":4,"column":13,"nodeType":"496","messageId":"497","endLine":4,"endColumn":16},{"ruleId":"494","severity":1,"message":"530","line":9,"column":8,"nodeType":"496","messageId":"497","endLine":9,"endColumn":20},{"ruleId":"494","severity":1,"message":"531","line":10,"column":8,"nodeType":"496","messageId":"497","endLine":10,"endColumn":20},{"ruleId":"494","severity":1,"message":"532","line":11,"column":8,"nodeType":"496","messageId":"497","endLine":11,"endColumn":20},{"ruleId":"494","severity":1,"message":"522","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":21},{"ruleId":"494","severity":1,"message":"526","line":3,"column":10,"nodeType":"496","messageId":"497","endLine":3,"endColumn":19},{"ruleId":"494","severity":1,"message":"533","line":3,"column":21,"nodeType":"496","messageId":"497","endLine":3,"endColumn":27},{"ruleId":"494","severity":1,"message":"534","line":3,"column":29,"nodeType":"496","messageId":"497","endLine":3,"endColumn":33},{"ruleId":"494","severity":1,"message":"535","line":3,"column":35,"nodeType":"496","messageId":"497","endLine":3,"endColumn":40},{"ruleId":"494","severity":1,"message":"536","line":3,"column":42,"nodeType":"496","messageId":"497","endLine":3,"endColumn":54},{"ruleId":"494","severity":1,"message":"527","line":5,"column":13,"nodeType":"496","messageId":"497","endLine":5,"endColumn":16},{"ruleId":"494","severity":1,"message":"528","line":10,"column":8,"nodeType":"496","messageId":"497","endLine":10,"endColumn":13},{"ruleId":"494","severity":1,"message":"531","line":12,"column":8,"nodeType":"496","messageId":"497","endLine":12,"endColumn":20},{"ruleId":"494","severity":1,"message":"532","line":13,"column":8,"nodeType":"496","messageId":"497","endLine":13,"endColumn":20},{"ruleId":"494","severity":1,"message":"501","line":19,"column":13,"nodeType":"496","messageId":"497","endLine":19,"endColumn":18},{"ruleId":"508","severity":1,"message":"509","line":33,"column":8,"nodeType":"510","endLine":33,"endColumn":10,"suggestions":"537"},{"ruleId":"494","severity":1,"message":"538","line":44,"column":52,"nodeType":"496","messageId":"497","endLine":44,"endColumn":59},{"ruleId":"494","severity":1,"message":"507","line":84,"column":23,"nodeType":"496","messageId":"497","endLine":84,"endColumn":26},{"ruleId":"494","severity":1,"message":"539","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":14},{"ruleId":"494","severity":1,"message":"540","line":4,"column":10,"nodeType":"496","messageId":"497","endLine":4,"endColumn":13},{"ruleId":"494","severity":1,"message":"539","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":14},{"ruleId":"494","severity":1,"message":"540","line":4,"column":10,"nodeType":"496","messageId":"497","endLine":4,"endColumn":13},{"ruleId":"494","severity":1,"message":"541","line":7,"column":10,"nodeType":"496","messageId":"497","endLine":7,"endColumn":16},{"ruleId":"494","severity":1,"message":"542","line":31,"column":15,"nodeType":"496","messageId":"497","endLine":31,"endColumn":23},{"ruleId":"543","severity":1,"message":"544","line":208,"column":1,"nodeType":"545","messageId":"546","endLine":248,"endColumn":11},{"ruleId":"494","severity":1,"message":"547","line":4,"column":15,"nodeType":"496","messageId":"497","endLine":4,"endColumn":21},{"ruleId":"494","severity":1,"message":"529","line":4,"column":28,"nodeType":"496","messageId":"497","endLine":4,"endColumn":37},{"ruleId":"494","severity":1,"message":"548","line":5,"column":16,"nodeType":"496","messageId":"497","endLine":5,"endColumn":23},{"ruleId":"494","severity":1,"message":"549","line":9,"column":12,"nodeType":"496","messageId":"497","endLine":9,"endColumn":17},{"ruleId":"494","severity":1,"message":"550","line":9,"column":19,"nodeType":"496","messageId":"497","endLine":9,"endColumn":27},{"ruleId":"515","severity":1,"message":"516","line":93,"column":25,"nodeType":"517","endLine":93,"endColumn":56},{"ruleId":"508","severity":1,"message":"551","line":31,"column":7,"nodeType":"510","endLine":31,"endColumn":9,"suggestions":"552"},{"ruleId":"494","severity":1,"message":"507","line":75,"column":27,"nodeType":"496","messageId":"497","endLine":75,"endColumn":30},{"ruleId":"494","severity":1,"message":"553","line":3,"column":39,"nodeType":"496","messageId":"497","endLine":3,"endColumn":48},{"ruleId":"494","severity":1,"message":"554","line":3,"column":50,"nodeType":"496","messageId":"497","endLine":3,"endColumn":63},{"ruleId":"494","severity":1,"message":"536","line":4,"column":24,"nodeType":"496","messageId":"497","endLine":4,"endColumn":36},{"ruleId":"494","severity":1,"message":"555","line":4,"column":45,"nodeType":"496","messageId":"497","endLine":4,"endColumn":62},{"ruleId":"494","severity":1,"message":"539","line":5,"column":10,"nodeType":"496","messageId":"497","endLine":5,"endColumn":14},{"ruleId":"494","severity":1,"message":"556","line":5,"column":16,"nodeType":"496","messageId":"497","endLine":5,"endColumn":24},{"ruleId":"494","severity":1,"message":"557","line":7,"column":8,"nodeType":"496","messageId":"497","endLine":7,"endColumn":19},{"ruleId":"494","severity":1,"message":"558","line":17,"column":19,"nodeType":"496","messageId":"497","endLine":17,"endColumn":27},{"ruleId":"494","severity":1,"message":"559","line":18,"column":12,"nodeType":"496","messageId":"497","endLine":18,"endColumn":19},{"ruleId":"494","severity":1,"message":"523","line":18,"column":21,"nodeType":"496","messageId":"497","endLine":18,"endColumn":31},{"ruleId":"494","severity":1,"message":"560","line":19,"column":12,"nodeType":"496","messageId":"497","endLine":19,"endColumn":20},{"ruleId":"494","severity":1,"message":"561","line":19,"column":22,"nodeType":"496","messageId":"497","endLine":19,"endColumn":33},{"ruleId":"494","severity":1,"message":"562","line":20,"column":9,"nodeType":"496","messageId":"497","endLine":20,"endColumn":14},{"ruleId":"508","severity":1,"message":"563","line":40,"column":7,"nodeType":"510","endLine":40,"endColumn":9,"suggestions":"564"},{"ruleId":"565","severity":1,"message":"566","line":55,"column":26,"nodeType":"567","messageId":"568","endLine":55,"endColumn":28},{"ruleId":"508","severity":1,"message":"569","line":63,"column":7,"nodeType":"510","endLine":63,"endColumn":17,"suggestions":"570"},{"ruleId":"565","severity":1,"message":"566","line":78,"column":26,"nodeType":"567","messageId":"568","endLine":78,"endColumn":28},{"ruleId":"508","severity":1,"message":"569","line":86,"column":7,"nodeType":"510","endLine":86,"endColumn":17,"suggestions":"571"},{"ruleId":"494","severity":1,"message":"542","line":95,"column":23,"nodeType":"496","messageId":"497","endLine":95,"endColumn":31},{"ruleId":"494","severity":1,"message":"572","line":105,"column":23,"nodeType":"496","messageId":"497","endLine":105,"endColumn":32},{"ruleId":"494","severity":1,"message":"542","line":117,"column":23,"nodeType":"496","messageId":"497","endLine":117,"endColumn":31},{"ruleId":"494","severity":1,"message":"542","line":140,"column":27,"nodeType":"496","messageId":"497","endLine":140,"endColumn":35},{"ruleId":"494","severity":1,"message":"572","line":151,"column":27,"nodeType":"496","messageId":"497","endLine":151,"endColumn":36},{"ruleId":"494","severity":1,"message":"542","line":164,"column":23,"nodeType":"496","messageId":"497","endLine":164,"endColumn":31},{"ruleId":"494","severity":1,"message":"507","line":198,"column":15,"nodeType":"496","messageId":"497","endLine":198,"endColumn":18},{"ruleId":"515","severity":1,"message":"516","line":303,"column":29,"nodeType":"517","endLine":303,"endColumn":71},{"ruleId":"494","severity":1,"message":"573","line":2,"column":8,"nodeType":"496","messageId":"497","endLine":2,"endColumn":13},{"ruleId":"494","severity":1,"message":"541","line":3,"column":20,"nodeType":"496","messageId":"497","endLine":3,"endColumn":26},{"ruleId":"494","severity":1,"message":"574","line":11,"column":12,"nodeType":"496","messageId":"497","endLine":11,"endColumn":21},{"ruleId":"494","severity":1,"message":"575","line":11,"column":23,"nodeType":"496","messageId":"497","endLine":11,"endColumn":35},{"ruleId":"494","severity":1,"message":"576","line":12,"column":11,"nodeType":"496","messageId":"497","endLine":12,"endColumn":20},{"ruleId":"508","severity":1,"message":"577","line":21,"column":7,"nodeType":"510","endLine":21,"endColumn":9,"suggestions":"578"},{"ruleId":"494","severity":1,"message":"498","line":5,"column":8,"nodeType":"496","messageId":"497","endLine":5,"endColumn":18},{"ruleId":"494","severity":1,"message":"534","line":6,"column":20,"nodeType":"496","messageId":"497","endLine":6,"endColumn":24},{"ruleId":"494","severity":1,"message":"541","line":6,"column":26,"nodeType":"496","messageId":"497","endLine":6,"endColumn":32},{"ruleId":"494","severity":1,"message":"548","line":7,"column":10,"nodeType":"496","messageId":"497","endLine":7,"endColumn":17},{"ruleId":"494","severity":1,"message":"579","line":21,"column":11,"nodeType":"496","messageId":"497","endLine":21,"endColumn":23},{"ruleId":"494","severity":1,"message":"542","line":23,"column":15,"nodeType":"496","messageId":"497","endLine":23,"endColumn":23},{"ruleId":"494","severity":1,"message":"534","line":2,"column":20,"nodeType":"496","messageId":"497","endLine":2,"endColumn":24},{"ruleId":"494","severity":1,"message":"541","line":2,"column":26,"nodeType":"496","messageId":"497","endLine":2,"endColumn":32},{"ruleId":"494","severity":1,"message":"539","line":3,"column":10,"nodeType":"496","messageId":"497","endLine":3,"endColumn":14},{"ruleId":"508","severity":1,"message":"580","line":81,"column":8,"nodeType":"510","endLine":81,"endColumn":10,"suggestions":"581"},{"ruleId":"494","severity":1,"message":"505","line":1,"column":58,"nodeType":"496","messageId":"497","endLine":1,"endColumn":68},{"ruleId":"494","severity":1,"message":"582","line":6,"column":8,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"583","line":23,"column":11,"nodeType":"496","messageId":"497","endLine":23,"endColumn":20},{"ruleId":"508","severity":1,"message":"551","line":31,"column":7,"nodeType":"510","endLine":31,"endColumn":9,"suggestions":"584"},{"ruleId":"494","severity":1,"message":"507","line":75,"column":27,"nodeType":"496","messageId":"497","endLine":75,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":31,"column":13,"nodeType":"517","endLine":34,"endColumn":38},{"ruleId":"585","severity":1,"message":"586","line":30,"column":13,"nodeType":"517","endLine":34,"endColumn":15},{"ruleId":"515","severity":1,"message":"516","line":37,"column":17,"nodeType":"517","endLine":40,"endColumn":19},"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'useParams' is defined but never used.","'Tables' is defined but never used.","'useReducer' is defined but never used.","'useState' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["587"],"'Context' is defined but never used.","'string' is assigned a value but never used.",["588"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["589"],"no-negated-in-lhs",["590"],"'useLocation' is defined but never used.","'setDisable' is assigned a value but never used.",["591"],"'useContext' is defined but never used.","'useFormik' is defined but never used.","'Yup' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","'ProfileInput' is defined but never used.","'SubmitButton' is defined but never used.","'CancelButton' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.",["592"],"'control' is assigned a value but never used.","'Link' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'response' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Column' is defined but never used.","'NavLink' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.",["593"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'disable' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["594"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["595"],["596"],"'response2' is assigned a value but never used.","'axios' is defined but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["597"],"'deletereport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["598"],"'AdminLayout' is defined but never used.","'scrollRef' is assigned a value but never used.",["599"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"600","fix":"601"},{"desc":"600","fix":"602"},"no-global-assign","no-unsafe-negation",{"desc":"600","fix":"603"},{"desc":"600","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"609","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"605","fix":"616"},"Update the dependencies array to be: [params.id]",{"range":"617","text":"618"},{"range":"619","text":"618"},{"range":"620","text":"618"},{"range":"621","text":"618"},"Update the dependencies array to be: [citizenUser]",{"range":"622","text":"623"},"Update the dependencies array to be: [proposalId]",{"range":"624","text":"625"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"626","text":"627"},{"range":"628","text":"627"},"Update the dependencies array to be: [path]",{"range":"629","text":"630"},"Update the dependencies array to be: [citizen]",{"range":"631","text":"632"},{"range":"633","text":"623"},[691,693],"[params.id]",[1154,1156],[812,814],[1284,1286],[1398,1400],"[citizenUser]",[1805,1807],"[proposalId]",[2587,2597],"[proposal, user.data.user._id]",[3376,3386],[805,807],"[path]",[2671,2673],"[citizen]",[1472,1474]]
[{"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js":"1","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js":"2","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js":"3","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js":"4","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"5","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"6","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"7","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"8","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"9","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"10","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"11","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"12","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"13","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"14","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"15","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"16","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"17","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"18","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"19","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"20","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"21","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"22","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"23","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"24","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"25","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"26","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"27","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"28","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"29","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"30","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"31","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"32","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"33","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"34","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"35","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"36","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"37","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"38","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"39","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"40","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"41","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"42","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"43","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"44","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"45","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"46","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"47","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"48","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"49","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"50","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"51","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"52","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"53","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"54","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"55","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"56","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"57","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"58","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"59","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"60","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"61","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"62","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"63","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"64","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"65","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"66","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"67","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"68","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"69","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"70","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"71","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"72","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"73","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"74","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"75","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"76","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"77","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"78","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"79","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"80","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"81","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"82","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"83","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"84","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"85","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js":"86","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"87","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"88","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js":"89","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"90","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"91","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"92","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"93","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"94","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"95"},{"size":502,"mtime":1632024220082,"results":"96","hashOfConfig":"97"},{"size":1216,"mtime":1633083964466,"results":"98","hashOfConfig":"97"},{"size":14896,"mtime":1633095148072,"results":"99","hashOfConfig":"97"},{"size":3965,"mtime":1632787586711,"results":"100","hashOfConfig":"97"},{"size":2508,"mtime":1630923076504,"results":"101","hashOfConfig":"97"},{"size":9631,"mtime":1632848169039,"results":"102","hashOfConfig":"97"},{"size":1886,"mtime":1631521809228,"results":"103","hashOfConfig":"97"},{"size":2988,"mtime":1632572954093,"results":"104","hashOfConfig":"97"},{"size":3502,"mtime":1632787586718,"results":"105","hashOfConfig":"97"},{"size":4032,"mtime":1632572954074,"results":"106","hashOfConfig":"97"},{"size":4355,"mtime":1632787586714,"results":"107","hashOfConfig":"97"},{"size":9254,"mtime":1632848169073,"results":"108","hashOfConfig":"97"},{"size":7512,"mtime":1632848169122,"results":"109","hashOfConfig":"97"},{"size":4229,"mtime":1632572954098,"results":"110","hashOfConfig":"97"},{"size":4061,"mtime":1632647701956,"results":"111","hashOfConfig":"97"},{"size":10297,"mtime":1632848169110,"results":"112","hashOfConfig":"97"},{"size":2542,"mtime":1632787586873,"results":"113","hashOfConfig":"97"},{"size":3661,"mtime":1632572954083,"results":"114","hashOfConfig":"97"},{"size":2946,"mtime":1632787586886,"results":"115","hashOfConfig":"97"},{"size":3386,"mtime":1632787586794,"results":"116","hashOfConfig":"97"},{"size":2346,"mtime":1632647702242,"results":"117","hashOfConfig":"97"},{"size":7491,"mtime":1632647702226,"results":"118","hashOfConfig":"97"},{"size":3383,"mtime":1632787586860,"results":"119","hashOfConfig":"97"},{"size":3656,"mtime":1632572954089,"results":"120","hashOfConfig":"97"},{"size":5002,"mtime":1632159535339,"results":"121","hashOfConfig":"97"},{"size":2965,"mtime":1632848169177,"results":"122","hashOfConfig":"97"},{"size":2633,"mtime":1632647702328,"results":"123","hashOfConfig":"97"},{"size":8492,"mtime":1632647702221,"results":"124","hashOfConfig":"97"},{"size":2757,"mtime":1632647702360,"results":"125","hashOfConfig":"97"},{"size":3483,"mtime":1632647702390,"results":"126","hashOfConfig":"97"},{"size":3674,"mtime":1632647702405,"results":"127","hashOfConfig":"97"},{"size":5913,"mtime":1632848169146,"results":"128","hashOfConfig":"97"},{"size":9136,"mtime":1632986971756,"results":"129","hashOfConfig":"97"},{"size":2510,"mtime":1632787586510,"results":"130","hashOfConfig":"97"},{"size":3385,"mtime":1632787586503,"results":"131","hashOfConfig":"97"},{"size":2771,"mtime":1633174484442,"results":"132","hashOfConfig":"97"},{"size":2747,"mtime":1633191541732,"results":"133","hashOfConfig":"97"},{"size":3773,"mtime":1632787586573,"results":"134","hashOfConfig":"97"},{"size":17723,"mtime":1633143196041,"results":"135","hashOfConfig":"97"},{"size":2133,"mtime":1632889922032,"results":"136","hashOfConfig":"97"},{"size":2968,"mtime":1633095148140,"results":"137","hashOfConfig":"97"},{"size":6176,"mtime":1633107096490,"results":"138","hashOfConfig":"97"},{"size":18162,"mtime":1633177346588,"results":"139","hashOfConfig":"97"},{"size":22543,"mtime":1633167910295,"results":"140","hashOfConfig":"97"},{"size":2792,"mtime":1633095148163,"results":"141","hashOfConfig":"97"},{"size":2751,"mtime":1633161495015,"results":"142","hashOfConfig":"97"},{"size":13151,"mtime":1633191062610,"results":"143","hashOfConfig":"97"},{"size":10548,"mtime":1633002149950,"results":"144","hashOfConfig":"97"},{"size":4028,"mtime":1633168021981,"results":"145","hashOfConfig":"97"},{"size":10093,"mtime":1633095148251,"results":"146","hashOfConfig":"97"},{"size":9944,"mtime":1632907577045,"results":"147","hashOfConfig":"97"},{"size":4954,"mtime":1632848168851,"results":"148","hashOfConfig":"97"},{"size":2401,"mtime":1633141727284,"results":"149","hashOfConfig":"97"},{"size":2557,"mtime":1633142262885,"results":"150","hashOfConfig":"97"},{"size":3134,"mtime":1633002149954,"results":"151","hashOfConfig":"97"},{"size":733,"mtime":1632244653193,"results":"152","hashOfConfig":"97"},{"size":1027,"mtime":1632244653201,"results":"153","hashOfConfig":"97"},{"size":6736,"mtime":1633005752580,"results":"154","hashOfConfig":"97"},{"size":1561,"mtime":1632572954072,"results":"155","hashOfConfig":"97"},{"size":7467,"mtime":1633243006504,"results":"156","hashOfConfig":"97"},{"size":13373,"mtime":1633173506118,"results":"157","hashOfConfig":"97"},{"size":8393,"mtime":1633173506134,"results":"158","hashOfConfig":"97"},{"size":9606,"mtime":1633173506140,"results":"159","hashOfConfig":"97"},{"size":14218,"mtime":1633173506129,"results":"160","hashOfConfig":"97"},{"size":18165,"mtime":1633173506088,"results":"161","hashOfConfig":"97"},{"size":2155,"mtime":1633173506113,"results":"162","hashOfConfig":"97"},{"size":16060,"mtime":1633179669013,"results":"163","hashOfConfig":"97"},{"size":4269,"mtime":1633173506110,"results":"164","hashOfConfig":"97"},{"size":2183,"mtime":1631521809200,"results":"165","hashOfConfig":"97"},{"size":1584,"mtime":1632787586544,"results":"166","hashOfConfig":"97"},{"size":254,"mtime":1633151906818,"results":"167","hashOfConfig":"97"},{"size":425,"mtime":1633067938763,"results":"168","hashOfConfig":"97"},{"size":211,"mtime":1629619238980,"results":"169","hashOfConfig":"97"},{"size":286,"mtime":1632591048936,"results":"170","hashOfConfig":"97"},{"size":253,"mtime":1632979110420,"results":"171","hashOfConfig":"97"},{"size":255,"mtime":1632981125317,"results":"172","hashOfConfig":"97"},{"size":359,"mtime":1633172938136,"results":"173","hashOfConfig":"97"},{"size":1758,"mtime":1633235064490,"results":"174","hashOfConfig":"97"},{"size":845,"mtime":1633227468606,"results":"175","hashOfConfig":"97"},{"size":1243,"mtime":1633227987704,"results":"176","hashOfConfig":"97"},{"size":205,"mtime":1632596902141,"results":"177","hashOfConfig":"97"},{"size":219,"mtime":1629617925559,"results":"178","hashOfConfig":"97"},{"size":462,"mtime":1631945107822,"results":"179","hashOfConfig":"97"},{"size":904,"mtime":1633125441137,"results":"180","hashOfConfig":"97"},{"size":245,"mtime":1629618143712,"results":"181","hashOfConfig":"97"},{"size":221,"mtime":1632999229390,"results":"182","hashOfConfig":"97"},{"size":432,"mtime":1632997362370,"results":"183","hashOfConfig":"97"},{"size":297,"mtime":1629618403252,"results":"184","hashOfConfig":"97"},{"size":166,"mtime":1629618602202,"results":"185","hashOfConfig":"97"},{"size":364,"mtime":1632033019368,"results":"186","hashOfConfig":"97"},{"size":1403,"mtime":1633102175042,"results":"187","hashOfConfig":"97"},{"size":210,"mtime":1630333640183,"results":"188","hashOfConfig":"97"},{"size":250,"mtime":1631322385105,"results":"189","hashOfConfig":"97"},{"size":1966,"mtime":1631772488004,"results":"190","hashOfConfig":"97"},{"size":789,"mtime":1631772487985,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"6ijylg",{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"194"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"194"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"194"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"194"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"194"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"194"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"194"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"194"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"194"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"194"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"194"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"194"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"194"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"194"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"194"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"194"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"194"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"194"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"194"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"194"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"194"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"194"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"194"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js",[],["413","414"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js",["415","416"],"import React, { useState, useContext } from 'react';\r\nimport { Context } from './context/Context';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport LandingNavBar from './components/Landing/Navigation/LandingNavBar';\r\nimport Home from './pages/Landing/Home/Home';\r\nimport CitizenLogin from './pages/Landing/CitizenLogin/CitizenLogin';\r\nimport CitizenForgot from './pages/Landing/CitizenForgot/CitizenForgot';\r\nimport CitizenEmail from './pages/Landing/CitizenEmail/CitizenEmail';\r\nimport Features from './pages/Landing/Feature/Features';\r\nimport Progress from './components/Landing/Register/Progress';\r\nimport FirstStep from './pages/Landing/Register/FirstStep';\r\nimport SecondStep from './pages/Landing/Register/SecondStep';\r\nimport ThirdStep from './pages/Landing/Register/ThirdStep';\r\nimport FourthStep from './pages/Landing/Register/FourthStep';\r\nimport FifthStep from './pages/Landing/Register/FifthStep';\r\nimport SixthStep from './pages/Landing/Register/SixthStep';\r\nimport SeventhStep from './pages/Landing/Register/SeventhStep';\r\n\r\nimport CitizenNavBar from './components/Citizen/CitizenNav/CitizenNav';\r\nimport CitizenProfile from './pages/Citizen/CitizenProfile/CitizenProfile';\r\nimport CitizenProposals from './pages/Citizen/CitizenProposals/CitizenProposals';\r\nimport CitizenReports from './pages/Citizen/CitizenReports/CitizenReports';\r\nimport CitizenProjects from './pages/Citizen/CitizenProjects/CitizenProjects';\r\n\r\nimport AdminForgot from './components/AllAdmin/Administrator/AdminForgot/AdminForgot';\r\nimport AdminEmail from './components/AllAdmin/Administrator/AdminEmail/AdminEmail';\r\nimport AdminProfile from './components/AllAdmin/Administrator/AdminProfile/AdminProfile';\r\nimport AdminLogin from './components/AllAdmin/Administrator/AdminLogin/AdminLogin';\r\nimport AdminProposals from './components/AllAdmin/Administrator/AdminProposals/AdminProposals';\r\nimport AdminReports from './components/AllAdmin/Administrator/AdminReports/AdminReports';\r\nimport AdminMessages from './components/AllAdmin/Administrator/AdminMessages/AdminMessages';\r\nimport AdminProjects from './components/AllAdmin/Administrator/AdminProjects/AdminProjects';\r\nimport AdminUsers from './components/AllAdmin/Administrator/AdminUsers/AdminUsers';\r\nimport Applicants from './components/AllAdmin/Administrator/Applicants/Applicants';\r\nimport SingleApplicants from './components/AllAdmin/Administrator/SingleApplicants/SingleApplicants';\r\nimport SingleUsers from './components/AllAdmin/Administrator/SingleUsers/SingleUsers';\r\nimport AdminCreateProposals from './components/AllAdmin/Administrator/AdminCreateProposals/AdminCreateProposals';\r\nimport AdminCreateProjects from './components/AllAdmin/Administrator/AdminCreateProjects/AdminCreateProjects';\r\n\r\nimport CitizenPassUpdate from './pages/Citizen/CitizenProfile/CitizenPassUpdate/CitizenPassUpdate';\r\nimport CitizenCreateProposal from './pages/Citizen/CitizenProposals/CreateProposals/CitizenCreateProposals';\r\nimport CitizenViewProposal from './pages/Citizen/CitizenProposals/ViewProposals/CitizenViewProposal';\r\nimport CitizenViewReport from './pages/Citizen/CitizenReports/ViewReports/CitizenViewReport';\r\nimport CitizenSubmitReport from './pages/Citizen/CitizenReports/SubmitReport/CitizenSubmitReport';\r\nimport CitizenChatReport from './pages/Citizen/CitizenReports/ChatReports/CitizenChatReport';\r\nimport CitizenViewProject from './pages/Citizen/CitizenProjects/CitizenViewProject/CitizenViewProject';\r\nimport ProposalNav from './components/Citizen/ProposalNav/ProposalNav';\r\nimport ReportsNav from './components/Citizen/ReportsNav/ReportsNav';\r\n\r\nimport SANavBar from './components/SuperAdmin/SaSideBar';\r\nimport SALogin from './pages/SuperAdmin/SALogin/SALogin';\r\nimport SAForgot from './pages/SuperAdmin/SAForgot/SAForgot';\r\nimport SAEmail from './pages/SuperAdmin/SAEmail/SAEmail';\r\nimport SAContentHome from './pages/SuperAdmin/SAContentHome/SAContentHome';\r\nimport SAAnnouncements from './pages/SuperAdmin/SAAnnouncements/SAAnnouncements';\r\nimport SAFeaturedMember from './pages/SuperAdmin/SAFeaturedMember/SAFeaturedMember';\r\nimport SAEula from './pages/SuperAdmin/SAEula/SAEula';\r\nimport SAAddFeaturedMember from './pages/SuperAdmin/SAAddFeaturedMember/SAAddFeaturedMember';\r\nimport SAContentFeature from './pages/SuperAdmin/SAContentFeature/SAContentFeature';\r\nimport SAAddFeature from './pages/SuperAdmin/SAAddFeature/SAAddFeature';\r\nimport SAFeatures from './pages/SuperAdmin/SAFeatures/SAFeatures';\r\nimport SAManage from './pages/SuperAdmin/SAManage/SAManage';\r\nimport SASearchAdmin from './pages/SuperAdmin/SASearchAdmin/SASearchAdmin';\r\nimport SAAddAdmin from './pages/SuperAdmin/SAAddAdmin/SAAddAdmin';\r\nimport SAAccount from './pages/SuperAdmin/SAAccount/SAAccount';\r\nimport AdminReportsDashboard from './components/AllAdmin/Administrator/AdminReportsDashboard/AdminReportsDashboard';\r\nimport AdminProposalsDashboard from './components/AllAdmin/Administrator/AdminProposalsDashboard/AdminProposalsDashboard';\r\nimport AdminEachProposal from './components/AllAdmin/Administrator/AdminEachProposal/AdminEachProposal';\r\nimport AdminEachProject from './components/AllAdmin/Administrator/AdminEachProject/AdminEachProject';\r\nimport AdminEachReport from './components/AllAdmin/Administrator/AdminEachReport/AdminEachReport';\r\nimport AdminUpdateProject from './components/AllAdmin/Administrator/AdminUpdateProject/AdminUpdateProject';\r\n\r\nconst App = () => {\r\n\r\n  //Register data passing...\r\n  const [citizen, setCitizen] = useState({});\r\n\r\n  const updateCitizen = (data) => {\r\n    setCitizen((prevCitizen) => ({ ...prevCitizen, ...data }));\r\n  };\r\n\r\n  const resetCitizen = () => {\r\n    setCitizen({});\r\n  };\r\n\r\n  //Citizen User...\r\n  const { user } = useContext(Context);\r\n\r\n  // console.log(user);\r\n\r\n  //Super Administrator User...\r\n  const { saUser } = useContext(Context);\r\n\r\n  //Administrator User...\r\n  const { aUser } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <LandingNavBar />\r\n      <Progress />\r\n\r\n      <CitizenNavBar />\r\n      {/* <ProposalNav /> */}\r\n\r\n      <SANavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/features\">\r\n            <Features />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/forgot-password\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenForgot />}\r\n          </Route>\r\n\r\n          <Route path=\"/change-password/:token\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenEmail />}\r\n          </Route>\r\n\r\n          <Route\r\n             render={(props) => (\r\n              <FirstStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen}/>\r\n            )}\r\n            path=\"/create-account\"\r\n             exact={true}\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SecondStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/second\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <ThirdStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/third\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FourthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fourth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FifthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fifth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SixthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/sixth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SeventhStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen} />\r\n            )}\r\n            path=\"/seventh\"\r\n          />\r\n\r\n          {/**************************** CITIZEN Routes ****************************/}\r\n\r\n          <Route path=\"/citizen-profile\">  \r\n            {user ? <CitizenProfile /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-pass-update\">\r\n            {user ? <CitizenPassUpdate /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-proposals\">\r\n            {user ? <CitizenProposals /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-view-proposals\">\r\n            <CitizenViewProposal/>\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-create-proposals\">\r\n            {user ? <CitizenCreateProposal /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-reports\">\r\n            {user ? <CitizenReports /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-reports\">\r\n            {user ? <CitizenViewReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-submit-reports\">\r\n            {user ? <CitizenSubmitReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-chat-report\">\r\n            {user ? <CitizenChatReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-projects\">\r\n            {user ? <CitizenProjects /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-project\">\r\n            {user ? <CitizenViewProject /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          {/**************************** ADMIN Routes ****************************/} \r\n\r\n          <Route path=\"/admin-login\">\r\n            {aUser ? <Redirect to=\"/admin-profile\" /> : <AdminLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-forgot\">\r\n            <AdminForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-change/:token\">\r\n            <AdminEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-profile\">\r\n            {aUser ? <AdminProfile /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposals\">\r\n            {aUser ? <AdminProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposal/:id\">\r\n            {aUser ? <AdminEachProposal /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-proposals\">\r\n            {aUser ? <AdminCreateProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-reports\">\r\n            {aUser ? <AdminReports /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-report/:id\">\r\n            {aUser ? <AdminEachReport /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/reports\">\r\n            {aUser ? <AdminReportsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-messages\">\r\n            {aUser ? <AdminMessages /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-projects\">\r\n            {aUser ? <AdminProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-project/:id\">\r\n            {aUser ? <AdminEachProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/proposals\">\r\n            {aUser ? <AdminProposalsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-projects\">\r\n            {aUser ? <AdminCreateProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-update-project/:id\">\r\n            {aUser ? <AdminUpdateProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-users\">\r\n            {aUser ? <AdminUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants\">\r\n            {aUser ? <Applicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants-Verification\">\r\n            {aUser ? <SingleApplicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Admin-viewUsers\">\r\n            {aUser ? <SingleUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          {/**************************** SUPER ADMIN Routes ****************************/}\r\n          \r\n          <Route path=\"/superAdmin-login\">\r\n            {saUser ? <Redirect to=\"/SAContent-home\" /> : <SALogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-forgot\">\r\n            <SAForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-changePassword/:token\">\r\n            <SAEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-home\">\r\n            {saUser ? <SAContentHome /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-announcements\">\r\n            {saUser ? <SAAnnouncements /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-FeaturedMember\">\r\n            {saUser ? <SAFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-Eula\">\r\n            {saUser ? <SAEula /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-addFeaturedMember\">\r\n            {saUser ? <SAAddFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-feature\">\r\n            {saUser ? <SAContentFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-feature\">\r\n            {saUser ? <SAAddFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-feature\">\r\n            {saUser ? <SAFeatures /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAManage-admin\">\r\n            {saUser ? <SAManage /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SASearch-admin\">\r\n            {saUser ? <SASearchAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-admin\">\r\n            {saUser ? <SAAddAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-account\">\r\n            {saUser ? <SAAccount /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n        </Switch>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["417","418"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminProposals.module.css';\r\n\r\nconst AdminProposals = () => {\r\n    //Without AXIOS\r\n    const [proposals, setProposals] = useState();\r\n    \r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('api/proposals');\r\n            \r\n            const responseData = await response.json();\r\n\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const string = 'watch?v=S_mgSHCWCmA';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProposals}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Proposals</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>            \r\n                            <th>ID</th>  \r\n                            <th>Title</th>\r\n                            <th>Location</th>\r\n                            <th>Upvote</th>\r\n                            <th>Downvote</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {proposals && proposals.map((proposal) => (\r\n                        <tr key={proposal._id}>\r\n                            <td>{proposal._id}</td>\r\n                            <td>{proposal.title}</td>\r\n                            <td>{proposal.location}</td>\r\n                            <td>{proposal.upvote.length}</td>\r\n                            <td>{proposal.downvote.length}</td>\r\n                            <td>{proposal.status}</td>\r\n                            <td>{proposal.createdAt}</td>\r\n                            <td><Link to={'/admin-proposal/' + proposal._id}>Click here</Link></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-proposals'>\r\n                        <button className={classes.Button}>Create Proposals</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProposals;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["419"],"import React, { useEffect, useState, useParams } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport classes from './AdminProjects.module.css';\r\n\r\nconst AdminProjects = ( props ) => {\r\n    const [projects, setProjects] = useState();    \r\n    // const { handle } = useParams();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    //const string = 'watch?v=S_mgSHCWCmA';\r\n    console.log(projects);\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProjects}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Projects</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project ID</th>\r\n                            <th>Project Title</th>\r\n                            <th>Location</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Updated at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects && projects.map(project => (\r\n                        <tr key={project._id}>\r\n                            <td>{project._id}</td>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.location}</td>\r\n                            <td>{project.status}</td>\r\n                            <td>{format(project.createdAt)}</td>\r\n                            <td>{format(project.updatedAt)}</td>\r\n                            <td>\r\n                                <Link to={'/admin-project/' + project._id}>Click here</Link>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-projects'>\r\n                        <button className={classes.Button}>Create Projects</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProjects;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["420","421","422","423"],"import React, { useState, useContext, useRef } from 'react';\r\nimport CardForm from '../../../UI/Cards/CardForm/CardForm';\r\nimport Input from '../../../UI/Input/Input';\r\nimport LoginButton from '../../../UI/Buttons/LoginButton/LoginButton';\r\nimport { loginCall } from '../../../../api_calls/adminApiCall';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport classes from './AdminLogin.module.css';\r\n\r\nconst AdminLogin = () => {\r\n    // const email = useRef();\r\n    // const password = useRef();\r\n    // const { user, isFetching, error, dispatch } = useContext(Context);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     loginCall(\r\n    //         { email: email.current.value, password: password.current.value }, \r\n    //         dispatch\r\n    //     );\r\n    // };\r\n\r\n    // console.log(user);\r\n//KD's code\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { aUser, dispatch, isFetching } = useContext(Context);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: \"ALOGIN_START\" });\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/admin/login\", {\r\n            email,\r\n            password,\r\n        })\r\n\r\n        dispatch({ type: \"ALOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: `${err.response.status}`,\r\n            text: `${err.response.data.message}`,\r\n        });\r\n        dispatch({ type: \"ALOGIN_FAILURE\" });\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        // <div className={classes.Content}>\r\n        //     <form className={classes.CardForm} onSubmit={handleSubmit}>\r\n        //         <h3>SmartCTLogo</h3>\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"email\"\r\n        //             placeholder=\"Email address\"\r\n        //             ref={email}\r\n        //             id=\"email\"\r\n        //         />\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"password\"\r\n        //             placeholder=\"Password\"\r\n        //             ref={password}\r\n        //             id=\"password\"\r\n\r\n        //         />\r\n        //         <div className={classes.ButtonDiv}>\r\n        //             <LoginButton type=\"submit\"/>\r\n        //         </div>\r\n        //         <div className={classes.HyperlinkDiv}>\r\n        //             <a href=\"/forgot-password\" className={classes.Hyperlink}>\r\n        //             Forgot Password\r\n        //             </a>\r\n        //         </div>\r\n        //     </form>\r\n        // </div>\r\n        //KD's Code\r\n        <div className={classes.Content}>\r\n            <CardForm onSubmit = { handleSubmit }>\r\n                <h3>SmartCTLogo</h3>\r\n                <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange = {e => setEmail(e.target.value)} \r\n                    id=\"email\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {e => setPassword(e.target.value)} \r\n                    id=\"password\"\r\n\r\n                />\r\n                <div className={classes.ButtonDiv}>\r\n                    <LoginButton type=\"submit\"/>\r\n                </div>\r\n                <div className={classes.HyperlinkDiv}>\r\n                    <a href=\"/admin-forgot\" className={classes.Hyperlink}>\r\n                    Forgot Password\r\n                    </a>\r\n                </div>\r\n            </CardForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["424","425","426","427","428","429","430"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminProfileButton from '../../../UI/Buttons/AdminProfileButton/AdminProfileButton';\r\nimport ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\nimport ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './AdminProfile.module.css';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport TextError from '../../../UI/Text/TextError';\r\nimport axios from 'axios';\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required!'),\r\n    password: Yup.string().required('Required!')\r\n});\r\n\r\nconst AdminProfile = () => {\r\n    const { aUser, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [logs, setLogs] = useState([]);\r\n\r\n    // const onSubmit = values => {\r\n    //     if (values.email !== aUser.user.email) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     console.log('Form data', values);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/administrator/?userType=Administrator`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        fetchLogs();\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: values => {\r\n            if (values.email !== aUser.data.user.email) {\r\n                console.log(\"Incorrect email\")\r\n                return false;\r\n            }\r\n    \r\n            console.log('Form data', values)\r\n            axios.patch('/api/admin/' + aUser.data.user._id, values);\r\n        }\r\n    });\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const uploadPhotoHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"AUPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: aUser.token,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.patch(\"/api/admin/\" + aUser.data.user._id, updateAccount);\r\n                    dispatch({ type: \"AUPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"AUPDATE_FAILURE\" })\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is required!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n        }\r\n    }\r\n\r\n    console.log(aUser);\r\n    return (\r\n        // <React.Fragment>\r\n        //     <AdminLayout>\r\n        //         <div className={classes.Content}>\r\n        //             <div className={classes.AdminProfile}>\r\n        //                 <ProfileIconCard />\r\n        //                 <h2>Summary</h2>\r\n        //                 <div className={classes.ButtonDiv}>\r\n        //                     <Link to = \"/admin-summary/reports\">\r\n        //                         <AdminProfileButton>Reports</AdminProfileButton>\r\n        //                     </Link>\r\n        //                     <Link to = '/admin-summary/proposals'>\r\n        //                         <AdminProfileButton>Proposals</AdminProfileButton>\r\n        //                     </Link>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div>\r\n        //                 <h2>Personal Information</h2>\r\n        //                 <div>\r\n        //                     <form className={classes.AdminProfileFormDiv}>\r\n        //                         <div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"City/Municipality\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"city_municipality\"\r\n        //                                     name=\"city_municipality\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.city}\r\n        //                                 />\r\n        //                             </div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"region\">Region</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"Region\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"region\"\r\n        //                                     name=\"region\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.region}\r\n        //                                 />\r\n        //                             </div>\r\n        //                         </div>\r\n        //                     </form>\r\n        //                 </div>\r\n\r\n        //                 {/* LOGIN CREDENTIALS */}\r\n\r\n                        // <h2>Login Credentials</h2>\r\n                        // <div>\r\n                        //     <form onSubmit={formik.handleSubmit}>\r\n                        //         <div className={classes.AdminProfileFormDiv}>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Email Address</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Email address\"\r\n                        //                     type=\"email\"\r\n                        //                     id=\"email\"\r\n                        //                     name=\"email\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.email}\r\n                        //                 />\r\n                        //             </div>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Password</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Password\"\r\n                        //                     type=\"password\"\r\n                        //                     id=\"password\"\r\n                        //                     name=\"password\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.password}\r\n                        //                 />\r\n                        //             </div>\r\n                        //         </div>\r\n                        //         <div className={classes.ButtonDiv}>\r\n                        //             <SubmitButton />\r\n                        //             <CancelButton />\r\n                        //         </div>\r\n                        //     </form>\r\n                        // </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </AdminLayout>\r\n        // </React.Fragment>\r\n\r\n\r\n            <AdminLayout>\r\n                <div className={classes.Content}>\r\n                    <div className={classes.AdminProfile}>\r\n                        <div className={classes.AdminAccountShadow}>\r\n                            <div className={classes.AdminAccountImage}>\r\n                                <img src= {file ? (URL.createObjectURL(file)) : `${aUser.data.user.profilePic}`} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {iconUpload === false &&\r\n                            <>\r\n                                <div className={classes.AdminProfileChangeLink}>\r\n                                    <p onClick={ setIconTrue }>Change Profile Picture?</p>\r\n                                </div>\r\n\r\n                                <div className={classes.AdminProfileChangeImg}>\r\n                                    <Form.Label ><i class=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        {iconUpload &&\r\n                            <div className={classes.AdminProfileChangeImg}>\r\n                                <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n                                <Form.Label  htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                            </div>\r\n                        }\r\n\r\n                        <Form className={classes.AdminProfileEdit} onSubmit={ uploadPhotoHandler }>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    id=\"iconImg\"\r\n                                    type=\"file\"\r\n                                    name=\"adminImg\"\r\n                                    style = {{display: \"none\"}}\r\n                                    onChange = {(e) => setFile(e.target.files[0])}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button id=\"btnImg\" type='submit' style={{display:'none'}}></Button>\r\n                        </Form>\r\n\r\n                        <h3>{aUser.data.user.username}</h3>\r\n                        <h2>Summary</h2>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <Link to = \"/admin-summary/reports\">\r\n                                <AdminProfileButton>Reports</AdminProfileButton>\r\n                            </Link>\r\n                            <Link to = '/admin-summary/proposals'>\r\n                                <AdminProfileButton>Proposals</AdminProfileButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Personal Information</h2>\r\n                        <div>\r\n                            <div className={classes.AdminProfileFormDiv}>\r\n                                <div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.city}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"region\">Region</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.region}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h2>Login Credentials</h2>\r\n                        <div>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={classes.AdminProfileFormDiv}>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Email Address</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Email address\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Password</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.ButtonDiv}>\r\n                                    <SubmitButton />\r\n                                    <CancelButton />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        {/* LOGIN CREDENTIALS */}\r\n\r\n                        {/* <h6>Fill this up to change password</h6>\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}>\r\n                                <Form>\r\n                                    <div className={classes.AdminProfileFormDiv}>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Email Address</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Email address\"\r\n                                                type=\"email\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                            />\r\n                                            <ErrorMessage name='email' component={TextError} />\r\n                                        </div>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Password</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                            />\r\n                                            <ErrorMessage name='password' component={TextError} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.ButtonDiv}>\r\n                                        <SubmitButton />\r\n                                        <CancelButton />\r\n                                    </div>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminProfile;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",["431"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport axios from 'axios'\r\nimport '../Applicants/Applicants.css'\r\n\r\nconst AdminUsers = () => {\r\n    const [citizenUser, setCitizenUser] = useState([]);\r\n    const [citizenID, setCitizenID] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getCitizen = async () => {\r\n            const res = await axios.get(`/api/citizen/?status=${true}`);\r\n            setCitizenUser(res.data);\r\n\r\n            if(res.data[0] === undefined) {\r\n                setCitizenID(null);\r\n            } else {\r\n                setCitizenID(res.data[0]._id);\r\n            }\r\n        }\r\n\r\n        getCitizen();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <Container>\r\n                    <div  className = 'Applicants-header'>\r\n                        <h1>Users</h1>\r\n                    </div>\r\n\r\n                    <div  className = 'col-md-10 offset-md-1' id = 'Applicants-body'>\r\n                        {citizenID !== undefined && citizenID !== null ? (\r\n                        <>\r\n                            <Row>\r\n                                <Col className='Applicants-searchTitle'><h4>Lastname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Firstname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Status</h4></Col>\r\n                                <Col className='Applicants-searchTitle' id = 'applicantEmail'><h4>Email</h4></Col>\r\n                                <Col className='Applicants-searchTitle'></Col>\r\n                            </Row>\r\n                            {citizenUser.map((A) => (\r\n                                <Row key={A._id}>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.lastname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.firstname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>Approved</h4></Col>\r\n                                    <Col className='Applicants-searchResult' id = 'applicantEmail'><h4>{A.email}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4><Link to = {`/Admin-viewUsers/${A._id}`}><i className=\"fas fa-external-link-alt\"></i></Link></h4></Col>\r\n                                </Row>\r\n                            ))}\r\n                        </>\r\n                        ) : (\r\n                            <h4 style={{textAlign: \"center\", color: \"grey\"}}>No current users</h4>\r\n                        )}\r\n                    </div>\r\n                </Container>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminUsers;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["432"],"import React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminConversations from './AdminConversations/AdminConversations';\r\nimport AdminMessage from './AdminMessage/AdminMessage';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminMessages.module.css';\r\n\r\nconst AdminMessages = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chatMessages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const { aUser } = useContext(Context);\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            }); \r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", aUser.data.user._id);\r\n        socket.current.on(\"getUsers\", aUser => {\r\n            console.log(aUser);\r\n        });\r\n    }, [aUser]);\r\n    // insert this code soon:\r\n    // const { user } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/conversations/\" + aUser.data?.user?._id);\r\n                setConversations(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        getConversations();\r\n    }, [aUser.data?.user?._id]);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n                setMessages(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat]);\r\n\r\n    // console.log(currentChat);\r\n   \r\n    // console.log(aUser.data.user._id);\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: aUser.data.user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        };\r\n\r\n        const receiverId = currentChat.members.find(member => member !== aUser.data.user._id);\r\n        \r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: aUser.data.user._id,\r\n            receiverId,\r\n            text: newMessage\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\"/api/messages/\", message);\r\n            setMessages([...chatMessages, res.data]);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [chatMessages])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        {\r\n                            conversations.map(c => (\r\n                                <div onClick={() => setCurrentChat(c)}>\r\n                                    <AdminConversations conversation={c} currentUser={aUser.data?.user}  />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {/* <AdminConversations /> */}\r\n                    </div>\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            {\r\n                                <>\r\n                                    <div className={classes.AdminChatBoxTop}>\r\n                                        {chatMessages.map(m => (\r\n                                            <div ref={scrollRef}>\r\n                                                <AdminMessage messages={m} own={m.sender === aUser.data.user?._id} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className={classes.AdminChatBoxBottom}>\r\n                                        <textarea\r\n                                            className={classes.ChatMessageInput}\r\n                                            placeholder=\"Write something...\"\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            value={newMessage}\r\n                                        ></textarea>\r\n                                        <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["433","434","435","436","437"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProjects.module.css';\r\n\r\nconst AdminCreateProjects = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProject = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.post('/api/projects', createProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProjectsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProjectsContentDiv}>\r\n                <form className={classes.AdminCreateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProjectsFormDiv}>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.userName && <p className={classes.InputValidation}>{errors.userName.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    )\r\n}\r\n\r\nexport default AdminCreateProjects;\r\n\r\n// const AdminCreateProjects = () => {\r\n//     const { aUser } = useContext(Context);\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: '',\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const {...data} = values;\r\n\r\n//             console.log('Form data', values);\r\n//             axios.post('/api/projects/', values);\r\n//                 // .catch(err => {\r\n//                 //     console.log('Error: ', err);\r\n//                 // });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n    \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <form className={classes.AdminCreateProjectsForm} onSubmit={formik.handleSubmit}>\r\n//                     <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='User'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.userName}\r\n//                                 disable\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Project Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Project Title'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;\r\n\r\n// import React from 'react';\r\n// import { Formik, Form, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// import CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n// import AdminLayout from '../AdminLayout/AdminLayout';\r\n// import Input from '../../../UI/Input/Input';\r\n// import FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\n// import classes from './AdminCreateProjects.module.css';\r\n// import axios from 'axios';\r\n\r\n\r\n// const initialValues = {\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     location: ''\r\n// };\r\n\r\n// const onSubmit = async (values) => {\r\n//     console.log('Form values', values);\r\n\r\n//     const {...data} = values;\r\n//     const res = await axios.post('/api/projects', data)\r\n//         .catch(err => {\r\n//             console.log('Error: ', err.res.data);\r\n//         });\r\n// };\r\n\r\n// // const validate = values => {\r\n// //     let errors ={};\r\n\r\n// //     if (!values.title) errors.title = \"Required\";\r\n// //     if (!values.description) errors.description = \"Required\";\r\n// //     if (!values.date) errors.date = \"Required\";\r\n// //     if (!values.location) errors.location = \"Required\";\r\n\r\n// //     return errors;\r\n// // }\r\n\r\n// const validationSchema = Yup.object({\r\n//     title: Yup.string().required('Required'),\r\n//     description: Yup.string().required('Required'),\r\n//     date: Yup.string().required('Required'),\r\n//     location: Yup.string().required('Required')\r\n// });\r\n\r\n// const AdminCreateProjects = ( props ) => {\r\n//     // const formik = useFormik({\r\n//     //     initialValues,\r\n//     //     onSubmit,\r\n//     //     validationSchema\r\n//     // });\r\n\r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                 >\r\n//                     <Form className={classes.AdminCreateProjectsForm}>\r\n//                         <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Title\"\r\n//                                     id=\"title\"\r\n//                                     name=\"title\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"title\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Description</label>\r\n//                                 <FormikInput\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Description\"\r\n//                                     id=\"description\"\r\n//                                     name=\"description\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"description\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>When</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Date\"\r\n//                                     id=\"date\"\r\n//                                     name=\"date\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"date\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Where</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Location\"\r\n//                                     id=\"location\"\r\n//                                     name=\"location\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"location\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <SubmitButton />\r\n//                             <CancelButton />\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n            \r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["438","439","440","441"],"import React, { useContext, useState } from 'react';\r\n// import { useFormik } from 'formik';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProposals.module.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminCreateProposals = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProposal = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProposal.coverImage = res.data.secure_url;\r\n            // console.log(data);\r\n\r\n            try {\r\n                const res = await axios.post('/api/proposals/', createProposal);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data);\r\n        // console.log('data-image' + data.coverImage[0]);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProposalsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Proposals</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProposalsContentDiv}>\r\n                <form className={classes.AdminCreateProposalForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProposalFormDiv}>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                defaultValue={aUser.data.user.username}\r\n                                ref={register}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Proposal Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Proposal Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Description</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [ coverImage, setCoverImage ] = useState()\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: ''\r\n//         },\r\n//         onSubmit: values => {\r\n\r\n//             let data = new FormData();\r\n//             data.append('coverImage', values.coverImage);\r\n\r\n//             console.log('Form data', values);\r\n//             console.log({\r\n//                 fileName: values.file.name,\r\n//             });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n\r\n//     return(\r\n        // <AdminLayout>\r\n        //     <div className={classes.AdminCreateProposalsHeader}>\r\n        //         <CardHeader>\r\n        //             <h2 className={classes.Text}>Proposals</h2>\r\n        //         </CardHeader>\r\n        //     </div>\r\n        //     <div className={classes.AdminCreateProposalsContentDiv}>\r\n        //         <form className={classes.AdminCreateProposalForm} onSubmit={formik.handleSubmit}>\r\n        //             <div className={classes.AdminCreateProposalFormDiv}>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Username</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='userName'\r\n        //                         name='userName'\r\n        //                         placeholder='Username'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={aUser.user.username}\r\n        //                     />\r\n        //                     { formik.touched.userName && formik.errors.userName ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n        //                         ) : null }\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Proposal Title</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='title'\r\n        //                         name='title'\r\n        //                         placeholder='Proposal Title'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.title}\r\n        //                     />\r\n        //                     { formik.touched.title && formik.errors.title ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Description</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='description'\r\n        //                         name='description'\r\n        //                         placeholder='Description'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.description}\r\n        //                     />\r\n        //                     { formik.touched.description && formik.errors.description ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='location'\r\n        //                         name='location'\r\n        //                         placeholder='Location'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.location}\r\n        //                     />\r\n        //                     { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='file'\r\n        //                         id='coverImage'\r\n        //                         name='coverImage'\r\n        //                         placeholder='Location'\r\n        //                         onChange={(event) => {\r\n        //                             setCoverImage('coverImage', event.currentTarget.files[0]);\r\n        //                         }}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.coverImage}\r\n        //                     />\r\n        //                     {/* { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null} */}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className={classes.ButtonDiv}>\r\n        //                 <SubmitButton />\r\n        //                 <CancelButton />\r\n        //             </div>\r\n        //         </form>\r\n        //         <div className={classes.QuoteDiv}>\r\n        //             <p className={classes.Quote}>{messageCap}</p>\r\n        //         </div>\r\n        //     </div>\r\n        //  </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     // const [userName, setUserName] = useState('');\r\n//     // const [title, setTitle] = useState('');\r\n//     // const [description, setDescription] = useState('');\r\n//     // const [location, setLocation] = useState('');\r\n//     // const [message, setMessage] = useState('');\r\n//     // const [coverImage, setCoverImage] = useState(null);\r\n\r\n//     // const onChangeFile = e => {\r\n//     //     setCoverImage(e.target.files[0]);\r\n//     // }\r\n\r\n//     // const changeOnClick = (e) => {\r\n//     //     e.preventDefault();\r\n\r\n//     //     const formData = new FormData();\r\n//     //     formData.append('userName', userName);\r\n//     //     formData.append('title', title);\r\n//     //     formData.append('description', description);\r\n//     //     formData.append('location', location);\r\n//     //     formData.append('coverImage', coverImage);\r\n\r\n//     //     setUserName('');\r\n//     //     setTitle('');\r\n//     //     setDescription('');\r\n//     //     setLocation('');\r\n        \r\n//     //     console.log(formData);\r\n//     // }\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const formData = new FormData();\r\n//             //formData.append('coverImage', coverImage);\r\n//             axios.post('/api/proposals', values);\r\n//             console.log(values);\r\n//             //console.log(formData)\r\n//             //const formData = await new FormData();\r\n\r\n//             // formData.append('userName', values.userName);\r\n//             // formData.append('title', title);\r\n//             // formData.append('description', description);\r\n//             // formData.append('location', location);\r\n\r\n//             // setUserName('');\r\n//             // setTitle('');\r\n//             // setDescription('');\r\n//             // setLocation('');\r\n\r\n//             // axios.post('/api/proposals', formData)\r\n//             //     .then((res) => setMessage(res.data))\r\n//             //     .catch((err) => {\r\n//             //         console.log(err);\r\n//             // });\r\n//             // console.log(userName);\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n//     //console.log(aUser.user.username);\r\n//     //console.log('Form values', formik.values); \r\n\r\n//     return(\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProposalsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Proposals</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProposalsContentDiv}>\r\n//                 <form className={classes.AdminCreateProposalForm} onSubmit={formik.onSubmit}>\r\n//                     <div className={classes.AdminCreateProposalFormDiv}>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 className={classes.Input}\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='Username'\r\n//                                 //onChange={(e) => setUserName(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={aUser.user.username}\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Proposal Title'\r\n//                                 //onChange={(e) => setTitle(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             {/* { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 // onChange={(e) => setDescription(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             {/* { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 // onChange={(e) => setLocation(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             {/* { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         {/* <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Image</label>\r\n//                             <Input\r\n//                                 type='file'\r\n//                                 id='coverImage'\r\n//                                 name='coverImage'\r\n//                                 placeholder='Insert Photo'\r\n//                                 onChange={onChangeFile}\r\n//                                 // onChange={e => {\r\n//                                 //     formik.handleChange;\r\n//                                 //     setFilename('coverImage', e.target.files[0]);\r\n//                                 // }}\r\n//                                 // value={formik.values.coverImage}\r\n//                             />\r\n//                             { formik.touched.coverImage && formik.errors.coverImage ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.coverImage}</div>\r\n//                                 ) : null}\r\n//                         </div> */}\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//                 <div className={classes.QuoteDiv}>\r\n//                     <p className={classes.Quote}>{messageCap}</p>\r\n//                 </div>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["442","443"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProposal.module.css\";\r\n\r\nconst AdminEachProposal = () => {\r\n  const [currentProposal, setCurrentProposal] = useState([]);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProposal = async () => {\r\n      const response = await fetch('/api/proposals/' + params.id);\r\n      const responseData = await response.json();\r\n\r\n      setCurrentProposal(responseData.data.proposal);\r\n    }\r\n    findProposal();\r\n  }, []);\r\n\r\n  \r\n  const approveProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Approved'\r\n    });\r\n  };\r\n\r\n  const rejectProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Rejected'\r\n    });\r\n  };\r\n\r\n  const deleteProposal = () => {\r\n    axios.delete('/api/proposals/' + params.id);\r\n    console.log('Delete')\r\n  };\r\n\r\n  const upVoteProposal = () => {\r\n    axios.patch('/api/proposals/upVote/' + params.id);\r\n    console.log('Upvote');\r\n  }\r\n\r\n  const downVoteProposals = () => {\r\n    axios.patch('/api/proposals/downVote/' + params.id);\r\n    console.log('Downvote');\r\n  }\r\n  //console.log(currentProposal.coverImage);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProposals}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Proposals</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProposalDiv}>\r\n        <h3 className={classes.TitleText}>{currentProposal.title}</h3>\r\n        <div className={classes.ProposalInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentProposal.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProposal.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.VoteDiv}>\r\n        <button className={classes.VoteButton} onClick={upVoteProposal}>Upvote</button>\r\n        <button className={classes.VoteButton} onClick={downVoteProposals}>Downvote</button>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={approveProposal}>Approve</button>\r\n          <button className={classes.Button} onClick={rejectProposal}>Reject</button>\r\n          <button className={classes.Button} onClick={deleteProposal}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProposal;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './AdminUpdateProject.module.css';\r\n\r\n\r\nconst AdminUpdateProject = () => {\r\n    const { aUser } = useContext(Context);\r\n    \r\n    const [currentProject, setCurrentProject] = useState([]);\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const findProject = async () => {\r\n          const response = await fetch('/api/projects/' + params.id);\r\n          const responseData = await response.json();\r\n          //console.log(responseData);\r\n          setCurrentProject(responseData.data.project);\r\n        }\r\n        findProject();\r\n    }, []);\r\n\r\n    const defaultValues = {\r\n        title: currentProject.title,\r\n        description: currentProject.description,\r\n        location: currentProject.location,\r\n        coverImage: currentProject.coverImage\r\n    }\r\n\r\n    //console.log(currentProject.coverImage);\r\n\r\n    const { register, handleSubmit, errors, reset, control } = useForm({ defaultValues });\r\n    //console.log(currentProject);\r\n    // const preloadedValues = {\r\n    //     title: currentProject.title,\r\n    //     description: currentProject.description,\r\n    //     location: currentProject.location,\r\n    //     coverImage: currentProject.coverImage\r\n    // }\r\n\r\n\r\n    // const { register, handleSubmit, errors } = useForm({\r\n    //     defaultValue: preloadedValues\r\n    // });\r\n\r\n      const onSubmit = async (data) => {\r\n        console.log(data);\r\n        const coverImage = '';\r\n\r\n        const updateProject = {\r\n            // userId: aUser.data.user.userId,\r\n            // userName: aUser.data.user.userName,\r\n            // userType: aUser.data.user.userType,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            updateProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.put(`/api/update-projects/${params.id}`, updateProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        console.log(updateProject);\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    // console.log(currentProject);\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProjects}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminUpdateProjectsContentDiv}>\r\n                <form className={classes.AdminUpdateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminUpdateProjectsFormDiv}>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                defaultValue={defaultValues.title}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                defaultValue={defaultValues.description}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                defaultValue={defaultValues.location}\r\n                                readOnly\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Cover Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                files={defaultValues.coverImage}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n                        <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n                            console.log('Button');\r\n                            reset({ defaultValues })\r\n                        }}>Reset Data</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminUpdateProject;\r\n\r\n// const AdminUpdateProject = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [userId, setUserId] = useState();\r\n//     const [redirect, setRedirect] = useState(false);\r\n//     const [file, setFile] = useState(null);\r\n//     const userType = aUser.data.user.userType;\r\n\r\n//     const [currentProject, setCurrentProject] = useState([]);\r\n//     const [formValues, setFormValues] = useState(null);\r\n\r\n//     const params = useParams();\r\n\r\n//     useEffect(() => {\r\n//         const findProject = async () => {\r\n//           const response = await fetch('/api/projects/' + params.id);\r\n//           const responseData = await response.json();\r\n//           console.log(responseData);\r\n//           setCurrentProject(responseData.data.project);\r\n//         }\r\n//         findProject();\r\n//     }, []);\r\n\r\n//     const initialValues = {\r\n//         userId: aUser.data.user._id,\r\n//         userName: aUser.data.user.username,\r\n//         title: '',\r\n//         description: '',\r\n//         location: ''\r\n//     };\r\n    \r\n//     const validationSchema = Yup.object({\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const onSubmit = values => {\r\n//         // console.log('Form values', values);\r\n//         // console.log('ID: ', values._id)\r\n\r\n//         console.log(values);\r\n\r\n//         //axios.patch('/api/projects/' + params.id, values);\r\n\r\n//     }\r\n   \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminProjects}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminUpdateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={formValues || initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                     enableReinitialize>\r\n//                     <Form className={classes.AdminUpdateProjectsForm}>\r\n//                         <div className={classes.AdminUpdateProjectsFormDiv}>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <Field\r\n//                                     className={classes.Input}\r\n//                                     type='text'\r\n//                                     id='title'\r\n//                                     name='title'\r\n//                                     placeholder='Project Title'\r\n//                                 />\r\n//                                 <ErrorMessage name='title' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Description</label>\r\n//                                 <Field\r\n//                                     className={classes.Textarea}\r\n//                                     type='text'\r\n//                                     component='textarea'\r\n//                                     rows={4}\r\n//                                     id='description'\r\n//                                     name='description'\r\n//                                     placeholder='Description'\r\n//                                 />\r\n//                                 <ErrorMessage name='description' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     className={classes.FormikInput}\r\n//                                     type='text'\r\n//                                     id='location'\r\n//                                     name='location'\r\n//                                     placeholder='Location'\r\n//                                 />\r\n//                                 <ErrorMessage name='location' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     type='file'\r\n//                                     id='file'\r\n//                                     name='file'\r\n//                                     placeholder='File'\r\n//                                 />\r\n//                                 <ErrorMessage name='file' />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n//                             <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n//                                 console.log('Button');\r\n//                                 setFormValues(currentProject);\r\n//                             }}>Load Data</button>\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminUpdateProject;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["458"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport CardSummary from '../../../UI/Cards/CardDashboard/CardSummary';\r\n\r\nimport classes from './AdminProposalsDashboard.module.css';\r\nimport Tables from '../../../UI/Tables/Tables';\r\n\r\nconst AdminProposalsDashboard = () => {\r\n    const [topProposals, setTopProposals] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    let rCount = 0;\r\n    \r\n    useEffect(() => {\r\n        const fetchTopProposals = async () => {\r\n            const res = await axios.get('/api/proposals/topProposals');\r\n            setTopProposals(res.data);\r\n        }\r\n\r\n        fetchTopProposals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        const fetchApproved = async () => {\r\n            const res = await axios.get('/api/proposals/approved');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setAccepted(count);\r\n        }\r\n\r\n        fetchApproved();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchRejected = async () => {\r\n            const res = await axios.get('/api/proposals/rejected');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setRejected(count);\r\n        }\r\n\r\n        fetchRejected();\r\n    }, []);\r\n\r\n    console.log(topProposals);\r\n    console.log(accepted);\r\n    console.log(rejected);\r\n\r\n    \r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProposalsDashboard}>\r\n                <CardHeader>\r\n                <h2 className={classes.Text}>Proposals Summary</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.LeaderboardsHeader}>\r\n                <h3>Leaderboards</h3>\r\n            </div>\r\n            <div className={classes.Divider}>\r\n                <div className={classes.TableDiv}>\r\n                    <table className={classes.Table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Proposal ID</th>\r\n                                <th>Proposal Title</th>\r\n                                <th>Upvote</th>\r\n                                <th>Downvote</th>\r\n                                <th>Percentage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {topProposals.map((p) => (\r\n                                <tr key = {p._id}>\r\n                                    <td>{++rCount}</td>\r\n                                    <td>{p._id}</td>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.upvote.length}</td>\r\n                                    <td>{p.downvote.length}</td>\r\n                                    <td>{Math.trunc(((p.upvote.length - p.downvote.length) / (p.upvote.length + p.downvote.length)) * 100)}%</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className={classes.CardData}>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Approved Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{accepted}</p>\r\n                    </CardSummary>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Rejected Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{rejected}</p>\r\n                    </CardSummary>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default AdminProposalsDashboard;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["459","460","461"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Form, Container, Button } from 'react-bootstrap';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport { Context } from '../../../../context/Context';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport './SingleUsers.css';\r\n\r\nconst SingleUsers = () => {\r\n    const settings = {\r\n        dots: true,\r\n        fade: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        className: 'slides'\r\n    }\r\n\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [applicant, setApplicant] = useState([]);\r\n    const [validID, setValidID] = useState([]);\r\n    const [birthCert, setBirthCert] = useState([]);\r\n    const [residency, setResidency] = useState([]);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { aUser } = useContext(Context); \r\n\r\n    useEffect(() => {\r\n        const getApplicant = async ()=>{\r\n            const res = await axios.get(\"/api/citizen/\" + path)\r\n            setApplicant(res.data)\r\n            setValidID(res.data.validIDPic)\r\n            setResidency(res.data.residencyPic)\r\n            setBirthCert(res.data.birthCertPic)\r\n        }\r\n\r\n        getApplicant();\r\n\r\n    }, [path]);\r\n    \r\n    const handleAccept = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/\" + path, admin);\r\n            Swal.fire('Applicant Accepted', \"You've successfuly accepted an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleReject = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.delete(`/api/citizen/${path}`, { data: admin });\r\n            Swal.fire('Applicant Rejected', \"You've rejected an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/Applicants' />) }\r\n            <Container className = 'Applicant-verificationContainer'>\r\n                <div  className = 'ApplicantVerification-header'>\r\n                    <h1>SmartCTzen User</h1>\r\n                </div>\r\n\r\n                <div className = 'ApplicantVerification-body'>\r\n                    <Form className=\"ApplicantVerification-form\">\r\n                        <Form.Group>\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.firstname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.lastname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Middle name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.middlename}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Suffix</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.suffix === \"\" ? \"N/A\" : applicant.suffix }\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Sex</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.sex}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Birtdate</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.birthdate}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.street + ' ' + applicant.barangay + ' ' + applicant.city}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Region</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.region}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.province}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Zipcode</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.zipcode}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Valid ID</h1>\r\n                        </div>\r\n\r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {validID.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Proof of Residency</h1>\r\n                        </div>\r\n\r\n                        \r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {residency.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        {birthCert[0] !== undefined &&\r\n                            <> \r\n                                <div  className = 'ApplicantVerification-header'>\r\n                                    <h1>Birth Certificate</h1>\r\n                                </div>\r\n\r\n                                \r\n                                <div className = 'applicantDocumentsImg'>\r\n                                    <Slider {...settings}>\r\n                                        {birthCert.map((pic) => (\r\n                                            <div key={pic}>\r\n                                                <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Slider>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Form>\r\n\r\n                    <Link to = '/admin-users' className = 'ApplicantVerificationLink'>Back</Link>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleUsers\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["462","463","464","465","466"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProject.module.css\";\r\n\r\nconst AdminEachProject = () => {\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProject = async () => {\r\n      const response = await fetch('/api/projects/' + params.id);\r\n      const responseData = await response.json();\r\n      //console.log(responseData);\r\n      setCurrentProject(responseData.data.project);\r\n    }\r\n    findProject();\r\n  }, []);\r\n \r\n\r\n  const accomplished = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Accomplished'\r\n    });\r\n    console.log(response);\r\n  };\r\n\r\n  const ongoing = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Ongoing'\r\n    });\r\n    console.log(response);\r\n  };\r\n  \r\n  console.log(currentProject.coverImage);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProject}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Projects</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProjectDiv}>\r\n        <h3 className={classes.TitleText}>{currentProject.title}</h3>\r\n        <div className={classes.ProjectInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n             {currentProject.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProject.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={ongoing} disabled={disable}>Ongoing</button>\r\n          <button className={classes.Button} onClick={accomplished}>Accomplished</button>\r\n          <Link to={'/admin-update-project/' + params.id}>\r\n            <button className={classes.Button}>Update</button>\r\n          </Link>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProject;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["467","468"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachReport.module.css\";\r\n\r\nconst AdminEachReport = () => {\r\n  const [currentReport, setCurrentReport] = useState([]);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findReport = async () => {\r\n      const response = await fetch('/api/reports/' + params.id);\r\n      const responseData = await response.json();\r\n \r\n      setCurrentReport(responseData.data.report);\r\n    }\r\n    findReport();\r\n  }, []);\r\n\r\n  const confirmReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Confirmed'\r\n    });\r\n    console.log(res);\r\n  };\r\n\r\n  const cancelReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Cancelled'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const resolveReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Resolved'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const deleteReport = async () => {\r\n    const res = await axios.delete('/api/reports/' + params.id);\r\n    console.log('Delete Reports');\r\n  }\r\n\r\n  //console.log(currentReport);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachReport}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Reports</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ReportDiv}>\r\n        <h3 className={classes.TitleText}>{currentReport.title}</h3>\r\n        <div className={classes.ReportInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentReport.description}\r\n            </p>\r\n          </div>\r\n          <p>Image Source</p>\r\n        </div>\r\n        <div className={classes.Gallery}>\r\n            <h5>Image Placeholder</h5>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={confirmReport}>Confirm</button>\r\n          <button className={classes.Button} onClick={cancelReport}>Cancel</button>\r\n          <button className={classes.Button} onClick={resolveReport}>Resolved</button>\r\n          <button className={classes.Button} onClick={deleteReport}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachReport;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["469","470"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ProposalNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ProposalNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg proposalNavbar-mainbg\">\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"proposalnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Approved\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Rejected\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                My Proposals\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ProposalNav);","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["471","472"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ReportsNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ReportsNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg reportNavbar-mainbg\">\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\" data-toggle=\"dropdown\" data-target=\"#reportNavbarSupportedContent\" aria-controls=\"reportNavbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"reportnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Confirmed\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Cancelled\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Resolved\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ReportsNav);","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",["473"],"import React, { useState, useContext } from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport './CitizenPassUpdate.css';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\n\r\n\r\n// const CitizenPassUpdate = () => (\r\n//     <>\r\n//         <Container className = 'citizenPassUpdate-container'>\r\n//             <Form className = 'citizenPassUpdate-edit'>\r\n//                     <h3>Update Password</h3>\r\n\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Current Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"curpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>New Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"newpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Confirm Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"conpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Row className='citizenPassUpdate-BtnContainer'>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n//                         </Col>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '#' className = 'citizenPassUpdate-Btn'>Change</Link>\r\n//                         </Col>\r\n//                     </Row>\r\n//                 </Form>\r\n//         </Container>\r\n//     </>\r\n// );\r\n\r\n\r\nconst CitizenPassUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n\r\n    const passwordUpdate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const checkPass = {\r\n            userId: user.data.user._id,\r\n            oldPassword,\r\n        }\r\n\r\n        console.log(checkPass)\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/password-citizenCompare\", checkPass)\r\n\r\n            dispatch({ type: \"UPDATE_START\" })\r\n            const updateAccount = {\r\n                userId: user.data.user._id,\r\n                newPassword,\r\n                token: user.token,\r\n            }\r\n            try {\r\n                const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Update Successfull',\r\n                    text: '',\r\n                });\r\n                \r\n                Array.from(document.querySelectorAll(\"input\")).forEach(\r\n                    input => (input.value = \"\"),\r\n                    setOldPassword(\"\"),\r\n                    setNewPassword(\"\"),\r\n                );\r\n\r\n                setRedirect(true);\r\n                \r\n                dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n            } catch (err) {\r\n                console.log(err);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${err.response.status}`,\r\n                    text: `${err.response.data.message}`,\r\n                });\r\n                dispatch({ type: \"UPDATE_FAILURE\" })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-profile' />) }\r\n            <Container className = 'citizenPassUpdate-container'>\r\n                <Form className = 'citizenPassUpdate-edit' onSubmit = { passwordUpdate }>\r\n                        <h3>Update Password</h3>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Current Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setOldPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setNewPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        \r\n                        <Row className='citizenPassUpdate-BtnContainer'>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n                            </Col>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Button className = 'citizenPassUpdate-Btn' variant = \"danger\" type = 'submit'>Change</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\nexport default CitizenPassUpdate;\r\n    ","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["474","475","476"],"import React from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './CitizenViewReport.css';\r\n\r\nconst CitizenViewReport = () => (\r\n    <>\r\n        <Container className = 'citizenViewReport-container'>\r\n            <Row className=\"citizenViewReport-header\">\r\n                <Row>\r\n                    <Col claasName=\"citizenViewReport-title\">\r\n                    <h2>Ahay</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-auth\">\r\n                    <Col>Reporter: IC</Col>\r\n                    <Col>Submitted on: September 22, 2021</Col>\r\n                </Row>\r\n            </Row>\r\n            <Row className=\"citizenViewReport-description\">\r\n                <p>So ayun nga, nag catgirl ata yung prof namin sa klase. Di ako sure mismo kasi nakaasa lang ako sa chat namin nung oras na yun.</p>\r\n            </Row> \r\n            <Row className=\"citizenViewReport-footer\">\r\n                <Row className=\"citizenViewReport-details\">\r\n                    <Col>Where: Cainta, Rizal</Col>\r\n                    <Col>Status: Confirmed</Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-img-container\">\r\n                    <Col className=\"citizenViewReport-img-frame\">\r\n                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"Report\"></img>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n);\r\nexport default CitizenViewReport;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["477","478","479"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport './CitizenProposals.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Context } from '../../../context/Context';\r\n\r\n\r\nconst CitizenProposals = () => {\r\n    const user = useContext(Context)\r\n    const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/proposals');\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deleteProposal = async (proposalId) => {\r\n        console.log(proposalId);\r\n        const response = await axios.delete(`/api/proposals/${proposalId}`);\r\n        const refresh = await fetch('/api/proposals');\r\n        const responseData = await refresh.json();\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n\r\n    const getProposalId = async (proposalId) => {\r\n        console.log(proposalId);\r\n        localStorage.setItem('proposalid', proposalId);\r\n    }\r\n    \r\n    \r\n    //ALL Category\r\n    //onClick={() => categoryAll(status:lahat ng status na meron)}  initialize nalang ng local array na [\"Pending\",\"Approved\",\"Rejected\"] \r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/proposals');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n    \r\n    //const categoryAll = async (status) =>{}\r\n    // dito icocompare mo yung local content array to all proposal status\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryApproved = async () => {\r\n        const response = await fetch('/api/proposals/approved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData);\r\n        // console.log(responseData)\r\n    }\r\n\r\n    const categoryRejected = async () => {\r\n        const response = await axios.get('/api/proposals/rejected');\r\n        // const responseData = await response.json();\r\n        // console.log(response.data)\r\n        setProposals(response.data);\r\n    }\r\n    //APPROVED/REJECTED Category\r\n    //onClick={() => categoryApproved/Rejected(status:Approved/Rejected)}\r\n    //const categoryApproved/Rejected = async (status) =>{}\r\n    // dito icocompare mo yung Approved/Rejected na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryOwn = async () => {\r\n        // const currentuserid = user.user.data.user._id;\r\n        // const useridfilter = {\r\n        //     citizenId: currentuserid,\r\n        // }\r\n        // const response = await fetch('/api/proposals', userId);\r\n        // const responseData = await response.json();\r\n        // // console.log(responseData)\r\n        // setProposals(responseData.data.proposals);\r\n        const response = await axios.get(`/api/proposals/self/${user.user.data.user._id}`);\r\n        // // const responseData = await response.json();\r\n        // console.log(response.data);\r\n        setProposals(response.data);\r\n    }\r\n    //OWN Category\r\n    //onClick={() => categoryOwn(user.data.user._id)}\r\n    //const categoryOwn = async (userId) =>{}\r\n    //dito icocompare mo ang userId mo sa lahat ng userIds na meron sa proposals\r\n    //if nag true ididisplay\r\n    console.log(user.user.data.user._id);\r\n\r\n    return(\r\n        <Container className=\"proposalsContainer\">\r\n            <div className=\"proposalsMain\">\r\n                <Row className='citizenproposals-catbar-container'>\r\n                    <Col className='citizenproposals-catbar'> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryAll()}>All</button> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryApproved()}>Approved</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryRejected()}>Rejected</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryOwn()}>My Proposals</button>\r\n                    </Col>\r\n                </Row>\r\n                {/* <div className=\"proposalsCreateBtnContainer\"> */}\r\n                        <NavLink to=\"/citizen-create-proposals\">\r\n                            <button className=\"proposalCreate\">Create Proposal</button>\r\n                        </NavLink>\r\n                {/* </div> */}\r\n\r\n            {/* <div className=\"proposalShortContainer\">\r\n                <div className=\"proposalShort\">\r\n                    <div className=\"proposalTitleContainer\">\r\n                        <div className=\"proposalTitle\">\r\n                            <h2>Lorem Ipsum</h2>\r\n                        </div>\r\n                        <div className=\"proposalAuthImg\">\r\n                            <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                        </div>\r\n                        <div className=\"proposalAuth\">\r\n                            Juan Carlos\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"proposalContent\">\r\n                        <div className=\"proposalShortInfo\">\r\n                            <h2>Lorem ipsum</h2>\r\n                            <div className=\"proposalAuthContainer\">\r\n                                <div className=\"proposalAuthImg\">\r\n                                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                </div>\r\n                                <div className=\"proposalAuth\">\r\n                                    Juan Carlos\r\n                                </div>\r\n                            </div>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                                eu vulputate. </p>\r\n                            <p>Upvote: 14 </p><p> Downvote: 3</p>\r\n                        </div>\r\n                        <div className=\"proposalShortImgContainer\">\r\n                            <div className=\"proposalShortImgFrame\">\r\n                                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            {proposals && proposals.map(proposal => (\r\n                <div className=\"proposalShortContainer\" key={proposal._id}>\r\n                    <div className=\"proposalShort\">\r\n                        <div className=\"proposalTitleContainer\">\r\n                            <div className=\"proposalTitle\">\r\n                                <h2>{proposal.title}</h2>\r\n                            </div>\r\n                            <div className=\"proposalAuthImg\">\r\n                                <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                            </div>\r\n                            <div className=\"proposalAuth\">\r\n                                {proposal.userName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"proposalContent\">\r\n                            <div className=\"proposalShortInfo\">\r\n                                <h2>{proposal.title}</h2>\r\n                                <div className=\"proposalAuthContainer\">\r\n                                    <div className=\"proposalAuthImg\">\r\n                                        <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                    </div>\r\n                                    <div className=\"proposalAuth\">\r\n                                        {proposal.userName}\r\n                                    </div>\r\n                                </div>\r\n                                    <p>{proposal.description} </p>\r\n                                <div className=\"proposalsBody\">\r\n                                    <i className=\"fas fa-thumbs-up\"/>{proposal.upvote.length ? proposal.upvote.length : 0}\r\n                                    <i className=\"fas fa-thumbs-down\"/>{proposal.downvote.length ? proposal.downvote.length : 0}\r\n                                    <i onClick={()=> deleteProposal(proposal._id)} className=\"fas fa-trash\"></i>\r\n                                </div>\r\n                                {proposal.status === \"Rejected\" ?  \r\n                                null\r\n                                :\r\n                                <Link className='proposalsViewMore' to={`/citizen-view-proposals`} onClick={()=> getProposalId(proposal._id)}>\r\n                                    View More\r\n                                </Link>\r\n                                }\r\n                            </div>\r\n                            <div className=\"proposalShortImgContainer\">\r\n                                <div className=\"proposalShortImgFrame\">\r\n                                    <img src={proposal.images} alt=\"\" className=\"proposalImg\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>      \r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default CitizenProposals;\r\n\r\n\r\n//Backup code\r\n{/* <Row className=\"proposalShortContainer\"> gawing citizenproposals-shorts-container  dito lahat nakalagay\r\n\r\n\r\n        <Row className=\"proposalShort\">           citizenproposals-mobile-shortinfo\r\n            <Row className=\"proposalTitleContainer\">   delete\r\n                <Row className=\"proposalTitle\">          \r\n                    <h2>Lorem Ipsum</h2>               citizenproposal-mobile-shortinfo > h2\r\n                </Row>\r\n                <Col className=\"proposalAuthImg\">      citizenproposal-mobile-shortinfo > img\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </Col>\r\n                <Row className=\"proposalAuth\">Juan Carlos</Row>      citizenproposal-mobile-shortinfo > p\r\n            </Row>\r\n        </Row>\r\n\r\n\r\n\r\n    <Row className=\"proposalContent\">                   citizenproposals-shortinfo\r\n        <Row className=\"proposalShortInfo\">             delete\r\n            <h2>Lorem ipsum</h2>                        citizenproposals-shortinfo > h2\r\n            <div className=\"proposalAuthContainer\">     delete\r\n                <div className=\"proposalAuthImg\">       delete   citizenproposals-shortinfo > h2\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </div>\r\n                <div className=\"proposalAuth\">          delete citizenproposals-shortinfo > h5\r\n                    <h5>Juan Carlos</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                eu vulputate. </p>\r\n            <p>Upvote: 14 </p><p> Downvote: 3</p>       citizenproposals-shortinfo > p\r\n        </div>\r\n        <div className=\"proposalShortImgContainer\">     citizenproposals-shortinfo-img-frame\r\n            <div className=\"proposalShortImgFrame\">     citizenproposals-shortinfo-img-frame > img   \r\n                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</Row> */}","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["480","481","482","483","484","485"],"import \"./CitizenReports.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ReportsNav from \"../../../components/Citizen/ReportsNav/ReportsNav\";\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CitizenReports = () => {\r\n    const [reports, setReports] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/reports');\r\n            const responseData = await response.json();\r\n            setReports(responseData);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deletereport = async (reportlId) => {\r\n        console.log(reportlId);\r\n        const response = await axios.delete(`/api/reports/${reportlId}`);\r\n        const refresh = await fetch('/api/reports');\r\n        const responseData = await refresh.json();\r\n        setReports(responseData.data.report);\r\n    }\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/reports');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData.data.reports);\r\n    }\r\n\r\n    const categoryConfirmed = async () => {\r\n        const response = await fetch('/api/reports/confirmed');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n    const categoryCancelled = async () => {\r\n        const response = await fetch('/api/reports/cancelled');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n    \r\n    const categoryResolved = async () => {\r\n        const response = await fetch('/api/reports/resolved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n\r\n    return(\r\n        <Container className='citizenreports-Container'>\r\n            <Row className='citizenreports-catbar-container'>\r\n                <Col className='citizenreports-catbar'>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryConfirmed()}>Confirmed</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryCancelled()}>Cancelled</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryResolved()}>Resolved</button>\r\n                </Col>\r\n            </Row>\r\n            <Row className='citizenreports-btn-container'>\r\n                <Col className='citizenreports-btnbar'>\r\n                    <Link className='citizenreports-btn-submit' to='/citizen-submit-reports'>Submit a report</Link> \r\n                    <Link className='far fa-comment citizenreports-btn-chat' to='/citizen-chat-report'/>\r\n                </Col>\r\n            </Row>\r\n            {/*\r\n            <Row className='citizenreports-short'>\r\n                <Col className='citizenreports-img-container'>\r\n                    <img className='citizenreports-img' alt='citizenreports-img'src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Row className='citizenreports-title-container'>\r\n                        <span className='citizenreports-title'><h2>Road Damage</h2></span>\r\n                    </Row>\r\n                    <Row className='citizenreports-details'>\r\n                        <Col className='citizenreports-info-container'>\r\n                            <span className='reportInfo'>Where: Cainta Rizal</span>\r\n                            <span className='reportInfo'>Reported by: John Doe</span>\r\n                            <span className='reportInfo'>Date Submitted: September 17, 2021 11:17am</span>\r\n                        </Col>\r\n                        <Col className='citizenreports-info-status-container'>\r\n                            <span className='reportInfo'>Status: Confirmed</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row> */}\r\n            {reports && reports.map(report => (\r\n                <Row className='citizenreports-short' key={report._id}>\r\n                    <Col className='citizenreports-img-container'>\r\n                        <img className='citizenreports-img' alt='citizenreports-img'src={report.images} onClick={()=> window.open(report.images, \"_blank\")}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className='citizenreports-title-container'>\r\n                            <span className='citizenreports-title'><h2>{report.title}</h2></span>\r\n                        </Row>\r\n                        <Row className='citizenreports-details'>\r\n                            <Col className='citizenreports-info-container'>\r\n                                <span className='reportInfo'>Where: {report.location}</span>\r\n                                <span className='reportInfo'>Desc : {report.description}</span>\r\n                                <span className='reportInfo'>Reported By : {report.userName}</span>\r\n                                <span className='reportInfo'>Date Submitted: {new Date(report.createdAt).toLocaleDateString()}</span>\r\n                                {/* <span className='reportInfo'><i onClick={()=> deletereport(report._id)} className=\"fas fa-trash\"></i></span> */}\r\n\r\n                            </Col>\r\n                            <Col className='citizenreports-info-status-container'>\r\n                                <span className='reportInfo'>Status: {report.status}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            ))}\r\n        </Container>\r\n        // <div className=\"reportsContainer\">\r\n        //      <div className=\"reportsMain\">\r\n        //          <div className=\"category\">\r\n        //              <React.Fragment>\r\n        //                     <ReportsNav/> \r\n        //             </React.Fragment> \r\n        //         </div>\r\n        //         <div className=\"citizenreports-btn-container\">\r\n        //             <NavLink to=\"/citizen-submit-reports\">\r\n        //                 <button className=\"citizenreports-submitreport-btn\">Create A Report</button>\r\n        //                 </NavLink>\r\n        //             <NavLink to=\"/citizen-chat-report\">\r\n        //                 <div className='chat-icon'>\r\n        //                     <i class=\"far fa-comment\"></i>\r\n        //                 </div>\r\n        //             </NavLink>\r\n        //         </div>\r\n        //         <Row className=\"citizenreportShort\">\r\n        //                 <Col className=\"citizenreportimg-container\">\r\n        //                     <img className=\"reportImg\" alt=\"reportimg\"src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n        //                 </Col>\r\n        //                 <Col>\r\n        //                     <Row className='citizenreport-reportTitleContainer'>\r\n        //                         <span className=\"citizenreport-reportTitle\"><h2>Road Damage</h2></span>\r\n        //                     </Row>\r\n        //                     <Row className=\"reportDetails\">\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Where: Cainta Rizal</span>\r\n        //                             <span className=\"reportInfo\">Reported by: John Doe</span>\r\n        //                             <span className=\"reportInfo\">Date Submitted: September 17, 2021 11:17am</span>\r\n        //                         </Col>\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Status: Confirmed</span>\r\n        //                         </Col>\r\n        //                     </Row>\r\n        //                 </Col>\r\n        //         </Row>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default CitizenReports;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["486","487"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from '../../CitizenProposals/CreateProposals/CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\nimport './CitizenSubmitReport.css';\r\n\r\nconst CitizenSubmitReport = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const reportData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                reportData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/reports', reportData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            { redirect && (<Redirect to = '/citizen-reports' />) }\r\n            <Container className=\"citizenSubmitReport-container\">\r\n                <Row>\r\n                    <div className=\"citizen-header\">\r\n                        <h1>Found a Problem? Go Submit a Report</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className=\"citizenSubmitReport-edit\">\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className=\"citizenSubmitReport-input\">\r\n                                            <label>Report Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Report Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className=\"citizenSubmitReportQuote\">\r\n                                        <h2>Reporting a problem or an issue is your <span className=\"text-highlight\">ambag</span></h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    <Col className=\"citizenSubmitReport-input\">\r\n                                        <label>Location</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Location\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.CitizenCreateProposalPhotoInput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"ButtonDiv\">\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>  \r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CitizenSubmitReport;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { Formik, Form, ErrorMessage, Field, validateYupSchema } from 'formik';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './CitizenViewProposal.css';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport * as Yup from 'yup';\r\n\r\nconst CitizenViewProposal = () => {\r\n    const [proposal, setProposal] = useState([]);\r\n    const [comments, setComments] = useState();\r\n    const [upvoteclicked, upvotesetClicked] = useState(false);\r\n    const [downclicked, downsetClicked] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n    const [disable, setDisable] = useState(false);\r\n    const [arrEmpty, setarrEmpty] = useState();\r\n    let count = 0;\r\n    \r\n    const proposalId = localStorage.getItem('proposalid');\r\n    // const name = comments.user;\r\n    // const msg = comments.message;\r\n    \r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            // console.log(proposalId)\r\n            const response = await fetch(`/api/proposals/${proposalId}`);\r\n            // console.log(response)\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            // const newResponseData = JSON.stringify(responseData.data);\r\n            // console.log(newResponseData);\r\n            setProposal(responseData.data.proposal);\r\n            setComments(responseData.data.proposal.comments)\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(proposal.upvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.upvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    upvotesetClicked(true)\r\n                }else{\r\n                    upvotesetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    useEffect(()=>{\r\n        if(proposal.downvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.downvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    downsetClicked(true)\r\n                }else{\r\n                    downsetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    const castUpVote = async (proposalId, userId) =>{\r\n        upvotesetClicked(true);\r\n        const removeVote = {\r\n            downvote:userId\r\n        }\r\n        try{\r\n            if(downclicked){\r\n                const response = await axios.patch(`/api/proposals/removeDownVote/${proposalId}`, removeVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response2 = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                    if (result) {\r\n                        console.log(result)\r\n                        window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n\r\n    const castDownVote = async (proposalId, userId) =>{\r\n        downsetClicked(true);\r\n        const removeVote = {\r\n            upvote:userId\r\n        }\r\n        try{\r\n            if(upvoteclicked){\r\n                \r\n                    const response = await axios.patch(`/api/proposals/removeUpVote/${proposalId}`, removeVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n                    const addUserVote = {\r\n                        downvote:userId\r\n                    };\r\n                    // Add userId to proposals upvote array\r\n                    const response2 = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    downvote:userId\r\n                };\r\n                //Add userId to proposals upvote array\r\n                const response = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    // const postComment = async (proposalId,userId)\r\n\r\n    const initialValues = {\r\n        user:user.data.user.firstname+\" \"+user.data.user.lastname,\r\n        message:''\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        user: Yup.string(),\r\n        message:  Yup.string().required(\"Required\")\r\n    });\r\n\r\n    const onSubmit = async (values) => {\r\n        // console.log('Form values', values);\r\n\r\n        // const username = user.data.user.firstname+\" \"+user.data.user.lastname;\r\n        // const comment = {\r\n        //     user:username,\r\n        //     values\r\n        // };\r\n        console.log(values)\r\n        const res = await axios.patch(`/api/proposals/comments/${proposalId}`, values).catch(err => {\r\n            console.log('Error: ', err.res.values);\r\n        });\r\n        window.location.reload(false);\r\n        // const {...data} = newValues;\r\n        // const res = await axios.patch('/api/proposals/comments/', data).catch(err => {\r\n        //     console.log('Error: ', err.res.data);\r\n        // });\r\n\r\n        // setRedirect(true);\r\n    };\r\n    let test = proposal.comments\r\n    console.log(test);\r\n    // for(a=1; a < comments.length(), a++){\r\n\r\n    // };\r\n    return(\r\n        <Container className='citizenViewProposal-container'>\r\n                <Row className='citizenViewProposal-long'>\r\n                    <Col className='citizenViewProposal-title'>\r\n                        <h1>{proposal.title}</h1>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-description'>\r\n                        <p>{proposal.description}\r\n                        </p>\r\n\r\n                        <p>Where: {proposal.location}</p>\r\n                    </Col> \r\n                    \r\n                        <Col className='citizenViewProposal-img-frame'>\r\n                            <img src='https://imgur.com/7pFJPjg.png'  className='citizenViewProposal-img' alt='Proposal'/>\r\n                        </Col>\r\n                    \r\n                    <Col className='citizenViewProposal-auth'>\r\n                            <p>Proposed by: {proposal.userName}</p>\r\n                            <p>Proposed on: {proposal.createdAt}</p>\r\n                            <p>Status: {proposal.status}</p>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-status'>Status: {proposal.status}</Col>\r\n                    <Col className='citizenViewProposal-btn-container'>\r\n                        <Row className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user upvoted propopsal onClick={() => castUpVote(proposal._id, user.data.user._id)} {proposal.upvote.length ? proposal.upvote.length : 0}*/}\r\n                            <Button disabled={ upvoteclicked } onClick={() => castUpVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Upvote: </Button>\r\n                        </Row>\r\n                        <Row  className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user downvoted propopsal  onClick={() => castDownVote(proposal._id, user.data.user._id)} {proposal.downvote.length ? proposal.downvote.length : 0}*/}\r\n                            <Button disabled={ downclicked } onClick={() => castDownVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Downvote: </Button>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className='citizenViewProposal-inputcomment-container'>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form>\r\n                            <Field\r\n                                className='citizenViewProposal-writecomment'\r\n                                type='text'\r\n                                placeholder='write a comment'\r\n                                id='message'\r\n                                name='message'/>\r\n                            {/* <ErrorMessage name=\"comments\">\r\n                                    {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                </ErrorMessage> */}\r\n                                <div className='buttonContainer'>\r\n                                    <SubmitButton />\r\n                                </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </Row>\r\n                <Row className='citizenViewProposal-writecomment-container'>\r\n                    {/* <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img'>\r\n                            <img src='https://imgur.com/82XUVjV.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>Kevin Gojocco</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>John Doe</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col> */}\r\n                    {comments && comments.map(comment => (\r\n                    <Col className='citizenViewProposal-comment' key={comment._id}>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>{comment.user}</Col>\r\n                            <Col>{comment.message}</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    ))};\r\n                </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CitizenViewProposal;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["514"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../../context/Context';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport './CitizenProfile.css';\r\n\r\nconst CitizenProfile = () => {\r\n    const { user, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [logs, setLogs] = useState([]);\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [reports, setReports] = useState([]);\r\n    const [proposals, setProposals] = useState([]);\r\n    const [verifiedReports, setVerifiedReports] = useState([]);\r\n    const [approvedProposals, setApprovedProposals] = useState([]);\r\n    const [loading, setLoading] =  useState(true);\r\n    \r\n    const citizen = user.data.user.firstname + \" \" + user.data.user.lastname;\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/citizens/?user=${citizen}`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        const fetchReports = async () => {\r\n            const res = await axios.get(`/api/reports/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setReports(count);\r\n        }\r\n\r\n        const fetchProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.data.proposals.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setProposals(count);\r\n        }\r\n\r\n        const fetchVerifiedReports = async () => {\r\n            const res = await axios.get(`/api/reports/confirmed/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n            setVerifiedReports(count);\r\n        }\r\n\r\n        const fetchApprovedProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/approved/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setApprovedProposals(count);\r\n        }\r\n\r\n        fetchLogs();\r\n        fetchReports();\r\n        fetchProposals();\r\n        fetchVerifiedReports();\r\n        fetchApprovedProposals();\r\n    }, [])\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"UPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: user.token,\r\n        }\r\n        if (file) {\r\n            setLoading(false);\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                console.log(file.name);\r\n                try {\r\n                    const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                    dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n                    setLoading(true);\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"UPDATE_FAILURE\" })\r\n                    setLoading(true);\r\n                }\r\n            } catch (err) {\r\n                setLoading(true);\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n            setLoading(true);\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        {loading ? (\r\n        <Container className = 'citizenProfile-container'>\r\n            <div className = 'citizenAccountImg-shadow'>\r\n                <div className = 'citizenAccountImg'>\r\n                    <img src= {file ? (URL.createObjectURL(file)) : `${user.data.user.profilePic}`} alt=\"\" ></img>\r\n                </div>\r\n            </div>\r\n            \r\n            {iconUpload === false &&\r\n                <>\r\n                    <div className = 'citizenProfile-changeLink'>\r\n                        <p onClick = { setIconTrue }>Change Profile Picture?</p>\r\n                    </div>\r\n\r\n                    <div className=\"citizenProfile-changeImg\">\r\n                        <Form.Label ><i className=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {iconUpload &&\r\n                <div className=\"citizenProfile-changeImg\">\r\n                    <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n\r\n                    <ReactTooltip id=\"infoBtn\" place=\"top\" effect=\"solid\">\r\n                        If button is clicked and not submitting please input photo again. . .\r\n                    </ReactTooltip>\r\n                    <Form.Label  data-tip data-for=\"infoBtn\" htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                </div>\r\n            }\r\n\r\n            <div  className = 'col-md-10 offset-md-1' id = 'citizenProfile-body'>\r\n                <div className = 'citizenProfile-name'> \r\n                     <p>{user.data.user.firstname + \" \" + user.data.user.middlename + \" \" + user.data.user.lastname}</p>\r\n                 </div>\r\n                 <div className = 'citizenProfile-statsDesktop'>\r\n                    <Row>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Col className = 'citizenProfile-Badge'>\r\n                            <h4>Badge</h4>\r\n                            {verifiedReports === 5 &&\r\n                            <>\r\n                                <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached five (5) verified reports!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                </div>\r\n                            </>\r\n                            }\r\n\r\n                            {approvedProposals === 10 &&\r\n                            <>\r\n                                <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached ten (10) verified proposals!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                </div>\r\n                            </>\r\n                            }\r\n                        </Col>\r\n                        ) : (<></>)}\r\n                        <Col>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Proposals Created</h4>\r\n                                    <p>{ proposals }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Approved Proposals</h4>\r\n                                    <p>{ approvedProposals }</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Verified Reports</h4>\r\n                                    <p>{ verifiedReports }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Reports Created</h4>\r\n                                    <p>{ reports }</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className = 'citizenProfile-statsMobile'>\r\n                    <Col>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Row className = 'citizenProfile-Badge'>\r\n                                <Col>\r\n                                    <Row>\r\n                                        <Row><h4>Badge</h4></Row>\r\n                                        {verifiedReports === 5 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached five (5) verified reports!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n\r\n                                        {approvedProposals === 10 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached ten (10) verified proposals!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (<></>)}\r\n                        \r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Proposals Created</h4></Row>\r\n                                <Row><p>{ proposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                            <Row><h4>Approved Proposals</h4></Row>\r\n                            <Row><p>{ approvedProposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Verified Reports</h4></Row>\r\n                                <Row><p>{ verifiedReports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Reports Created</h4></Row>\r\n                                <Row><p>{ reports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n            \r\n            <Form className = 'citizenProfile-edit' onSubmit = { handleSubmit }>\r\n                <h3>Personal Information</h3>\r\n                  <Form.Group>\r\n                    <input\r\n                        id=\"iconImg\"\r\n                        type=\"file\"\r\n                        name=\"citizenImg\"\r\n                        required\r\n                        style = {{display: \"none\"}}\r\n                        onChange = {(e) => setFile(e.target.files[0])}\r\n                    />\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"lname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.lastname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"fname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.firstname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"mname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.middlename}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Suffix</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.suffix}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sex\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.sex}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Birth Date</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.birthdate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Full Address</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.street +\" \"+user.data.user.barangay +\" \"+user.data.user.city +\" \"+user.data.user.region}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button id=\"btnImg\" type = 'submit' style={{display:'none'}}></Button>\r\n            </Form>\r\n            <Link to = '/citizen-pass-update' className = 'citizenProfile-passwordUpdate'><i className=\"editIcon far fa-edit\"></i></Link>\r\n        </Container>\r\n        ) : (\r\n            <div className = 'citizenProfileLoading'>\r\n              <h2>Processing Please Wait</h2>\r\n              <div>\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"primary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"success\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"danger\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"warning\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"light\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"dark\" />\r\n              </div>\r\n            </div>\r\n        )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CitizenProfile;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["515","516","517","518","519","520"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container } from 'react-bootstrap';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './CitizenViewProject.css';\r\n\r\nconst CitizenViewProject = () => {\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [project, setProject] = useState([]);\r\n    const [viewCount, setViewCount] = useState();\r\n    const projectId = localStorage.getItem('projectid');\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`/api/projects/${path}`);\r\n            const responseData = await response.json();\r\n            setProject(responseData.data.project);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const date = new Date(project.createdAt).toLocaleDateString()\r\n\r\n    console.log(project)\r\n\r\n    // console.log(viewCount)\r\n    return(\r\n        <Container className='citizenViewProject-container'>\r\n                <Row className='citizenViewProject-long'>\r\n                    <Col className='citizenViewProject-title'>\r\n                        <h1>{project.title}</h1>\r\n\r\n                        <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-description'>\r\n                        <p>{project.description}</p>\r\n                    </Col> \r\n\r\n                    <Col className='citizenViewProject-img-frame'>\r\n                        <img src={project.coverImage}  className='citizenViewProject-img' alt='Project'/>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-status'>\r\n                        <p>Date created: {date}</p>\r\n                        <p>Where: {project.location}</p>\r\n                        <p>Status: {project.status}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link className = 'citizen-backButton' to = '/citizen-projects'>\r\n                    Back\r\n                </Link>\r\n        </Container>\r\n    );\r\n};\r\nexport default CitizenViewProject;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["521","522"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CitizenCreateProposal = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const proposalData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                proposalData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/proposals', proposalData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n    // console.log(citizenUser.user.data.user._id);\r\n    return(\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-proposals' />) }\r\n            <Container className={classes.CitizenCreateProposalContentContainer}>\r\n                {/* <div className = 'col-lg-10 offset-lg-1'> */}\r\n                <Row>\r\n                    <div className={classes.QuoteDiv}>\r\n                        <h1>Go create your proposal and make an impact!</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.CitizenCreateProposalForm}>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Proposal Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Proposal Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        {/* <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"userName\"\r\n                                                id=\"userName\"\r\n                                                name=\"userName\"\r\n                                            />\r\n                                        </Row> */}\r\n                                    </Col>\r\n                                    <Col className={classes.CitizenCreateProposalHeader} sm={6}>\r\n                                            <h2>Pursue your calling </h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    {/* <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>When to Start Hopefully</label>\r\n                                        <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Date of Start hopefully\"\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                        />\r\n                                        <ErrorMessage name=\"date\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col> */}\r\n                                    <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>Where</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Where\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.citizensubmitreportphotoinput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={classes.ButtonDiv}>\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>    \r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n        </>\r\n\r\n    //  {/* <React.Fragment> */}\r\n    //          {/* <div className={classes.CitizenCreateProposalContentDiv}> */}\r\n    //              {/* <div className={classes.QuoteDiv}> */}\r\n    //                  {/* <h1>Go create your proposal and make an impact!</h1> */}\r\n    //              {/* </div> */}\r\n\r\n    //              {/* <Formik */}\r\n    //                 {/* //  initialValues={initialValues}\r\n    //                 //  validationSchema={validationSchema}\r\n    //                 //  onSubmit={onSubmit}\r\n    //             //  > */}\r\n    //                  {/* <Form className={classes.CitizenCreateProposalForm}> */}\r\n    //                      {/* <div className={classes.CitizenCreateProposalFormDiv}> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Proposal Title</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Proposal Title\"\r\n    //                                 //  id=\"title\"\r\n    //                                 //  name=\"title\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"title\"> */}\r\n    //                                  {/* {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>} */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Description</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Description\"\r\n    //                                 //  id=\"description\"\r\n    //                                 //  name=\"description\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"name\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>When</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"When\"\r\n    //                                 //  id=\"date\"\r\n    //                                 //  name=\"date\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"date\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Where</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Where\"\r\n    //                                 //  id=\"location\"\r\n    //                                 //  name=\"location\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"location\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                      {/* </div> */}\r\n    //                      {/* <div className={classes.ButtonDiv}> */}\r\n    //                          {/* <SubmitButton /> */}\r\n    //                          {/* <CancelButton /> */}\r\n    //                      {/* </div> */}\r\n    //                  {/* </Form> */}\r\n    //              {/* </Formik> */}\r\n    //          {/* </div> */}\r\n    //      {/* </React.Fragment> */}\r\n    );\r\n};\r\n\r\nexport default CitizenCreateProposal;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["523","524","525","526","527","528"],"import \"./CitizenProjects.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Column, Row, Container } from 'react-bootstrap'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst CitizenProjects = () => {\r\n    const [projects, setProjects] = useState();\r\n    const [views, setViews] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/projects');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData.data.projects);\r\n    }\r\n    \r\n    const categoryAccomplished = async () => {\r\n        const response = await fetch('/api/projects/accomplished');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n\r\n    const categoryOngoing = async () => {\r\n        const response = await fetch('/api/projects/ongoing');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n    \r\n    const getProjectId = async (projectId) => {\r\n        try {\r\n            await axios.post(`/api/projects/updateViewCount/${projectId}`);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n    // console.log(projects)\r\n    //Accomplished/Ongoing Category\r\n    //onClick={() => categoryAccomplished/Ongoing(status:Accomplished/Ongoing)}\r\n    //const categoryAccomplished/Ongoing = async (status) =>{}\r\n    // dito icocompare mo yung Accomplished/Ongoing na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n\r\n\r\n    return (\r\n        <div className='citizenprojects-container' >\r\n            <Row className='citizenprojects-catbar-container'>\r\n                <Col className='citizenprojects-catbar'>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAccomplished()}>Accomplished</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryOngoing()}>Ongoing</button>\r\n                </Col>\r\n            </Row> \r\n            {projects && projects.map(project =>(\r\n                <Row  className='citizenprojects-short' key={project._id}>\r\n                <Col className='citizenprojects-shortinfo'>\r\n                    <Row className='citizenprojects-shortinfo-auth'>\r\n                        <h2>{project.title}</h2>\r\n                        <Col className='citizenprojects-auth-container'>\r\n                            <div className='citizenprojects-auth'>{project.userId}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-desc'>\r\n                        {project.description}\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-status'>\r\n                        <p>Status: {project.status}</p>\r\n                        <div className='citizenprojects-shortinfo-status-views'>\r\n                            <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                        </div>\r\n                    </Row>\r\n                    {/* onClick{()=> viewCountUp(project._id)}  */}\r\n                    <Link className='citizenprojects-viewmore' onClick = { () => getProjectId(project._id) } to={`/citizen-view-project/${project._id}`} >\r\n                        View More\r\n                    </Link>\r\n                </Col>\r\n\r\n                <Col className='citizenprojects-shortinfo-img-container'>\r\n                    <div className='citizenprojects-shortinfo-img-frame'>\r\n                        <img src={project.coverImage}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default CitizenProjects;\r\n\r\n\r\n\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["529"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenChatOnline.module.css';\r\n\r\nconst CitizenChatOnline = ({currentId, setCurrentChat}) => {\r\n    const [allAdmins, setAllAdmins] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/admin');\r\n            const responseData = await response.json();\r\n            setAllAdmins(responseData);\r\n            // console.log(responseData.data)\r\n        }\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const handleClick = async (user) => {\r\n        try {\r\n            const res = await axios.get(`/api/conversations/${currentId}/${user._id}` );\r\n            //const resData = await res.json();\r\n            setCurrentChat(res)\r\n            console.log(res.data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n   //console.log(allAdmins);\r\n\r\n    return ( \r\n        <div className={classes.ChatOnline}>\r\n            {allAdmins && allAdmins.map((admin) => (\r\n            <div className={classes.ChatOnlineAdmin} key={admin._id}  onClick={() => handleClick(admin)}> \r\n                <div className={classes.ChatOnlineImageContainer}>\r\n                <img \r\n                    className={classes.ChatOnlineImage}\r\n                    src=\"https://images.pexels.com/photos/7322511/pexels-photo-7322511.jpeg?cs=srgb&dl=pexels-koolshooters-7322511.jpg&fm=jpg\" \r\n                />\r\n                <div className={classes.ChatOnlineBadge}></div>\r\n                </div>\r\n                <span className={classes.ChatOnlineName}>{admin.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CitizenChatOnline;\r\n\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["530"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenConversations.module.css';\r\n\r\nconst CitizenConversations = ({conversation, currentUser}) => {\r\n    const [adminUser, setAdminUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const adminId = conversation.members.find(m => m !== currentUser._id);\r\n        //console.log(\"current user \" + adminId);\r\n\r\n        const getAdminUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/admin/' + adminId);\r\n                setAdminUser(res.data);\r\n                // console.log(res.data);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }; \r\n        getAdminUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    \r\n    //console.log(currentUser);\r\n\r\n    return(\r\n        <div className={classes.CitizenConversations}>\r\n            <img \r\n                className={classes.CitizenConversationsImg}\r\n                src={currentUser.data.user.profilePic}\r\n                alt=\"sample-image\"\r\n            />\r\n            <span className={classes.ConversationName}>{adminUser?.username}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitizenConversations;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["531"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './AdminConversations.module.css';\r\n\r\nconst AdminConversations = ({conversation, currentUser}) => {\r\n    //insert soon\r\n    const [citizenUser, setCitizenUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const friendId = conversation.members.find(m => m !== currentUser._id);\r\n        \r\n        // console.log(\"current user is \" + currentUser.user._id);\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/citizen/' + friendId);\r\n                setCitizenUser(res.data);\r\n                // console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    //console.log(citizenUser);\r\n    //console.log(citizenUser._id);\r\n    return(\r\n        <div className={classes.AdminConversations}>\r\n            <img \r\n                className={classes.AdminConversationsImg} \r\n                src=\"https://images.pexels.com/photos/1165999/pexels-photo-1165999.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" \r\n                alt=\"sample-image\" />\r\n            <span className={classes.ConversationName}>{citizenUser?.firstname + ' ' + citizenUser?.lastname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminConversations;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],{"ruleId":"532","replacedBy":"533"},{"ruleId":"534","replacedBy":"535"},{"ruleId":"536","severity":1,"message":"537","line":48,"column":8,"nodeType":"538","messageId":"539","endLine":48,"endColumn":19},{"ruleId":"536","severity":1,"message":"540","line":49,"column":8,"nodeType":"538","messageId":"539","endLine":49,"endColumn":18},{"ruleId":"536","severity":1,"message":"541","line":7,"column":10,"nodeType":"538","messageId":"539","endLine":7,"endColumn":17},{"ruleId":"536","severity":1,"message":"542","line":26,"column":11,"nodeType":"538","messageId":"539","endLine":26,"endColumn":17},{"ruleId":"536","severity":1,"message":"543","line":1,"column":38,"nodeType":"538","messageId":"539","endLine":1,"endColumn":47},{"ruleId":"536","severity":1,"message":"544","line":1,"column":39,"nodeType":"538","messageId":"539","endLine":1,"endColumn":45},{"ruleId":"536","severity":1,"message":"545","line":5,"column":10,"nodeType":"538","messageId":"539","endLine":5,"endColumn":19},{"ruleId":"536","severity":1,"message":"546","line":28,"column":11,"nodeType":"538","messageId":"539","endLine":28,"endColumn":16},{"ruleId":"536","severity":1,"message":"547","line":28,"column":28,"nodeType":"538","messageId":"539","endLine":28,"endColumn":38},{"ruleId":"536","severity":1,"message":"548","line":3,"column":10,"nodeType":"538","messageId":"539","endLine":3,"endColumn":13},{"ruleId":"536","severity":1,"message":"549","line":3,"column":15,"nodeType":"538","messageId":"539","endLine":3,"endColumn":18},{"ruleId":"536","severity":1,"message":"550","line":3,"column":26,"nodeType":"538","messageId":"539","endLine":3,"endColumn":35},{"ruleId":"536","severity":1,"message":"551","line":11,"column":8,"nodeType":"538","messageId":"539","endLine":11,"endColumn":23},{"ruleId":"536","severity":1,"message":"552","line":18,"column":10,"nodeType":"538","messageId":"539","endLine":18,"endColumn":19},{"ruleId":"536","severity":1,"message":"553","line":19,"column":8,"nodeType":"538","messageId":"539","endLine":19,"endColumn":17},{"ruleId":"536","severity":1,"message":"554","line":23,"column":7,"nodeType":"538","messageId":"539","endLine":23,"endColumn":23},{"ruleId":"536","severity":1,"message":"555","line":4,"column":8,"nodeType":"538","messageId":"539","endLine":4,"endColumn":18},{"ruleId":"536","severity":1,"message":"556","line":1,"column":40,"nodeType":"538","messageId":"539","endLine":1,"endColumn":50},{"ruleId":"536","severity":1,"message":"557","line":3,"column":10,"nodeType":"538","messageId":"539","endLine":3,"endColumn":19},{"ruleId":"536","severity":1,"message":"558","line":4,"column":13,"nodeType":"538","messageId":"539","endLine":4,"endColumn":16},{"ruleId":"536","severity":1,"message":"559","line":10,"column":8,"nodeType":"538","messageId":"539","endLine":10,"endColumn":13},{"ruleId":"536","severity":1,"message":"546","line":18,"column":13,"nodeType":"538","messageId":"539","endLine":18,"endColumn":18},{"ruleId":"536","severity":1,"message":"560","line":44,"column":23,"nodeType":"538","messageId":"539","endLine":44,"endColumn":26},{"ruleId":"536","severity":1,"message":"561","line":1,"column":29,"nodeType":"538","messageId":"539","endLine":1,"endColumn":37},{"ruleId":"536","severity":1,"message":"558","line":4,"column":13,"nodeType":"538","messageId":"539","endLine":4,"endColumn":16},{"ruleId":"536","severity":1,"message":"559","line":9,"column":8,"nodeType":"538","messageId":"539","endLine":9,"endColumn":13},{"ruleId":"536","severity":1,"message":"560","line":45,"column":23,"nodeType":"538","messageId":"539","endLine":45,"endColumn":26},{"ruleId":"562","severity":1,"message":"563","line":22,"column":6,"nodeType":"564","endLine":22,"endColumn":8,"suggestions":"565"},{"ruleId":"566","severity":1,"message":"567","line":69,"column":13,"nodeType":"568","endLine":69,"endColumn":79},{"ruleId":"536","severity":1,"message":"569","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":21},{"ruleId":"536","severity":1,"message":"557","line":3,"column":10,"nodeType":"538","messageId":"539","endLine":3,"endColumn":19},{"ruleId":"536","severity":1,"message":"570","line":3,"column":21,"nodeType":"538","messageId":"539","endLine":3,"endColumn":27},{"ruleId":"536","severity":1,"message":"571","line":3,"column":29,"nodeType":"538","messageId":"539","endLine":3,"endColumn":33},{"ruleId":"536","severity":1,"message":"572","line":3,"column":35,"nodeType":"538","messageId":"539","endLine":3,"endColumn":40},{"ruleId":"536","severity":1,"message":"573","line":3,"column":42,"nodeType":"538","messageId":"539","endLine":3,"endColumn":54},{"ruleId":"536","severity":1,"message":"558","line":5,"column":13,"nodeType":"538","messageId":"539","endLine":5,"endColumn":16},{"ruleId":"536","severity":1,"message":"559","line":10,"column":8,"nodeType":"538","messageId":"539","endLine":10,"endColumn":13},{"ruleId":"536","severity":1,"message":"574","line":12,"column":8,"nodeType":"538","messageId":"539","endLine":12,"endColumn":20},{"ruleId":"536","severity":1,"message":"575","line":13,"column":8,"nodeType":"538","messageId":"539","endLine":13,"endColumn":20},{"ruleId":"536","severity":1,"message":"546","line":19,"column":13,"nodeType":"538","messageId":"539","endLine":19,"endColumn":18},{"ruleId":"562","severity":1,"message":"563","line":33,"column":8,"nodeType":"564","endLine":33,"endColumn":10,"suggestions":"576"},{"ruleId":"536","severity":1,"message":"577","line":44,"column":52,"nodeType":"538","messageId":"539","endLine":44,"endColumn":59},{"ruleId":"536","severity":1,"message":"560","line":84,"column":23,"nodeType":"538","messageId":"539","endLine":84,"endColumn":26},{"ruleId":"536","severity":1,"message":"578","line":9,"column":8,"nodeType":"538","messageId":"539","endLine":9,"endColumn":14},{"ruleId":"536","severity":1,"message":"579","line":2,"column":27,"nodeType":"538","messageId":"539","endLine":2,"endColumn":33},{"ruleId":"536","severity":1,"message":"580","line":46,"column":11,"nodeType":"538","messageId":"539","endLine":46,"endColumn":23},{"ruleId":"536","severity":1,"message":"581","line":71,"column":11,"nodeType":"538","messageId":"539","endLine":71,"endColumn":23},{"ruleId":"536","severity":1,"message":"544","line":1,"column":27,"nodeType":"538","messageId":"539","endLine":1,"endColumn":33},{"ruleId":"536","severity":1,"message":"569","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":21},{"ruleId":"536","severity":1,"message":"582","line":10,"column":19,"nodeType":"538","messageId":"539","endLine":10,"endColumn":29},{"ruleId":"562","severity":1,"message":"563","line":22,"column":6,"nodeType":"564","endLine":22,"endColumn":8,"suggestions":"583"},{"ruleId":"566","severity":1,"message":"567","line":56,"column":13,"nodeType":"568","endLine":56,"endColumn":78},{"ruleId":"562","severity":1,"message":"563","line":20,"column":6,"nodeType":"564","endLine":20,"endColumn":8,"suggestions":"584"},{"ruleId":"536","severity":1,"message":"560","line":44,"column":11,"nodeType":"538","messageId":"539","endLine":44,"endColumn":14},{"ruleId":"536","severity":1,"message":"585","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":14},{"ruleId":"536","severity":1,"message":"586","line":4,"column":10,"nodeType":"538","messageId":"539","endLine":4,"endColumn":13},{"ruleId":"536","severity":1,"message":"585","line":2,"column":10,"nodeType":"538","messageId":"539","endLine":2,"endColumn":14},{"ruleId":"536","severity":1,"message":"586","line":4,"column":10,"nodeType":"538","messageId":"539","endLine":4,"endColumn":13},{"ruleId":"536","severity":1,"message":"575","line":8,"column":8,"nodeType":"538","messageId":"539","endLine":8,"endColumn":20},{"ruleId":"536","severity":1,"message":"571","line":2,"column":20,"nodeType":"538","messageId":"539","endLine":2,"endColumn":24},{"ruleId":"536","severity":1,"message":"579","line":2,"column":26,"nodeType":"538","messageId":"539","endLine":2,"endColumn":32},{"ruleId":"536","severity":1,"message":"585","line":3,"column":10,"nodeType":"538","messageId":"539","endLine":3,"endColumn":14},{"ruleId":"536","severity":1,"message":"579","line":7,"column":10,"nodeType":"538","messageId":"539","endLine":7,"endColumn":16},{"ruleId":"536","severity":1,"message":"587","line":31,"column":15,"nodeType":"538","messageId":"539","endLine":31,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":208,"column":1,"nodeType":"590","messageId":"591","endLine":248,"endColumn":11},{"ruleId":"536","severity":1,"message":"540","line":5,"column":8,"nodeType":"538","messageId":"539","endLine":5,"endColumn":18},{"ruleId":"536","severity":1,"message":"571","line":6,"column":20,"nodeType":"538","messageId":"539","endLine":6,"endColumn":24},{"ruleId":"536","severity":1,"message":"579","line":6,"column":26,"nodeType":"538","messageId":"539","endLine":6,"endColumn":32},{"ruleId":"536","severity":1,"message":"592","line":7,"column":10,"nodeType":"538","messageId":"539","endLine":7,"endColumn":17},{"ruleId":"536","severity":1,"message":"593","line":21,"column":11,"nodeType":"538","messageId":"539","endLine":21,"endColumn":23},{"ruleId":"536","severity":1,"message":"587","line":23,"column":15,"nodeType":"538","messageId":"539","endLine":23,"endColumn":23},{"ruleId":"562","severity":1,"message":"594","line":31,"column":7,"nodeType":"564","endLine":31,"endColumn":9,"suggestions":"595"},{"ruleId":"536","severity":1,"message":"560","line":75,"column":27,"nodeType":"538","messageId":"539","endLine":75,"endColumn":30},{"ruleId":"536","severity":1,"message":"596","line":3,"column":39,"nodeType":"538","messageId":"539","endLine":3,"endColumn":48},{"ruleId":"536","severity":1,"message":"597","line":3,"column":50,"nodeType":"538","messageId":"539","endLine":3,"endColumn":63},{"ruleId":"536","severity":1,"message":"573","line":4,"column":24,"nodeType":"538","messageId":"539","endLine":4,"endColumn":36},{"ruleId":"536","severity":1,"message":"598","line":4,"column":45,"nodeType":"538","messageId":"539","endLine":4,"endColumn":62},{"ruleId":"536","severity":1,"message":"585","line":5,"column":10,"nodeType":"538","messageId":"539","endLine":5,"endColumn":14},{"ruleId":"536","severity":1,"message":"599","line":5,"column":16,"nodeType":"538","messageId":"539","endLine":5,"endColumn":24},{"ruleId":"536","severity":1,"message":"600","line":7,"column":8,"nodeType":"538","messageId":"539","endLine":7,"endColumn":19},{"ruleId":"536","severity":1,"message":"601","line":17,"column":19,"nodeType":"538","messageId":"539","endLine":17,"endColumn":27},{"ruleId":"536","severity":1,"message":"602","line":18,"column":12,"nodeType":"538","messageId":"539","endLine":18,"endColumn":19},{"ruleId":"536","severity":1,"message":"582","line":18,"column":21,"nodeType":"538","messageId":"539","endLine":18,"endColumn":31},{"ruleId":"536","severity":1,"message":"603","line":19,"column":12,"nodeType":"538","messageId":"539","endLine":19,"endColumn":20},{"ruleId":"536","severity":1,"message":"604","line":19,"column":22,"nodeType":"538","messageId":"539","endLine":19,"endColumn":33},{"ruleId":"536","severity":1,"message":"605","line":20,"column":9,"nodeType":"538","messageId":"539","endLine":20,"endColumn":14},{"ruleId":"562","severity":1,"message":"606","line":40,"column":7,"nodeType":"564","endLine":40,"endColumn":9,"suggestions":"607"},{"ruleId":"608","severity":1,"message":"609","line":55,"column":26,"nodeType":"610","messageId":"611","endLine":55,"endColumn":28},{"ruleId":"562","severity":1,"message":"612","line":63,"column":7,"nodeType":"564","endLine":63,"endColumn":17,"suggestions":"613"},{"ruleId":"608","severity":1,"message":"609","line":78,"column":26,"nodeType":"610","messageId":"611","endLine":78,"endColumn":28},{"ruleId":"562","severity":1,"message":"612","line":86,"column":7,"nodeType":"564","endLine":86,"endColumn":17,"suggestions":"614"},{"ruleId":"536","severity":1,"message":"587","line":95,"column":23,"nodeType":"538","messageId":"539","endLine":95,"endColumn":31},{"ruleId":"536","severity":1,"message":"615","line":105,"column":23,"nodeType":"538","messageId":"539","endLine":105,"endColumn":32},{"ruleId":"536","severity":1,"message":"587","line":117,"column":23,"nodeType":"538","messageId":"539","endLine":117,"endColumn":31},{"ruleId":"536","severity":1,"message":"587","line":140,"column":27,"nodeType":"538","messageId":"539","endLine":140,"endColumn":35},{"ruleId":"536","severity":1,"message":"615","line":151,"column":27,"nodeType":"538","messageId":"539","endLine":151,"endColumn":36},{"ruleId":"536","severity":1,"message":"587","line":164,"column":23,"nodeType":"538","messageId":"539","endLine":164,"endColumn":31},{"ruleId":"536","severity":1,"message":"560","line":198,"column":15,"nodeType":"538","messageId":"539","endLine":198,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":303,"column":29,"nodeType":"568","endLine":303,"endColumn":71},{"ruleId":"562","severity":1,"message":"616","line":79,"column":8,"nodeType":"564","endLine":79,"endColumn":10,"suggestions":"617"},{"ruleId":"536","severity":1,"message":"618","line":2,"column":8,"nodeType":"538","messageId":"539","endLine":2,"endColumn":13},{"ruleId":"536","severity":1,"message":"579","line":3,"column":20,"nodeType":"538","messageId":"539","endLine":3,"endColumn":26},{"ruleId":"536","severity":1,"message":"619","line":11,"column":12,"nodeType":"538","messageId":"539","endLine":11,"endColumn":21},{"ruleId":"536","severity":1,"message":"620","line":11,"column":23,"nodeType":"538","messageId":"539","endLine":11,"endColumn":35},{"ruleId":"536","severity":1,"message":"621","line":12,"column":11,"nodeType":"538","messageId":"539","endLine":12,"endColumn":20},{"ruleId":"562","severity":1,"message":"622","line":21,"column":7,"nodeType":"564","endLine":21,"endColumn":9,"suggestions":"623"},{"ruleId":"562","severity":1,"message":"594","line":31,"column":7,"nodeType":"564","endLine":31,"endColumn":9,"suggestions":"624"},{"ruleId":"536","severity":1,"message":"560","line":75,"column":27,"nodeType":"538","messageId":"539","endLine":75,"endColumn":30},{"ruleId":"536","severity":1,"message":"625","line":4,"column":15,"nodeType":"538","messageId":"539","endLine":4,"endColumn":21},{"ruleId":"536","severity":1,"message":"550","line":4,"column":28,"nodeType":"538","messageId":"539","endLine":4,"endColumn":37},{"ruleId":"536","severity":1,"message":"592","line":5,"column":16,"nodeType":"538","messageId":"539","endLine":5,"endColumn":23},{"ruleId":"536","severity":1,"message":"626","line":9,"column":12,"nodeType":"538","messageId":"539","endLine":9,"endColumn":17},{"ruleId":"536","severity":1,"message":"627","line":9,"column":19,"nodeType":"538","messageId":"539","endLine":9,"endColumn":27},{"ruleId":"566","severity":1,"message":"567","line":93,"column":25,"nodeType":"568","endLine":93,"endColumn":56},{"ruleId":"566","severity":1,"message":"567","line":37,"column":17,"nodeType":"568","endLine":40,"endColumn":19},{"ruleId":"628","severity":1,"message":"629","line":30,"column":13,"nodeType":"568","endLine":34,"endColumn":15},{"ruleId":"628","severity":1,"message":"629","line":31,"column":13,"nodeType":"568","endLine":34,"endColumn":38},"no-native-reassign",["630"],"no-negated-in-lhs",["631"],"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'Context' is defined but never used.","'string' is assigned a value but never used.","'useParams' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'ProfileIconCard' is defined but never used.","'propTypes' is defined but never used.","'TextError' is defined but never used.","'validationSchema' is assigned a value but never used.","'CardHeader' is defined but never used.","'useReducer' is defined but never used.","'useFormik' is defined but never used.","'Yup' is defined but never used.","'Input' is defined but never used.","'res' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["632"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useLocation' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'SubmitButton' is defined but never used.","'CancelButton' is defined but never used.",["633"],"'control' is assigned a value but never used.","'Tables' is defined but never used.","'Button' is defined but never used.","'handleAccept' is assigned a value but never used.","'handleReject' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["634"],["635"],"'Link' is defined but never used.","'Nav' is defined but never used.","'response' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'NavLink' is defined but never used.","'deletereport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.",["636"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'disable' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["637"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["638"],["639"],"'response2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["640"],"'axios' is defined but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["641"],["642"],"'Column' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"643","fix":"644"},{"desc":"643","fix":"645"},{"desc":"643","fix":"646"},{"desc":"643","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"652","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"648","fix":"659"},"Update the dependencies array to be: [params.id]",{"range":"660","text":"661"},{"range":"662","text":"661"},{"range":"663","text":"661"},{"range":"664","text":"661"},"Update the dependencies array to be: [citizenUser]",{"range":"665","text":"666"},"Update the dependencies array to be: [proposalId]",{"range":"667","text":"668"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"669","text":"670"},{"range":"671","text":"670"},"Update the dependencies array to be: [citizen]",{"range":"672","text":"673"},"Update the dependencies array to be: [path]",{"range":"674","text":"675"},{"range":"676","text":"666"},[712,714],"[params.id]",[1284,1286],[812,814],[691,693],[1472,1474],"[citizenUser]",[1790,1792],"[proposalId]",[2572,2582],"[proposal, user.data.user._id]",[3361,3371],[2643,2645],"[citizen]",[805,807],"[path]",[1398,1400]]
[{"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js":"1","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js":"2","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js":"3","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js":"4","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"5","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"6","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"7","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"8","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"9","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"10","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"11","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"12","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"13","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"14","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"15","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"16","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"17","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"18","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"19","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"20","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"21","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"22","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"23","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"24","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"25","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"26","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"27","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"28","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"29","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"30","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"31","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"32","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"33","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"34","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"35","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"36","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"37","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"38","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"39","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"40","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"41","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"42","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"43","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"44","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"45","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"46","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"47","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"48","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"49","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"50","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"51","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"52","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"53","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"54","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"55","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"56","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"57","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"58","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"59","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"60","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"61","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"62","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"63","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"64","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"65","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"66","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"67","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"68","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"69","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"70","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"71","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"72","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"73","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"74","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"75","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"76","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"77","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"78","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"79","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"80","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"81","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"82","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"83","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"84","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"85","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js":"86","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"87","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"88","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js":"89","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"90","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"91","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"92","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"93","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"94","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"95"},{"size":502,"mtime":1632024220082,"results":"96","hashOfConfig":"97"},{"size":1216,"mtime":1633083964466,"results":"98","hashOfConfig":"97"},{"size":14896,"mtime":1633095148072,"results":"99","hashOfConfig":"97"},{"size":3965,"mtime":1632787586711,"results":"100","hashOfConfig":"97"},{"size":2508,"mtime":1630923076504,"results":"101","hashOfConfig":"97"},{"size":9631,"mtime":1632848169039,"results":"102","hashOfConfig":"97"},{"size":1886,"mtime":1631521809228,"results":"103","hashOfConfig":"97"},{"size":2988,"mtime":1632572954093,"results":"104","hashOfConfig":"97"},{"size":3502,"mtime":1632787586718,"results":"105","hashOfConfig":"97"},{"size":4032,"mtime":1632572954074,"results":"106","hashOfConfig":"97"},{"size":4355,"mtime":1632787586714,"results":"107","hashOfConfig":"97"},{"size":9254,"mtime":1632848169073,"results":"108","hashOfConfig":"97"},{"size":7512,"mtime":1632848169122,"results":"109","hashOfConfig":"97"},{"size":4229,"mtime":1632572954098,"results":"110","hashOfConfig":"97"},{"size":4061,"mtime":1632647701956,"results":"111","hashOfConfig":"97"},{"size":10297,"mtime":1632848169110,"results":"112","hashOfConfig":"97"},{"size":2542,"mtime":1632787586873,"results":"113","hashOfConfig":"97"},{"size":3661,"mtime":1632572954083,"results":"114","hashOfConfig":"97"},{"size":2946,"mtime":1632787586886,"results":"115","hashOfConfig":"97"},{"size":3386,"mtime":1632787586794,"results":"116","hashOfConfig":"97"},{"size":2346,"mtime":1632647702242,"results":"117","hashOfConfig":"97"},{"size":7491,"mtime":1632647702226,"results":"118","hashOfConfig":"97"},{"size":3383,"mtime":1632787586860,"results":"119","hashOfConfig":"97"},{"size":3656,"mtime":1632572954089,"results":"120","hashOfConfig":"97"},{"size":5002,"mtime":1632159535339,"results":"121","hashOfConfig":"97"},{"size":2965,"mtime":1632848169177,"results":"122","hashOfConfig":"97"},{"size":2633,"mtime":1632647702328,"results":"123","hashOfConfig":"97"},{"size":8492,"mtime":1632647702221,"results":"124","hashOfConfig":"97"},{"size":2757,"mtime":1632647702360,"results":"125","hashOfConfig":"97"},{"size":3483,"mtime":1632647702390,"results":"126","hashOfConfig":"97"},{"size":3674,"mtime":1632647702405,"results":"127","hashOfConfig":"97"},{"size":5913,"mtime":1632848169146,"results":"128","hashOfConfig":"97"},{"size":9136,"mtime":1632986971756,"results":"129","hashOfConfig":"97"},{"size":2510,"mtime":1632787586510,"results":"130","hashOfConfig":"97"},{"size":3385,"mtime":1632787586503,"results":"131","hashOfConfig":"97"},{"size":2771,"mtime":1633174484442,"results":"132","hashOfConfig":"97"},{"size":2747,"mtime":1633191541732,"results":"133","hashOfConfig":"97"},{"size":3773,"mtime":1632787586573,"results":"134","hashOfConfig":"97"},{"size":17723,"mtime":1633143196041,"results":"135","hashOfConfig":"97"},{"size":2133,"mtime":1632889922032,"results":"136","hashOfConfig":"97"},{"size":2968,"mtime":1633095148140,"results":"137","hashOfConfig":"97"},{"size":6176,"mtime":1633107096490,"results":"138","hashOfConfig":"97"},{"size":18162,"mtime":1633177346588,"results":"139","hashOfConfig":"97"},{"size":22543,"mtime":1633167910295,"results":"140","hashOfConfig":"97"},{"size":2792,"mtime":1633095148163,"results":"141","hashOfConfig":"97"},{"size":2751,"mtime":1633161495015,"results":"142","hashOfConfig":"97"},{"size":13151,"mtime":1633191062610,"results":"143","hashOfConfig":"97"},{"size":10548,"mtime":1633002149950,"results":"144","hashOfConfig":"97"},{"size":4028,"mtime":1633168021981,"results":"145","hashOfConfig":"97"},{"size":10093,"mtime":1633095148251,"results":"146","hashOfConfig":"97"},{"size":9944,"mtime":1632907577045,"results":"147","hashOfConfig":"97"},{"size":4954,"mtime":1632848168851,"results":"148","hashOfConfig":"97"},{"size":2401,"mtime":1633141727284,"results":"149","hashOfConfig":"97"},{"size":2557,"mtime":1633142262885,"results":"150","hashOfConfig":"97"},{"size":3134,"mtime":1633002149954,"results":"151","hashOfConfig":"97"},{"size":733,"mtime":1632244653193,"results":"152","hashOfConfig":"97"},{"size":1027,"mtime":1632244653201,"results":"153","hashOfConfig":"97"},{"size":6736,"mtime":1633005752580,"results":"154","hashOfConfig":"97"},{"size":1561,"mtime":1632572954072,"results":"155","hashOfConfig":"97"},{"size":7283,"mtime":1633230882641,"results":"156","hashOfConfig":"97"},{"size":13373,"mtime":1633173506118,"results":"157","hashOfConfig":"97"},{"size":8393,"mtime":1633173506134,"results":"158","hashOfConfig":"97"},{"size":9606,"mtime":1633173506140,"results":"159","hashOfConfig":"97"},{"size":14218,"mtime":1633173506129,"results":"160","hashOfConfig":"97"},{"size":18165,"mtime":1633173506088,"results":"161","hashOfConfig":"97"},{"size":2155,"mtime":1633173506113,"results":"162","hashOfConfig":"97"},{"size":16060,"mtime":1633179669013,"results":"163","hashOfConfig":"97"},{"size":4269,"mtime":1633173506110,"results":"164","hashOfConfig":"97"},{"size":2183,"mtime":1631521809200,"results":"165","hashOfConfig":"97"},{"size":1584,"mtime":1632787586544,"results":"166","hashOfConfig":"97"},{"size":254,"mtime":1633151906818,"results":"167","hashOfConfig":"97"},{"size":425,"mtime":1633067938763,"results":"168","hashOfConfig":"97"},{"size":211,"mtime":1629619238980,"results":"169","hashOfConfig":"97"},{"size":286,"mtime":1632591048936,"results":"170","hashOfConfig":"97"},{"size":253,"mtime":1632979110420,"results":"171","hashOfConfig":"97"},{"size":255,"mtime":1632981125317,"results":"172","hashOfConfig":"97"},{"size":359,"mtime":1633172938136,"results":"173","hashOfConfig":"97"},{"size":1758,"mtime":1633227862647,"results":"174","hashOfConfig":"97"},{"size":845,"mtime":1633227468606,"results":"175","hashOfConfig":"97"},{"size":1243,"mtime":1633227987704,"results":"176","hashOfConfig":"97"},{"size":205,"mtime":1632596902141,"results":"177","hashOfConfig":"97"},{"size":219,"mtime":1629617925559,"results":"178","hashOfConfig":"97"},{"size":462,"mtime":1631945107822,"results":"179","hashOfConfig":"97"},{"size":904,"mtime":1633125441137,"results":"180","hashOfConfig":"97"},{"size":245,"mtime":1629618143712,"results":"181","hashOfConfig":"97"},{"size":221,"mtime":1632999229390,"results":"182","hashOfConfig":"97"},{"size":432,"mtime":1632997362370,"results":"183","hashOfConfig":"97"},{"size":297,"mtime":1629618403252,"results":"184","hashOfConfig":"97"},{"size":166,"mtime":1629618602202,"results":"185","hashOfConfig":"97"},{"size":364,"mtime":1632033019368,"results":"186","hashOfConfig":"97"},{"size":1403,"mtime":1633102175042,"results":"187","hashOfConfig":"97"},{"size":210,"mtime":1630333640183,"results":"188","hashOfConfig":"97"},{"size":250,"mtime":1631322385105,"results":"189","hashOfConfig":"97"},{"size":1966,"mtime":1631772488004,"results":"190","hashOfConfig":"97"},{"size":789,"mtime":1631772487985,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"6ijylg",{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"194"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"194"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"194"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"194"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"194"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"194"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"194"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"194"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"194"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"194"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"194"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"194"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"194"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"194"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"194"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"194"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"194"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"194"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"194"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"194"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"194"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"194"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"194"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\index.js",[],["413","414"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Context.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\App.js",["415","416"],"import React, { useState, useContext } from 'react';\r\nimport { Context } from './context/Context';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport LandingNavBar from './components/Landing/Navigation/LandingNavBar';\r\nimport Home from './pages/Landing/Home/Home';\r\nimport CitizenLogin from './pages/Landing/CitizenLogin/CitizenLogin';\r\nimport CitizenForgot from './pages/Landing/CitizenForgot/CitizenForgot';\r\nimport CitizenEmail from './pages/Landing/CitizenEmail/CitizenEmail';\r\nimport Features from './pages/Landing/Feature/Features';\r\nimport Progress from './components/Landing/Register/Progress';\r\nimport FirstStep from './pages/Landing/Register/FirstStep';\r\nimport SecondStep from './pages/Landing/Register/SecondStep';\r\nimport ThirdStep from './pages/Landing/Register/ThirdStep';\r\nimport FourthStep from './pages/Landing/Register/FourthStep';\r\nimport FifthStep from './pages/Landing/Register/FifthStep';\r\nimport SixthStep from './pages/Landing/Register/SixthStep';\r\nimport SeventhStep from './pages/Landing/Register/SeventhStep';\r\n\r\nimport CitizenNavBar from './components/Citizen/CitizenNav/CitizenNav';\r\nimport CitizenProfile from './pages/Citizen/CitizenProfile/CitizenProfile';\r\nimport CitizenProposals from './pages/Citizen/CitizenProposals/CitizenProposals';\r\nimport CitizenReports from './pages/Citizen/CitizenReports/CitizenReports';\r\nimport CitizenProjects from './pages/Citizen/CitizenProjects/CitizenProjects';\r\n\r\nimport AdminForgot from './components/AllAdmin/Administrator/AdminForgot/AdminForgot';\r\nimport AdminEmail from './components/AllAdmin/Administrator/AdminEmail/AdminEmail';\r\nimport AdminProfile from './components/AllAdmin/Administrator/AdminProfile/AdminProfile';\r\nimport AdminLogin from './components/AllAdmin/Administrator/AdminLogin/AdminLogin';\r\nimport AdminProposals from './components/AllAdmin/Administrator/AdminProposals/AdminProposals';\r\nimport AdminReports from './components/AllAdmin/Administrator/AdminReports/AdminReports';\r\nimport AdminMessages from './components/AllAdmin/Administrator/AdminMessages/AdminMessages';\r\nimport AdminProjects from './components/AllAdmin/Administrator/AdminProjects/AdminProjects';\r\nimport AdminUsers from './components/AllAdmin/Administrator/AdminUsers/AdminUsers';\r\nimport Applicants from './components/AllAdmin/Administrator/Applicants/Applicants';\r\nimport SingleApplicants from './components/AllAdmin/Administrator/SingleApplicants/SingleApplicants';\r\nimport SingleUsers from './components/AllAdmin/Administrator/SingleUsers/SingleUsers';\r\nimport AdminCreateProposals from './components/AllAdmin/Administrator/AdminCreateProposals/AdminCreateProposals';\r\nimport AdminCreateProjects from './components/AllAdmin/Administrator/AdminCreateProjects/AdminCreateProjects';\r\n\r\nimport CitizenPassUpdate from './pages/Citizen/CitizenProfile/CitizenPassUpdate/CitizenPassUpdate';\r\nimport CitizenCreateProposal from './pages/Citizen/CitizenProposals/CreateProposals/CitizenCreateProposals';\r\nimport CitizenViewProposal from './pages/Citizen/CitizenProposals/ViewProposals/CitizenViewProposal';\r\nimport CitizenViewReport from './pages/Citizen/CitizenReports/ViewReports/CitizenViewReport';\r\nimport CitizenSubmitReport from './pages/Citizen/CitizenReports/SubmitReport/CitizenSubmitReport';\r\nimport CitizenChatReport from './pages/Citizen/CitizenReports/ChatReports/CitizenChatReport';\r\nimport CitizenViewProject from './pages/Citizen/CitizenProjects/CitizenViewProject/CitizenViewProject';\r\nimport ProposalNav from './components/Citizen/ProposalNav/ProposalNav';\r\nimport ReportsNav from './components/Citizen/ReportsNav/ReportsNav';\r\n\r\nimport SANavBar from './components/SuperAdmin/SaSideBar';\r\nimport SALogin from './pages/SuperAdmin/SALogin/SALogin';\r\nimport SAForgot from './pages/SuperAdmin/SAForgot/SAForgot';\r\nimport SAEmail from './pages/SuperAdmin/SAEmail/SAEmail';\r\nimport SAContentHome from './pages/SuperAdmin/SAContentHome/SAContentHome';\r\nimport SAAnnouncements from './pages/SuperAdmin/SAAnnouncements/SAAnnouncements';\r\nimport SAFeaturedMember from './pages/SuperAdmin/SAFeaturedMember/SAFeaturedMember';\r\nimport SAEula from './pages/SuperAdmin/SAEula/SAEula';\r\nimport SAAddFeaturedMember from './pages/SuperAdmin/SAAddFeaturedMember/SAAddFeaturedMember';\r\nimport SAContentFeature from './pages/SuperAdmin/SAContentFeature/SAContentFeature';\r\nimport SAAddFeature from './pages/SuperAdmin/SAAddFeature/SAAddFeature';\r\nimport SAFeatures from './pages/SuperAdmin/SAFeatures/SAFeatures';\r\nimport SAManage from './pages/SuperAdmin/SAManage/SAManage';\r\nimport SASearchAdmin from './pages/SuperAdmin/SASearchAdmin/SASearchAdmin';\r\nimport SAAddAdmin from './pages/SuperAdmin/SAAddAdmin/SAAddAdmin';\r\nimport SAAccount from './pages/SuperAdmin/SAAccount/SAAccount';\r\nimport AdminReportsDashboard from './components/AllAdmin/Administrator/AdminReportsDashboard/AdminReportsDashboard';\r\nimport AdminProposalsDashboard from './components/AllAdmin/Administrator/AdminProposalsDashboard/AdminProposalsDashboard';\r\nimport AdminEachProposal from './components/AllAdmin/Administrator/AdminEachProposal/AdminEachProposal';\r\nimport AdminEachProject from './components/AllAdmin/Administrator/AdminEachProject/AdminEachProject';\r\nimport AdminEachReport from './components/AllAdmin/Administrator/AdminEachReport/AdminEachReport';\r\nimport AdminUpdateProject from './components/AllAdmin/Administrator/AdminUpdateProject/AdminUpdateProject';\r\n\r\nconst App = () => {\r\n\r\n  //Register data passing...\r\n  const [citizen, setCitizen] = useState({});\r\n\r\n  const updateCitizen = (data) => {\r\n    setCitizen((prevCitizen) => ({ ...prevCitizen, ...data }));\r\n  };\r\n\r\n  const resetCitizen = () => {\r\n    setCitizen({});\r\n  };\r\n\r\n  //Citizen User...\r\n  const { user } = useContext(Context);\r\n\r\n  // console.log(user);\r\n\r\n  //Super Administrator User...\r\n  const { saUser } = useContext(Context);\r\n\r\n  //Administrator User...\r\n  const { aUser } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <LandingNavBar />\r\n      <Progress />\r\n\r\n      <CitizenNavBar />\r\n      {/* <ProposalNav /> */}\r\n\r\n      <SANavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/features\">\r\n            <Features />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/forgot-password\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenForgot />}\r\n          </Route>\r\n\r\n          <Route path=\"/change-password/:token\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenEmail />}\r\n          </Route>\r\n\r\n          <Route\r\n             render={(props) => (\r\n              <FirstStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen}/>\r\n            )}\r\n            path=\"/create-account\"\r\n             exact={true}\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SecondStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/second\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <ThirdStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/third\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FourthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fourth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FifthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fifth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SixthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/sixth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SeventhStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen} />\r\n            )}\r\n            path=\"/seventh\"\r\n          />\r\n\r\n          {/**************************** CITIZEN Routes ****************************/}\r\n\r\n          <Route path=\"/citizen-profile\">  \r\n            {user ? <CitizenProfile /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-pass-update\">\r\n            {user ? <CitizenPassUpdate /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-proposals\">\r\n            {user ? <CitizenProposals /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-view-proposals\">\r\n            <CitizenViewProposal/>\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-create-proposals\">\r\n            {user ? <CitizenCreateProposal /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-reports\">\r\n            {user ? <CitizenReports /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-reports\">\r\n            {user ? <CitizenViewReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-submit-reports\">\r\n            {user ? <CitizenSubmitReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-chat-report\">\r\n            {user ? <CitizenChatReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-projects\">\r\n            {user ? <CitizenProjects /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-project\">\r\n            {user ? <CitizenViewProject /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          {/**************************** ADMIN Routes ****************************/} \r\n\r\n          <Route path=\"/admin-login\">\r\n            {aUser ? <Redirect to=\"/admin-profile\" /> : <AdminLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-forgot\">\r\n            <AdminForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-change/:token\">\r\n            <AdminEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-profile\">\r\n            {aUser ? <AdminProfile /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposals\">\r\n            {aUser ? <AdminProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposal/:id\">\r\n            {aUser ? <AdminEachProposal /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-proposals\">\r\n            {aUser ? <AdminCreateProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-reports\">\r\n            {aUser ? <AdminReports /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-report/:id\">\r\n            {aUser ? <AdminEachReport /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/reports\">\r\n            {aUser ? <AdminReportsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-messages\">\r\n            {aUser ? <AdminMessages /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-projects\">\r\n            {aUser ? <AdminProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-project/:id\">\r\n            {aUser ? <AdminEachProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/proposals\">\r\n            {aUser ? <AdminProposalsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-projects\">\r\n            {aUser ? <AdminCreateProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-update-project/:id\">\r\n            {aUser ? <AdminUpdateProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-users\">\r\n            {aUser ? <AdminUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants\">\r\n            {aUser ? <Applicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants-Verification\">\r\n            {aUser ? <SingleApplicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Admin-viewUsers\">\r\n            {aUser ? <SingleUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          {/**************************** SUPER ADMIN Routes ****************************/}\r\n          \r\n          <Route path=\"/superAdmin-login\">\r\n            {saUser ? <Redirect to=\"/SAContent-home\" /> : <SALogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-forgot\">\r\n            <SAForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-changePassword/:token\">\r\n            <SAEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-home\">\r\n            {saUser ? <SAContentHome /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-announcements\">\r\n            {saUser ? <SAAnnouncements /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-FeaturedMember\">\r\n            {saUser ? <SAFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-Eula\">\r\n            {saUser ? <SAEula /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-addFeaturedMember\">\r\n            {saUser ? <SAAddFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-feature\">\r\n            {saUser ? <SAContentFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-feature\">\r\n            {saUser ? <SAAddFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-feature\">\r\n            {saUser ? <SAFeatures /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAManage-admin\">\r\n            {saUser ? <SAManage /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SASearch-admin\">\r\n            {saUser ? <SASearchAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-admin\">\r\n            {saUser ? <SAAddAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-account\">\r\n            {saUser ? <SAAccount /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n        </Switch>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["417","418"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminProposals.module.css';\r\n\r\nconst AdminProposals = () => {\r\n    //Without AXIOS\r\n    const [proposals, setProposals] = useState();\r\n    \r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('api/proposals');\r\n            \r\n            const responseData = await response.json();\r\n\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const string = 'watch?v=S_mgSHCWCmA';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProposals}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Proposals</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>            \r\n                            <th>ID</th>  \r\n                            <th>Title</th>\r\n                            <th>Location</th>\r\n                            <th>Upvote</th>\r\n                            <th>Downvote</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {proposals && proposals.map((proposal) => (\r\n                        <tr key={proposal._id}>\r\n                            <td>{proposal._id}</td>\r\n                            <td>{proposal.title}</td>\r\n                            <td>{proposal.location}</td>\r\n                            <td>{proposal.upvote.length}</td>\r\n                            <td>{proposal.downvote.length}</td>\r\n                            <td>{proposal.status}</td>\r\n                            <td>{proposal.createdAt}</td>\r\n                            <td><Link to={'/admin-proposal/' + proposal._id}>Click here</Link></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-proposals'>\r\n                        <button className={classes.Button}>Create Proposals</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProposals;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["419"],"import React, { useEffect, useState, useParams } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport classes from './AdminProjects.module.css';\r\n\r\nconst AdminProjects = ( props ) => {\r\n    const [projects, setProjects] = useState();    \r\n    // const { handle } = useParams();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    //const string = 'watch?v=S_mgSHCWCmA';\r\n    console.log(projects);\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProjects}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Projects</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project ID</th>\r\n                            <th>Project Title</th>\r\n                            <th>Location</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Updated at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects && projects.map(project => (\r\n                        <tr key={project._id}>\r\n                            <td>{project._id}</td>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.location}</td>\r\n                            <td>{project.status}</td>\r\n                            <td>{format(project.createdAt)}</td>\r\n                            <td>{format(project.updatedAt)}</td>\r\n                            <td>\r\n                                <Link to={'/admin-project/' + project._id}>Click here</Link>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-projects'>\r\n                        <button className={classes.Button}>Create Projects</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProjects;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["420","421","422","423"],"import React, { useState, useContext, useRef } from 'react';\r\nimport CardForm from '../../../UI/Cards/CardForm/CardForm';\r\nimport Input from '../../../UI/Input/Input';\r\nimport LoginButton from '../../../UI/Buttons/LoginButton/LoginButton';\r\nimport { loginCall } from '../../../../api_calls/adminApiCall';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport classes from './AdminLogin.module.css';\r\n\r\nconst AdminLogin = () => {\r\n    // const email = useRef();\r\n    // const password = useRef();\r\n    // const { user, isFetching, error, dispatch } = useContext(Context);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     loginCall(\r\n    //         { email: email.current.value, password: password.current.value }, \r\n    //         dispatch\r\n    //     );\r\n    // };\r\n\r\n    // console.log(user);\r\n//KD's code\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { aUser, dispatch, isFetching } = useContext(Context);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: \"ALOGIN_START\" });\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/admin/login\", {\r\n            email,\r\n            password,\r\n        })\r\n\r\n        dispatch({ type: \"ALOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: `${err.response.status}`,\r\n            text: `${err.response.data.message}`,\r\n        });\r\n        dispatch({ type: \"ALOGIN_FAILURE\" });\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        // <div className={classes.Content}>\r\n        //     <form className={classes.CardForm} onSubmit={handleSubmit}>\r\n        //         <h3>SmartCTLogo</h3>\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"email\"\r\n        //             placeholder=\"Email address\"\r\n        //             ref={email}\r\n        //             id=\"email\"\r\n        //         />\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"password\"\r\n        //             placeholder=\"Password\"\r\n        //             ref={password}\r\n        //             id=\"password\"\r\n\r\n        //         />\r\n        //         <div className={classes.ButtonDiv}>\r\n        //             <LoginButton type=\"submit\"/>\r\n        //         </div>\r\n        //         <div className={classes.HyperlinkDiv}>\r\n        //             <a href=\"/forgot-password\" className={classes.Hyperlink}>\r\n        //             Forgot Password\r\n        //             </a>\r\n        //         </div>\r\n        //     </form>\r\n        // </div>\r\n        //KD's Code\r\n        <div className={classes.Content}>\r\n            <CardForm onSubmit = { handleSubmit }>\r\n                <h3>SmartCTLogo</h3>\r\n                <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange = {e => setEmail(e.target.value)} \r\n                    id=\"email\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {e => setPassword(e.target.value)} \r\n                    id=\"password\"\r\n\r\n                />\r\n                <div className={classes.ButtonDiv}>\r\n                    <LoginButton type=\"submit\"/>\r\n                </div>\r\n                <div className={classes.HyperlinkDiv}>\r\n                    <a href=\"/admin-forgot\" className={classes.Hyperlink}>\r\n                    Forgot Password\r\n                    </a>\r\n                </div>\r\n            </CardForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["424","425","426","427","428","429","430"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminProfileButton from '../../../UI/Buttons/AdminProfileButton/AdminProfileButton';\r\nimport ProfileIconCard from '../../../UI/Cards/ProfileIconCard/ProfileIconCard';\r\nimport ProfileInput from '../../../UI/Input/ProfileInput/ProfileInput';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './AdminProfile.module.css';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport TextError from '../../../UI/Text/TextError';\r\nimport axios from 'axios';\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required!'),\r\n    password: Yup.string().required('Required!')\r\n});\r\n\r\nconst AdminProfile = () => {\r\n    const { aUser, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [logs, setLogs] = useState([]);\r\n\r\n    // const onSubmit = values => {\r\n    //     if (values.email !== aUser.user.email) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     console.log('Form data', values);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/administrator/?userType=Administrator`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        fetchLogs();\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: values => {\r\n            if (values.email !== aUser.data.user.email) {\r\n                console.log(\"Incorrect email\")\r\n                return false;\r\n            }\r\n    \r\n            console.log('Form data', values)\r\n            axios.patch('/api/admin/' + aUser.data.user._id, values);\r\n        }\r\n    });\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const uploadPhotoHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"AUPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: aUser.token,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.patch(\"/api/admin/\" + aUser.data.user._id, updateAccount);\r\n                    dispatch({ type: \"AUPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"AUPDATE_FAILURE\" })\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is required!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n        }\r\n    }\r\n\r\n    console.log(aUser);\r\n    return (\r\n        // <React.Fragment>\r\n        //     <AdminLayout>\r\n        //         <div className={classes.Content}>\r\n        //             <div className={classes.AdminProfile}>\r\n        //                 <ProfileIconCard />\r\n        //                 <h2>Summary</h2>\r\n        //                 <div className={classes.ButtonDiv}>\r\n        //                     <Link to = \"/admin-summary/reports\">\r\n        //                         <AdminProfileButton>Reports</AdminProfileButton>\r\n        //                     </Link>\r\n        //                     <Link to = '/admin-summary/proposals'>\r\n        //                         <AdminProfileButton>Proposals</AdminProfileButton>\r\n        //                     </Link>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div>\r\n        //                 <h2>Personal Information</h2>\r\n        //                 <div>\r\n        //                     <form className={classes.AdminProfileFormDiv}>\r\n        //                         <div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"City/Municipality\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"city_municipality\"\r\n        //                                     name=\"city_municipality\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.city}\r\n        //                                 />\r\n        //                             </div>\r\n        //                             <div className={classes.InputDiv}>\r\n        //                                 <label htmlFor=\"region\">Region</label>\r\n        //                                 <ProfileInput\r\n        //                                     placeholder=\"Region\"\r\n        //                                     type=\"text\"\r\n        //                                     id=\"region\"\r\n        //                                     name=\"region\"\r\n        //                                     readOnly=\"readOnly\"\r\n        //                                     onChange={formik.handleChange}\r\n        //                                     value={aUser.user.region}\r\n        //                                 />\r\n        //                             </div>\r\n        //                         </div>\r\n        //                     </form>\r\n        //                 </div>\r\n\r\n        //                 {/* LOGIN CREDENTIALS */}\r\n\r\n                        // <h2>Login Credentials</h2>\r\n                        // <div>\r\n                        //     <form onSubmit={formik.handleSubmit}>\r\n                        //         <div className={classes.AdminProfileFormDiv}>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Email Address</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Email address\"\r\n                        //                     type=\"email\"\r\n                        //                     id=\"email\"\r\n                        //                     name=\"email\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.email}\r\n                        //                 />\r\n                        //             </div>\r\n                        //             <div className={classes.InputDiv}>\r\n                        //                 <label>Password</label>\r\n                        //                 <ProfileInput\r\n                        //                     placeholder=\"Password\"\r\n                        //                     type=\"password\"\r\n                        //                     id=\"password\"\r\n                        //                     name=\"password\"\r\n                        //                     onChange={formik.handleChange}\r\n                        //                     value={aUser.user.password}\r\n                        //                 />\r\n                        //             </div>\r\n                        //         </div>\r\n                        //         <div className={classes.ButtonDiv}>\r\n                        //             <SubmitButton />\r\n                        //             <CancelButton />\r\n                        //         </div>\r\n                        //     </form>\r\n                        // </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </AdminLayout>\r\n        // </React.Fragment>\r\n\r\n\r\n            <AdminLayout>\r\n                <div className={classes.Content}>\r\n                    <div className={classes.AdminProfile}>\r\n                        <div className={classes.AdminAccountShadow}>\r\n                            <div className={classes.AdminAccountImage}>\r\n                                <img src= {file ? (URL.createObjectURL(file)) : `${aUser.data.user.profilePic}`} alt=\"\" ></img>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {iconUpload === false &&\r\n                            <>\r\n                                <div className={classes.AdminProfileChangeLink}>\r\n                                    <p onClick={ setIconTrue }>Change Profile Picture?</p>\r\n                                </div>\r\n\r\n                                <div className={classes.AdminProfileChangeImg}>\r\n                                    <Form.Label ><i class=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        {iconUpload &&\r\n                            <div className={classes.AdminProfileChangeImg}>\r\n                                <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n                                <Form.Label  htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                            </div>\r\n                        }\r\n\r\n                        <Form className={classes.AdminProfileEdit} onSubmit={ uploadPhotoHandler }>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    id=\"iconImg\"\r\n                                    type=\"file\"\r\n                                    name=\"adminImg\"\r\n                                    style = {{display: \"none\"}}\r\n                                    onChange = {(e) => setFile(e.target.files[0])}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button id=\"btnImg\" type='submit' style={{display:'none'}}></Button>\r\n                        </Form>\r\n\r\n                        <h3>{aUser.data.user.username}</h3>\r\n                        <h2>Summary</h2>\r\n                        <div className={classes.ButtonDiv}>\r\n                            <Link to = \"/admin-summary/reports\">\r\n                                <AdminProfileButton>Reports</AdminProfileButton>\r\n                            </Link>\r\n                            <Link to = '/admin-summary/proposals'>\r\n                                <AdminProfileButton>Proposals</AdminProfileButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Personal Information</h2>\r\n                        <div>\r\n                            <div className={classes.AdminProfileFormDiv}>\r\n                                <div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"city_municipality\">City/Municipality</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.city}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label htmlFor=\"region\">Region</label>\r\n                                        <div className={classes.PseudoInput}>\r\n                                            {aUser.data.user.region}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h2>Login Credentials</h2>\r\n                        <div>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={classes.AdminProfileFormDiv}>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Email Address</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Email address\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.InputDiv}>\r\n                                        <label>Password</label>\r\n                                        <ProfileInput\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={formik.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.ButtonDiv}>\r\n                                    <SubmitButton />\r\n                                    <CancelButton />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        {/* LOGIN CREDENTIALS */}\r\n\r\n                        {/* <h6>Fill this up to change password</h6>\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}>\r\n                                <Form>\r\n                                    <div className={classes.AdminProfileFormDiv}>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Email Address</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Email address\"\r\n                                                type=\"email\"\r\n                                                id=\"email\"\r\n                                                name=\"email\"\r\n                                            />\r\n                                            <ErrorMessage name='email' component={TextError} />\r\n                                        </div>\r\n                                        <div className={classes.InputDiv}>\r\n                                            <label>Password</label>\r\n                                            <Field\r\n                                                className={classes.FormikInput}\r\n                                                placeholder=\"Password\"\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                name=\"password\"\r\n                                            />\r\n                                            <ErrorMessage name='password' component={TextError} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.ButtonDiv}>\r\n                                        <SubmitButton />\r\n                                        <CancelButton />\r\n                                    </div>\r\n                                </Form>\r\n                            </Formik>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminProfile;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",["431"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport axios from 'axios'\r\nimport '../Applicants/Applicants.css'\r\n\r\nconst AdminUsers = () => {\r\n    const [citizenUser, setCitizenUser] = useState([]);\r\n    const [citizenID, setCitizenID] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getCitizen = async () => {\r\n            const res = await axios.get(`/api/citizen/?status=${true}`);\r\n            setCitizenUser(res.data);\r\n\r\n            if(res.data[0] === undefined) {\r\n                setCitizenID(null);\r\n            } else {\r\n                setCitizenID(res.data[0]._id);\r\n            }\r\n        }\r\n\r\n        getCitizen();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AdminLayout>\r\n                <Container>\r\n                    <div  className = 'Applicants-header'>\r\n                        <h1>Users</h1>\r\n                    </div>\r\n\r\n                    <div  className = 'col-md-10 offset-md-1' id = 'Applicants-body'>\r\n                        {citizenID !== undefined && citizenID !== null ? (\r\n                        <>\r\n                            <Row>\r\n                                <Col className='Applicants-searchTitle'><h4>Lastname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Firstname</h4></Col>\r\n                                <Col className='Applicants-searchTitle'><h4>Status</h4></Col>\r\n                                <Col className='Applicants-searchTitle' id = 'applicantEmail'><h4>Email</h4></Col>\r\n                                <Col className='Applicants-searchTitle'></Col>\r\n                            </Row>\r\n                            {citizenUser.map((A) => (\r\n                                <Row key={A._id}>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.lastname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>{A.firstname}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4>Approved</h4></Col>\r\n                                    <Col className='Applicants-searchResult' id = 'applicantEmail'><h4>{A.email}</h4></Col>\r\n                                    <Col className='Applicants-searchResult'><h4><Link to = {`/Admin-viewUsers/${A._id}`}><i className=\"fas fa-external-link-alt\"></i></Link></h4></Col>\r\n                                </Row>\r\n                            ))}\r\n                        </>\r\n                        ) : (\r\n                            <h4 style={{textAlign: \"center\", color: \"grey\"}}>No current users</h4>\r\n                        )}\r\n                    </div>\r\n                </Container>\r\n            </AdminLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminUsers;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["432"],"import React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminConversations from './AdminConversations/AdminConversations';\r\nimport AdminMessage from './AdminMessage/AdminMessage';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminMessages.module.css';\r\n\r\nconst AdminMessages = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chatMessages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const { aUser } = useContext(Context);\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            }); \r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", aUser.data.user._id);\r\n        socket.current.on(\"getUsers\", aUser => {\r\n            console.log(aUser);\r\n        });\r\n    }, [aUser]);\r\n    // insert this code soon:\r\n    // const { user } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/conversations/\" + aUser.data?.user?._id);\r\n                setConversations(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        getConversations();\r\n    }, [aUser.data?.user?._id]);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n                setMessages(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat]);\r\n\r\n    // console.log(currentChat);\r\n   \r\n    // console.log(aUser.data.user._id);\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: aUser.data.user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        };\r\n\r\n        const receiverId = currentChat.members.find(member => member !== aUser.data.user._id);\r\n        \r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: aUser.data.user._id,\r\n            receiverId,\r\n            text: newMessage\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\"/api/messages/\", message);\r\n            setMessages([...chatMessages, res.data]);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [chatMessages])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        {\r\n                            conversations.map(c => (\r\n                                <div onClick={() => setCurrentChat(c)}>\r\n                                    <AdminConversations conversation={c} currentUser={aUser.data?.user}  />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {/* <AdminConversations /> */}\r\n                    </div>\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            {\r\n                                <>\r\n                                    <div className={classes.AdminChatBoxTop}>\r\n                                        {chatMessages.map(m => (\r\n                                            <div ref={scrollRef}>\r\n                                                <AdminMessage messages={m} own={m.sender === aUser.data.user?._id} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className={classes.AdminChatBoxBottom}>\r\n                                        <textarea\r\n                                            className={classes.ChatMessageInput}\r\n                                            placeholder=\"Write something...\"\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            value={newMessage}\r\n                                        ></textarea>\r\n                                        <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["433","434","435","436","437"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProjects.module.css';\r\n\r\nconst AdminCreateProjects = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProject = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.post('/api/projects', createProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProjectsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProjectsContentDiv}>\r\n                <form className={classes.AdminCreateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProjectsFormDiv}>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.userName && <p className={classes.InputValidation}>{errors.userName.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    )\r\n}\r\n\r\nexport default AdminCreateProjects;\r\n\r\n// const AdminCreateProjects = () => {\r\n//     const { aUser } = useContext(Context);\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: '',\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const {...data} = values;\r\n\r\n//             console.log('Form data', values);\r\n//             axios.post('/api/projects/', values);\r\n//                 // .catch(err => {\r\n//                 //     console.log('Error: ', err);\r\n//                 // });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n    \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <form className={classes.AdminCreateProjectsForm} onSubmit={formik.handleSubmit}>\r\n//                     <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='User'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.userName}\r\n//                                 disable\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Project Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Project Title'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;\r\n\r\n// import React from 'react';\r\n// import { Formik, Form, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// import CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n// import AdminLayout from '../AdminLayout/AdminLayout';\r\n// import Input from '../../../UI/Input/Input';\r\n// import FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\n// import classes from './AdminCreateProjects.module.css';\r\n// import axios from 'axios';\r\n\r\n\r\n// const initialValues = {\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     location: ''\r\n// };\r\n\r\n// const onSubmit = async (values) => {\r\n//     console.log('Form values', values);\r\n\r\n//     const {...data} = values;\r\n//     const res = await axios.post('/api/projects', data)\r\n//         .catch(err => {\r\n//             console.log('Error: ', err.res.data);\r\n//         });\r\n// };\r\n\r\n// // const validate = values => {\r\n// //     let errors ={};\r\n\r\n// //     if (!values.title) errors.title = \"Required\";\r\n// //     if (!values.description) errors.description = \"Required\";\r\n// //     if (!values.date) errors.date = \"Required\";\r\n// //     if (!values.location) errors.location = \"Required\";\r\n\r\n// //     return errors;\r\n// // }\r\n\r\n// const validationSchema = Yup.object({\r\n//     title: Yup.string().required('Required'),\r\n//     description: Yup.string().required('Required'),\r\n//     date: Yup.string().required('Required'),\r\n//     location: Yup.string().required('Required')\r\n// });\r\n\r\n// const AdminCreateProjects = ( props ) => {\r\n//     // const formik = useFormik({\r\n//     //     initialValues,\r\n//     //     onSubmit,\r\n//     //     validationSchema\r\n//     // });\r\n\r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                 >\r\n//                     <Form className={classes.AdminCreateProjectsForm}>\r\n//                         <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Title\"\r\n//                                     id=\"title\"\r\n//                                     name=\"title\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"title\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Description</label>\r\n//                                 <FormikInput\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Description\"\r\n//                                     id=\"description\"\r\n//                                     name=\"description\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"description\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>When</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Date\"\r\n//                                     id=\"date\"\r\n//                                     name=\"date\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"date\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Where</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Location\"\r\n//                                     id=\"location\"\r\n//                                     name=\"location\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"location\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <SubmitButton />\r\n//                             <CancelButton />\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n            \r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["438","439","440","441"],"import React, { useContext, useState } from 'react';\r\n// import { useFormik } from 'formik';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProposals.module.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminCreateProposals = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProposal = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProposal.coverImage = res.data.secure_url;\r\n            // console.log(data);\r\n\r\n            try {\r\n                const res = await axios.post('/api/proposals/', createProposal);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data);\r\n        // console.log('data-image' + data.coverImage[0]);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProposalsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Proposals</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProposalsContentDiv}>\r\n                <form className={classes.AdminCreateProposalForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProposalFormDiv}>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                defaultValue={aUser.data.user.username}\r\n                                ref={register}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Proposal Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Proposal Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Description</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [ coverImage, setCoverImage ] = useState()\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: ''\r\n//         },\r\n//         onSubmit: values => {\r\n\r\n//             let data = new FormData();\r\n//             data.append('coverImage', values.coverImage);\r\n\r\n//             console.log('Form data', values);\r\n//             console.log({\r\n//                 fileName: values.file.name,\r\n//             });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n\r\n//     return(\r\n        // <AdminLayout>\r\n        //     <div className={classes.AdminCreateProposalsHeader}>\r\n        //         <CardHeader>\r\n        //             <h2 className={classes.Text}>Proposals</h2>\r\n        //         </CardHeader>\r\n        //     </div>\r\n        //     <div className={classes.AdminCreateProposalsContentDiv}>\r\n        //         <form className={classes.AdminCreateProposalForm} onSubmit={formik.handleSubmit}>\r\n        //             <div className={classes.AdminCreateProposalFormDiv}>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Username</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='userName'\r\n        //                         name='userName'\r\n        //                         placeholder='Username'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={aUser.user.username}\r\n        //                     />\r\n        //                     { formik.touched.userName && formik.errors.userName ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n        //                         ) : null }\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Proposal Title</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='title'\r\n        //                         name='title'\r\n        //                         placeholder='Proposal Title'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.title}\r\n        //                     />\r\n        //                     { formik.touched.title && formik.errors.title ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Description</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='description'\r\n        //                         name='description'\r\n        //                         placeholder='Description'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.description}\r\n        //                     />\r\n        //                     { formik.touched.description && formik.errors.description ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='location'\r\n        //                         name='location'\r\n        //                         placeholder='Location'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.location}\r\n        //                     />\r\n        //                     { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='file'\r\n        //                         id='coverImage'\r\n        //                         name='coverImage'\r\n        //                         placeholder='Location'\r\n        //                         onChange={(event) => {\r\n        //                             setCoverImage('coverImage', event.currentTarget.files[0]);\r\n        //                         }}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.coverImage}\r\n        //                     />\r\n        //                     {/* { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null} */}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className={classes.ButtonDiv}>\r\n        //                 <SubmitButton />\r\n        //                 <CancelButton />\r\n        //             </div>\r\n        //         </form>\r\n        //         <div className={classes.QuoteDiv}>\r\n        //             <p className={classes.Quote}>{messageCap}</p>\r\n        //         </div>\r\n        //     </div>\r\n        //  </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     // const [userName, setUserName] = useState('');\r\n//     // const [title, setTitle] = useState('');\r\n//     // const [description, setDescription] = useState('');\r\n//     // const [location, setLocation] = useState('');\r\n//     // const [message, setMessage] = useState('');\r\n//     // const [coverImage, setCoverImage] = useState(null);\r\n\r\n//     // const onChangeFile = e => {\r\n//     //     setCoverImage(e.target.files[0]);\r\n//     // }\r\n\r\n//     // const changeOnClick = (e) => {\r\n//     //     e.preventDefault();\r\n\r\n//     //     const formData = new FormData();\r\n//     //     formData.append('userName', userName);\r\n//     //     formData.append('title', title);\r\n//     //     formData.append('description', description);\r\n//     //     formData.append('location', location);\r\n//     //     formData.append('coverImage', coverImage);\r\n\r\n//     //     setUserName('');\r\n//     //     setTitle('');\r\n//     //     setDescription('');\r\n//     //     setLocation('');\r\n        \r\n//     //     console.log(formData);\r\n//     // }\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const formData = new FormData();\r\n//             //formData.append('coverImage', coverImage);\r\n//             axios.post('/api/proposals', values);\r\n//             console.log(values);\r\n//             //console.log(formData)\r\n//             //const formData = await new FormData();\r\n\r\n//             // formData.append('userName', values.userName);\r\n//             // formData.append('title', title);\r\n//             // formData.append('description', description);\r\n//             // formData.append('location', location);\r\n\r\n//             // setUserName('');\r\n//             // setTitle('');\r\n//             // setDescription('');\r\n//             // setLocation('');\r\n\r\n//             // axios.post('/api/proposals', formData)\r\n//             //     .then((res) => setMessage(res.data))\r\n//             //     .catch((err) => {\r\n//             //         console.log(err);\r\n//             // });\r\n//             // console.log(userName);\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n//     //console.log(aUser.user.username);\r\n//     //console.log('Form values', formik.values); \r\n\r\n//     return(\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProposalsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Proposals</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProposalsContentDiv}>\r\n//                 <form className={classes.AdminCreateProposalForm} onSubmit={formik.onSubmit}>\r\n//                     <div className={classes.AdminCreateProposalFormDiv}>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 className={classes.Input}\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='Username'\r\n//                                 //onChange={(e) => setUserName(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={aUser.user.username}\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Proposal Title'\r\n//                                 //onChange={(e) => setTitle(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             {/* { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 // onChange={(e) => setDescription(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             {/* { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 // onChange={(e) => setLocation(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             {/* { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         {/* <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Image</label>\r\n//                             <Input\r\n//                                 type='file'\r\n//                                 id='coverImage'\r\n//                                 name='coverImage'\r\n//                                 placeholder='Insert Photo'\r\n//                                 onChange={onChangeFile}\r\n//                                 // onChange={e => {\r\n//                                 //     formik.handleChange;\r\n//                                 //     setFilename('coverImage', e.target.files[0]);\r\n//                                 // }}\r\n//                                 // value={formik.values.coverImage}\r\n//                             />\r\n//                             { formik.touched.coverImage && formik.errors.coverImage ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.coverImage}</div>\r\n//                                 ) : null}\r\n//                         </div> */}\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//                 <div className={classes.QuoteDiv}>\r\n//                     <p className={classes.Quote}>{messageCap}</p>\r\n//                 </div>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["442","443"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProposal.module.css\";\r\n\r\nconst AdminEachProposal = () => {\r\n  const [currentProposal, setCurrentProposal] = useState([]);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProposal = async () => {\r\n      const response = await fetch('/api/proposals/' + params.id);\r\n      const responseData = await response.json();\r\n\r\n      setCurrentProposal(responseData.data.proposal);\r\n    }\r\n    findProposal();\r\n  }, []);\r\n\r\n  \r\n  const approveProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Approved'\r\n    });\r\n  };\r\n\r\n  const rejectProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Rejected'\r\n    });\r\n  };\r\n\r\n  const deleteProposal = () => {\r\n    axios.delete('/api/proposals/' + params.id);\r\n    console.log('Delete')\r\n  };\r\n\r\n  const upVoteProposal = () => {\r\n    axios.patch('/api/proposals/upVote/' + params.id);\r\n    console.log('Upvote');\r\n  }\r\n\r\n  const downVoteProposals = () => {\r\n    axios.patch('/api/proposals/downVote/' + params.id);\r\n    console.log('Downvote');\r\n  }\r\n  //console.log(currentProposal.coverImage);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProposals}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Proposals</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProposalDiv}>\r\n        <h3 className={classes.TitleText}>{currentProposal.title}</h3>\r\n        <div className={classes.ProposalInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentProposal.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProposal.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.VoteDiv}>\r\n        <button className={classes.VoteButton} onClick={upVoteProposal}>Upvote</button>\r\n        <button className={classes.VoteButton} onClick={downVoteProposals}>Downvote</button>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={approveProposal}>Approve</button>\r\n          <button className={classes.Button} onClick={rejectProposal}>Reject</button>\r\n          <button className={classes.Button} onClick={deleteProposal}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProposal;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './AdminUpdateProject.module.css';\r\n\r\n\r\nconst AdminUpdateProject = () => {\r\n    const { aUser } = useContext(Context);\r\n    \r\n    const [currentProject, setCurrentProject] = useState([]);\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const findProject = async () => {\r\n          const response = await fetch('/api/projects/' + params.id);\r\n          const responseData = await response.json();\r\n          //console.log(responseData);\r\n          setCurrentProject(responseData.data.project);\r\n        }\r\n        findProject();\r\n    }, []);\r\n\r\n    const defaultValues = {\r\n        title: currentProject.title,\r\n        description: currentProject.description,\r\n        location: currentProject.location,\r\n        coverImage: currentProject.coverImage\r\n    }\r\n\r\n    //console.log(currentProject.coverImage);\r\n\r\n    const { register, handleSubmit, errors, reset, control } = useForm({ defaultValues });\r\n    //console.log(currentProject);\r\n    // const preloadedValues = {\r\n    //     title: currentProject.title,\r\n    //     description: currentProject.description,\r\n    //     location: currentProject.location,\r\n    //     coverImage: currentProject.coverImage\r\n    // }\r\n\r\n\r\n    // const { register, handleSubmit, errors } = useForm({\r\n    //     defaultValue: preloadedValues\r\n    // });\r\n\r\n      const onSubmit = async (data) => {\r\n        console.log(data);\r\n        const coverImage = '';\r\n\r\n        const updateProject = {\r\n            // userId: aUser.data.user.userId,\r\n            // userName: aUser.data.user.userName,\r\n            // userType: aUser.data.user.userType,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            updateProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.put(`/api/update-projects/${params.id}`, updateProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        console.log(updateProject);\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    // console.log(currentProject);\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProjects}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminUpdateProjectsContentDiv}>\r\n                <form className={classes.AdminUpdateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminUpdateProjectsFormDiv}>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                defaultValue={defaultValues.title}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                defaultValue={defaultValues.description}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                defaultValue={defaultValues.location}\r\n                                readOnly\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Cover Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                files={defaultValues.coverImage}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n                        <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n                            console.log('Button');\r\n                            reset({ defaultValues })\r\n                        }}>Reset Data</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminUpdateProject;\r\n\r\n// const AdminUpdateProject = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [userId, setUserId] = useState();\r\n//     const [redirect, setRedirect] = useState(false);\r\n//     const [file, setFile] = useState(null);\r\n//     const userType = aUser.data.user.userType;\r\n\r\n//     const [currentProject, setCurrentProject] = useState([]);\r\n//     const [formValues, setFormValues] = useState(null);\r\n\r\n//     const params = useParams();\r\n\r\n//     useEffect(() => {\r\n//         const findProject = async () => {\r\n//           const response = await fetch('/api/projects/' + params.id);\r\n//           const responseData = await response.json();\r\n//           console.log(responseData);\r\n//           setCurrentProject(responseData.data.project);\r\n//         }\r\n//         findProject();\r\n//     }, []);\r\n\r\n//     const initialValues = {\r\n//         userId: aUser.data.user._id,\r\n//         userName: aUser.data.user.username,\r\n//         title: '',\r\n//         description: '',\r\n//         location: ''\r\n//     };\r\n    \r\n//     const validationSchema = Yup.object({\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const onSubmit = values => {\r\n//         // console.log('Form values', values);\r\n//         // console.log('ID: ', values._id)\r\n\r\n//         console.log(values);\r\n\r\n//         //axios.patch('/api/projects/' + params.id, values);\r\n\r\n//     }\r\n   \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminProjects}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminUpdateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={formValues || initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                     enableReinitialize>\r\n//                     <Form className={classes.AdminUpdateProjectsForm}>\r\n//                         <div className={classes.AdminUpdateProjectsFormDiv}>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <Field\r\n//                                     className={classes.Input}\r\n//                                     type='text'\r\n//                                     id='title'\r\n//                                     name='title'\r\n//                                     placeholder='Project Title'\r\n//                                 />\r\n//                                 <ErrorMessage name='title' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Description</label>\r\n//                                 <Field\r\n//                                     className={classes.Textarea}\r\n//                                     type='text'\r\n//                                     component='textarea'\r\n//                                     rows={4}\r\n//                                     id='description'\r\n//                                     name='description'\r\n//                                     placeholder='Description'\r\n//                                 />\r\n//                                 <ErrorMessage name='description' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     className={classes.FormikInput}\r\n//                                     type='text'\r\n//                                     id='location'\r\n//                                     name='location'\r\n//                                     placeholder='Location'\r\n//                                 />\r\n//                                 <ErrorMessage name='location' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     type='file'\r\n//                                     id='file'\r\n//                                     name='file'\r\n//                                     placeholder='File'\r\n//                                 />\r\n//                                 <ErrorMessage name='file' />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n//                             <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n//                                 console.log('Button');\r\n//                                 setFormValues(currentProject);\r\n//                             }}>Load Data</button>\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminUpdateProject;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["458"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport CardSummary from '../../../UI/Cards/CardDashboard/CardSummary';\r\n\r\nimport classes from './AdminProposalsDashboard.module.css';\r\nimport Tables from '../../../UI/Tables/Tables';\r\n\r\nconst AdminProposalsDashboard = () => {\r\n    const [topProposals, setTopProposals] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    let rCount = 0;\r\n    \r\n    useEffect(() => {\r\n        const fetchTopProposals = async () => {\r\n            const res = await axios.get('/api/proposals/topProposals');\r\n            setTopProposals(res.data);\r\n        }\r\n\r\n        fetchTopProposals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        const fetchApproved = async () => {\r\n            const res = await axios.get('/api/proposals/approved');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setAccepted(count);\r\n        }\r\n\r\n        fetchApproved();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchRejected = async () => {\r\n            const res = await axios.get('/api/proposals/rejected');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setRejected(count);\r\n        }\r\n\r\n        fetchRejected();\r\n    }, []);\r\n\r\n    console.log(topProposals);\r\n    console.log(accepted);\r\n    console.log(rejected);\r\n\r\n    \r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProposalsDashboard}>\r\n                <CardHeader>\r\n                <h2 className={classes.Text}>Proposals Summary</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.LeaderboardsHeader}>\r\n                <h3>Leaderboards</h3>\r\n            </div>\r\n            <div className={classes.Divider}>\r\n                <div className={classes.TableDiv}>\r\n                    <table className={classes.Table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Proposal ID</th>\r\n                                <th>Proposal Title</th>\r\n                                <th>Upvote</th>\r\n                                <th>Downvote</th>\r\n                                <th>Percentage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {topProposals.map((p) => (\r\n                                <tr key = {p._id}>\r\n                                    <td>{++rCount}</td>\r\n                                    <td>{p._id}</td>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.upvote.length}</td>\r\n                                    <td>{p.downvote.length}</td>\r\n                                    <td>{Math.trunc(((p.upvote.length - p.downvote.length) / (p.upvote.length + p.downvote.length)) * 100)}%</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className={classes.CardData}>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Approved Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{accepted}</p>\r\n                    </CardSummary>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Rejected Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{rejected}</p>\r\n                    </CardSummary>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default AdminProposalsDashboard;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["459","460","461"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Form, Container, Button } from 'react-bootstrap';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport { Context } from '../../../../context/Context';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport './SingleUsers.css';\r\n\r\nconst SingleUsers = () => {\r\n    const settings = {\r\n        dots: true,\r\n        fade: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        className: 'slides'\r\n    }\r\n\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [applicant, setApplicant] = useState([]);\r\n    const [validID, setValidID] = useState([]);\r\n    const [birthCert, setBirthCert] = useState([]);\r\n    const [residency, setResidency] = useState([]);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { aUser } = useContext(Context); \r\n\r\n    useEffect(() => {\r\n        const getApplicant = async ()=>{\r\n            const res = await axios.get(\"/api/citizen/\" + path)\r\n            setApplicant(res.data)\r\n            setValidID(res.data.validIDPic)\r\n            setResidency(res.data.residencyPic)\r\n            setBirthCert(res.data.birthCertPic)\r\n        }\r\n\r\n        getApplicant();\r\n\r\n    }, [path]);\r\n    \r\n    const handleAccept = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/\" + path, admin);\r\n            Swal.fire('Applicant Accepted', \"You've successfuly accepted an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleReject = async () => {\r\n        const admin = {\r\n            username: aUser.user.username,\r\n            usertype: aUser.user.userType\r\n        }\r\n\r\n        try {\r\n            await axios.delete(`/api/citizen/${path}`, { data: admin });\r\n            Swal.fire('Applicant Rejected', \"You've rejected an applicant.\", 'success').then(\r\n                (result) => {\r\n                  if (result.isConfirmed || result.isDismissed) {\r\n                    setRedirect(true);\r\n                   }\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data.error}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/Applicants' />) }\r\n            <Container className = 'Applicant-verificationContainer'>\r\n                <div  className = 'ApplicantVerification-header'>\r\n                    <h1>SmartCTzen User</h1>\r\n                </div>\r\n\r\n                <div className = 'ApplicantVerification-body'>\r\n                    <Form className=\"ApplicantVerification-form\">\r\n                        <Form.Group>\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.firstname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.lastname}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Middle name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.middlename}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Suffix</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.suffix === \"\" ? \"N/A\" : applicant.suffix }\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Sex</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.sex}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Birtdate</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.birthdate}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.street + ' ' + applicant.barangay + ' ' + applicant.city}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Region</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.region}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.province}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                        <Form.Label>Zipcode</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder= {applicant.zipcode}\r\n                            disabled\r\n                        />\r\n                        </Form.Group>\r\n                        \r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Valid ID</h1>\r\n                        </div>\r\n\r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {validID.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        <div  className = 'ApplicantVerification-header'>\r\n                            <h1>Proof of Residency</h1>\r\n                        </div>\r\n\r\n                        \r\n                        <div className = 'applicantDocumentsImg'>\r\n                                <Slider {...settings}>\r\n                                    {residency.map((pic) => (\r\n                                        <div key={pic}>\r\n                                            <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                        </div>\r\n\r\n                        {birthCert[0] !== undefined &&\r\n                            <> \r\n                                <div  className = 'ApplicantVerification-header'>\r\n                                    <h1>Birth Certificate</h1>\r\n                                </div>\r\n\r\n                                \r\n                                <div className = 'applicantDocumentsImg'>\r\n                                    <Slider {...settings}>\r\n                                        {birthCert.map((pic) => (\r\n                                            <div key={pic}>\r\n                                                <img src= {pic} alt=\"\"  onClick={()=> window.open(pic, \"_blank\")} ></img>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Slider>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Form>\r\n\r\n                    <Link to = '/admin-users' className = 'ApplicantVerificationLink'>Back</Link>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleUsers\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["462","463","464","465","466"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProject.module.css\";\r\n\r\nconst AdminEachProject = () => {\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProject = async () => {\r\n      const response = await fetch('/api/projects/' + params.id);\r\n      const responseData = await response.json();\r\n      //console.log(responseData);\r\n      setCurrentProject(responseData.data.project);\r\n    }\r\n    findProject();\r\n  }, []);\r\n \r\n\r\n  const accomplished = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Accomplished'\r\n    });\r\n    console.log(response);\r\n  };\r\n\r\n  const ongoing = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Ongoing'\r\n    });\r\n    console.log(response);\r\n  };\r\n  \r\n  console.log(currentProject.coverImage);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProject}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Projects</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProjectDiv}>\r\n        <h3 className={classes.TitleText}>{currentProject.title}</h3>\r\n        <div className={classes.ProjectInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n             {currentProject.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProject.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={ongoing} disabled={disable}>Ongoing</button>\r\n          <button className={classes.Button} onClick={accomplished}>Accomplished</button>\r\n          <Link to={'/admin-update-project/' + params.id}>\r\n            <button className={classes.Button}>Update</button>\r\n          </Link>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProject;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["467","468"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachReport.module.css\";\r\n\r\nconst AdminEachReport = () => {\r\n  const [currentReport, setCurrentReport] = useState([]);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findReport = async () => {\r\n      const response = await fetch('/api/reports/' + params.id);\r\n      const responseData = await response.json();\r\n \r\n      setCurrentReport(responseData.data.report);\r\n    }\r\n    findReport();\r\n  }, []);\r\n\r\n  const confirmReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Confirmed'\r\n    });\r\n    console.log(res);\r\n  };\r\n\r\n  const cancelReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Cancelled'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const resolveReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Resolved'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const deleteReport = async () => {\r\n    const res = await axios.delete('/api/reports/' + params.id);\r\n    console.log('Delete Reports');\r\n  }\r\n\r\n  //console.log(currentReport);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachReport}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Reports</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ReportDiv}>\r\n        <h3 className={classes.TitleText}>{currentReport.title}</h3>\r\n        <div className={classes.ReportInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentReport.description}\r\n            </p>\r\n          </div>\r\n          <p>Image Source</p>\r\n        </div>\r\n        <div className={classes.Gallery}>\r\n            <h5>Image Placeholder</h5>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={confirmReport}>Confirm</button>\r\n          <button className={classes.Button} onClick={cancelReport}>Cancel</button>\r\n          <button className={classes.Button} onClick={resolveReport}>Resolved</button>\r\n          <button className={classes.Button} onClick={deleteReport}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachReport;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["469","470"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ProposalNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ProposalNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg proposalNavbar-mainbg\">\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"proposalnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Approved\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Rejected\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                My Proposals\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ProposalNav);","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["471","472"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ReportsNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ReportsNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg reportNavbar-mainbg\">\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\" data-toggle=\"dropdown\" data-target=\"#reportNavbarSupportedContent\" aria-controls=\"reportNavbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"reportnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Confirmed\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Cancelled\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Resolved\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ReportsNav);","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",["473"],"import React, { useState, useContext } from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport './CitizenPassUpdate.css';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\n\r\n\r\n// const CitizenPassUpdate = () => (\r\n//     <>\r\n//         <Container className = 'citizenPassUpdate-container'>\r\n//             <Form className = 'citizenPassUpdate-edit'>\r\n//                     <h3>Update Password</h3>\r\n\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Current Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"curpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>New Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"newpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Form.Group controlId=\"email\">\r\n//                         <Form.Label>Confirm Password</Form.Label>\r\n//                         <Form.Control\r\n//                             className='citizenPassUpdate-input'\r\n//                             type=\"password\"\r\n//                             name=\"conpass\"\r\n//                             autoComplete=\"off\"\r\n//                         />\r\n//                     </Form.Group>\r\n//                     <Row className='citizenPassUpdate-BtnContainer'>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n//                         </Col>\r\n//                         <Col className='BtnContainerCenter'>\r\n//                             <Link to = '#' className = 'citizenPassUpdate-Btn'>Change</Link>\r\n//                         </Col>\r\n//                     </Row>\r\n//                 </Form>\r\n//         </Container>\r\n//     </>\r\n// );\r\n\r\n\r\nconst CitizenPassUpdate = () => {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n\r\n    const passwordUpdate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const checkPass = {\r\n            userId: user.data.user._id,\r\n            oldPassword,\r\n        }\r\n\r\n        console.log(checkPass)\r\n\r\n        try {\r\n            await axios.post(\"/api/citizen/password-citizenCompare\", checkPass)\r\n\r\n            dispatch({ type: \"UPDATE_START\" })\r\n            const updateAccount = {\r\n                userId: user.data.user._id,\r\n                newPassword,\r\n                token: user.token,\r\n            }\r\n            try {\r\n                const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Update Successfull',\r\n                    text: '',\r\n                });\r\n                \r\n                Array.from(document.querySelectorAll(\"input\")).forEach(\r\n                    input => (input.value = \"\"),\r\n                    setOldPassword(\"\"),\r\n                    setNewPassword(\"\"),\r\n                );\r\n\r\n                setRedirect(true);\r\n                \r\n                dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n            } catch (err) {\r\n                console.log(err);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${err.response.status}`,\r\n                    text: `${err.response.data.message}`,\r\n                });\r\n                dispatch({ type: \"UPDATE_FAILURE\" })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${err.response.status}`,\r\n                text: `${err.response.data}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-profile' />) }\r\n            <Container className = 'citizenPassUpdate-container'>\r\n                <Form className = 'citizenPassUpdate-edit' onSubmit = { passwordUpdate }>\r\n                        <h3>Update Password</h3>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Current Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setOldPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control\r\n                                className='citizenPassUpdate-input'\r\n                                type=\"password\"\r\n                                name=\"cpass\"\r\n                                autoComplete=\"off\"\r\n                                required\r\n                                onChange = {e => setNewPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        \r\n                        <Row className='citizenPassUpdate-BtnContainer'>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Link to = '/citizen-profile' className = 'citizenPassUpdate-BtnCancel'>Cancel</Link>\r\n                            </Col>\r\n                            <Col className='BtnContainerCenter'>\r\n                                <Button className = 'citizenPassUpdate-Btn' variant = \"danger\" type = 'submit'>Change</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\nexport default CitizenPassUpdate;\r\n    ","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["474","475","476"],"import React from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './CitizenViewReport.css';\r\n\r\nconst CitizenViewReport = () => (\r\n    <>\r\n        <Container className = 'citizenViewReport-container'>\r\n            <Row className=\"citizenViewReport-header\">\r\n                <Row>\r\n                    <Col claasName=\"citizenViewReport-title\">\r\n                    <h2>Ahay</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-auth\">\r\n                    <Col>Reporter: IC</Col>\r\n                    <Col>Submitted on: September 22, 2021</Col>\r\n                </Row>\r\n            </Row>\r\n            <Row className=\"citizenViewReport-description\">\r\n                <p>So ayun nga, nag catgirl ata yung prof namin sa klase. Di ako sure mismo kasi nakaasa lang ako sa chat namin nung oras na yun.</p>\r\n            </Row> \r\n            <Row className=\"citizenViewReport-footer\">\r\n                <Row className=\"citizenViewReport-details\">\r\n                    <Col>Where: Cainta, Rizal</Col>\r\n                    <Col>Status: Confirmed</Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-img-container\">\r\n                    <Col className=\"citizenViewReport-img-frame\">\r\n                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"Report\"></img>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n);\r\nexport default CitizenViewReport;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",["477","478","479"],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["480","481","482"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport './CitizenProposals.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Context } from '../../../context/Context';\r\n\r\n\r\nconst CitizenProposals = () => {\r\n    const user = useContext(Context)\r\n    const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/proposals');\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deleteProposal = async (proposalId) => {\r\n        console.log(proposalId);\r\n        const response = await axios.delete(`/api/proposals/${proposalId}`);\r\n        const refresh = await fetch('/api/proposals');\r\n        const responseData = await refresh.json();\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n\r\n    const getProposalId = async (proposalId) => {\r\n        console.log(proposalId);\r\n        localStorage.setItem('proposalid', proposalId);\r\n    }\r\n    \r\n    \r\n    //ALL Category\r\n    //onClick={() => categoryAll(status:lahat ng status na meron)}  initialize nalang ng local array na [\"Pending\",\"Approved\",\"Rejected\"] \r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/proposals');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n    \r\n    //const categoryAll = async (status) =>{}\r\n    // dito icocompare mo yung local content array to all proposal status\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryApproved = async () => {\r\n        const response = await fetch('/api/proposals/approved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData);\r\n        // console.log(responseData)\r\n    }\r\n\r\n    const categoryRejected = async () => {\r\n        const response = await axios.get('/api/proposals/rejected');\r\n        // const responseData = await response.json();\r\n        // console.log(response.data)\r\n        setProposals(response.data);\r\n    }\r\n    //APPROVED/REJECTED Category\r\n    //onClick={() => categoryApproved/Rejected(status:Approved/Rejected)}\r\n    //const categoryApproved/Rejected = async (status) =>{}\r\n    // dito icocompare mo yung Approved/Rejected na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryOwn = async () => {\r\n        // const currentuserid = user.user.data.user._id;\r\n        // const useridfilter = {\r\n        //     citizenId: currentuserid,\r\n        // }\r\n        // const response = await fetch('/api/proposals', userId);\r\n        // const responseData = await response.json();\r\n        // // console.log(responseData)\r\n        // setProposals(responseData.data.proposals);\r\n        const response = await axios.get(`/api/proposals/self/${user.user.data.user._id}`);\r\n        // // const responseData = await response.json();\r\n        // console.log(response.data);\r\n        setProposals(response.data);\r\n    }\r\n    //OWN Category\r\n    //onClick={() => categoryOwn(user.data.user._id)}\r\n    //const categoryOwn = async (userId) =>{}\r\n    //dito icocompare mo ang userId mo sa lahat ng userIds na meron sa proposals\r\n    //if nag true ididisplay\r\n    console.log(user.user.data.user._id);\r\n\r\n    return(\r\n        <Container className=\"proposalsContainer\">\r\n            <div className=\"proposalsMain\">\r\n                <Row className='citizenproposals-catbar-container'>\r\n                    <Col className='citizenproposals-catbar'> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryAll()}>All</button> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryApproved()}>Approved</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryRejected()}>Rejected</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryOwn()}>My Proposals</button>\r\n                    </Col>\r\n                </Row>\r\n                {/* <div className=\"proposalsCreateBtnContainer\"> */}\r\n                        <NavLink to=\"/citizen-create-proposals\">\r\n                            <button className=\"proposalCreate\">Create Proposal</button>\r\n                        </NavLink>\r\n                {/* </div> */}\r\n\r\n            {/* <div className=\"proposalShortContainer\">\r\n                <div className=\"proposalShort\">\r\n                    <div className=\"proposalTitleContainer\">\r\n                        <div className=\"proposalTitle\">\r\n                            <h2>Lorem Ipsum</h2>\r\n                        </div>\r\n                        <div className=\"proposalAuthImg\">\r\n                            <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                        </div>\r\n                        <div className=\"proposalAuth\">\r\n                            Juan Carlos\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"proposalContent\">\r\n                        <div className=\"proposalShortInfo\">\r\n                            <h2>Lorem ipsum</h2>\r\n                            <div className=\"proposalAuthContainer\">\r\n                                <div className=\"proposalAuthImg\">\r\n                                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                </div>\r\n                                <div className=\"proposalAuth\">\r\n                                    Juan Carlos\r\n                                </div>\r\n                            </div>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                                eu vulputate. </p>\r\n                            <p>Upvote: 14 </p><p> Downvote: 3</p>\r\n                        </div>\r\n                        <div className=\"proposalShortImgContainer\">\r\n                            <div className=\"proposalShortImgFrame\">\r\n                                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            {proposals && proposals.map(proposal => (\r\n                <div className=\"proposalShortContainer\" key={proposal._id}>\r\n                    <div className=\"proposalShort\">\r\n                        <div className=\"proposalTitleContainer\">\r\n                            <div className=\"proposalTitle\">\r\n                                <h2>{proposal.title}</h2>\r\n                            </div>\r\n                            <div className=\"proposalAuthImg\">\r\n                                <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                            </div>\r\n                            <div className=\"proposalAuth\">\r\n                                {proposal.userName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"proposalContent\">\r\n                            <div className=\"proposalShortInfo\">\r\n                                <h2>{proposal.title}</h2>\r\n                                <div className=\"proposalAuthContainer\">\r\n                                    <div className=\"proposalAuthImg\">\r\n                                        <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                    </div>\r\n                                    <div className=\"proposalAuth\">\r\n                                        {proposal.userName}\r\n                                    </div>\r\n                                </div>\r\n                                    <p>{proposal.description} </p>\r\n                                <div className=\"proposalsBody\">\r\n                                    <i className=\"fas fa-thumbs-up\"/>{proposal.upvote.length ? proposal.upvote.length : 0}\r\n                                    <i className=\"fas fa-thumbs-down\"/>{proposal.downvote.length ? proposal.downvote.length : 0}\r\n                                    <i onClick={()=> deleteProposal(proposal._id)} className=\"fas fa-trash\"></i>\r\n                                </div>\r\n                                {proposal.status === \"Rejected\" ?  \r\n                                null\r\n                                :\r\n                                <Link className='proposalsViewMore' to={`/citizen-view-proposals`} onClick={()=> getProposalId(proposal._id)}>\r\n                                    View More\r\n                                </Link>\r\n                                }\r\n                            </div>\r\n                            <div className=\"proposalShortImgContainer\">\r\n                                <div className=\"proposalShortImgFrame\">\r\n                                    <img src={proposal.images} alt=\"\" className=\"proposalImg\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>      \r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default CitizenProposals;\r\n\r\n\r\n//Backup code\r\n{/* <Row className=\"proposalShortContainer\"> gawing citizenproposals-shorts-container  dito lahat nakalagay\r\n\r\n\r\n        <Row className=\"proposalShort\">           citizenproposals-mobile-shortinfo\r\n            <Row className=\"proposalTitleContainer\">   delete\r\n                <Row className=\"proposalTitle\">          \r\n                    <h2>Lorem Ipsum</h2>               citizenproposal-mobile-shortinfo > h2\r\n                </Row>\r\n                <Col className=\"proposalAuthImg\">      citizenproposal-mobile-shortinfo > img\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </Col>\r\n                <Row className=\"proposalAuth\">Juan Carlos</Row>      citizenproposal-mobile-shortinfo > p\r\n            </Row>\r\n        </Row>\r\n\r\n\r\n\r\n    <Row className=\"proposalContent\">                   citizenproposals-shortinfo\r\n        <Row className=\"proposalShortInfo\">             delete\r\n            <h2>Lorem ipsum</h2>                        citizenproposals-shortinfo > h2\r\n            <div className=\"proposalAuthContainer\">     delete\r\n                <div className=\"proposalAuthImg\">       delete   citizenproposals-shortinfo > h2\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </div>\r\n                <div className=\"proposalAuth\">          delete citizenproposals-shortinfo > h5\r\n                    <h5>Juan Carlos</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                eu vulputate. </p>\r\n            <p>Upvote: 14 </p><p> Downvote: 3</p>       citizenproposals-shortinfo > p\r\n        </div>\r\n        <div className=\"proposalShortImgContainer\">     citizenproposals-shortinfo-img-frame\r\n            <div className=\"proposalShortImgFrame\">     citizenproposals-shortinfo-img-frame > img   \r\n                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</Row> */}","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["483","484","485","486","487","488"],"import \"./CitizenReports.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ReportsNav from \"../../../components/Citizen/ReportsNav/ReportsNav\";\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CitizenReports = () => {\r\n    const [reports, setReports] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/reports');\r\n            const responseData = await response.json();\r\n            setReports(responseData);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deletereport = async (reportlId) => {\r\n        console.log(reportlId);\r\n        const response = await axios.delete(`/api/reports/${reportlId}`);\r\n        const refresh = await fetch('/api/reports');\r\n        const responseData = await refresh.json();\r\n        setReports(responseData.data.report);\r\n    }\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/reports');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData.data.reports);\r\n    }\r\n\r\n    const categoryConfirmed = async () => {\r\n        const response = await fetch('/api/reports/confirmed');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n    const categoryCancelled = async () => {\r\n        const response = await fetch('/api/reports/cancelled');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n    \r\n    const categoryResolved = async () => {\r\n        const response = await fetch('/api/reports/resolved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n\r\n    return(\r\n        <Container className='citizenreports-Container'>\r\n            <Row className='citizenreports-catbar-container'>\r\n                <Col className='citizenreports-catbar'>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryConfirmed()}>Confirmed</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryCancelled()}>Cancelled</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryResolved()}>Resolved</button>\r\n                </Col>\r\n            </Row>\r\n            <Row className='citizenreports-btn-container'>\r\n                <Col className='citizenreports-btnbar'>\r\n                    <Link className='citizenreports-btn-submit' to='/citizen-submit-reports'>Submit a report</Link> \r\n                    <Link className='far fa-comment citizenreports-btn-chat' to='/citizen-chat-report'/>\r\n                </Col>\r\n            </Row>\r\n            {/*\r\n            <Row className='citizenreports-short'>\r\n                <Col className='citizenreports-img-container'>\r\n                    <img className='citizenreports-img' alt='citizenreports-img'src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Row className='citizenreports-title-container'>\r\n                        <span className='citizenreports-title'><h2>Road Damage</h2></span>\r\n                    </Row>\r\n                    <Row className='citizenreports-details'>\r\n                        <Col className='citizenreports-info-container'>\r\n                            <span className='reportInfo'>Where: Cainta Rizal</span>\r\n                            <span className='reportInfo'>Reported by: John Doe</span>\r\n                            <span className='reportInfo'>Date Submitted: September 17, 2021 11:17am</span>\r\n                        </Col>\r\n                        <Col className='citizenreports-info-status-container'>\r\n                            <span className='reportInfo'>Status: Confirmed</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row> */}\r\n            {reports && reports.map(report => (\r\n                <Row className='citizenreports-short' key={report._id}>\r\n                    <Col className='citizenreports-img-container'>\r\n                        <img className='citizenreports-img' alt='citizenreports-img'src={report.images} onClick={()=> window.open(report.images, \"_blank\")}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className='citizenreports-title-container'>\r\n                            <span className='citizenreports-title'><h2>{report.title}</h2></span>\r\n                        </Row>\r\n                        <Row className='citizenreports-details'>\r\n                            <Col className='citizenreports-info-container'>\r\n                                <span className='reportInfo'>Where: {report.location}</span>\r\n                                <span className='reportInfo'>Desc : {report.description}</span>\r\n                                <span className='reportInfo'>Reported By : {report.userName}</span>\r\n                                <span className='reportInfo'>Date Submitted: {new Date(report.createdAt).toLocaleDateString()}</span>\r\n                                {/* <span className='reportInfo'><i onClick={()=> deletereport(report._id)} className=\"fas fa-trash\"></i></span> */}\r\n\r\n                            </Col>\r\n                            <Col className='citizenreports-info-status-container'>\r\n                                <span className='reportInfo'>Status: {report.status}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            ))}\r\n        </Container>\r\n        // <div className=\"reportsContainer\">\r\n        //      <div className=\"reportsMain\">\r\n        //          <div className=\"category\">\r\n        //              <React.Fragment>\r\n        //                     <ReportsNav/> \r\n        //             </React.Fragment> \r\n        //         </div>\r\n        //         <div className=\"citizenreports-btn-container\">\r\n        //             <NavLink to=\"/citizen-submit-reports\">\r\n        //                 <button className=\"citizenreports-submitreport-btn\">Create A Report</button>\r\n        //                 </NavLink>\r\n        //             <NavLink to=\"/citizen-chat-report\">\r\n        //                 <div className='chat-icon'>\r\n        //                     <i class=\"far fa-comment\"></i>\r\n        //                 </div>\r\n        //             </NavLink>\r\n        //         </div>\r\n        //         <Row className=\"citizenreportShort\">\r\n        //                 <Col className=\"citizenreportimg-container\">\r\n        //                     <img className=\"reportImg\" alt=\"reportimg\"src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n        //                 </Col>\r\n        //                 <Col>\r\n        //                     <Row className='citizenreport-reportTitleContainer'>\r\n        //                         <span className=\"citizenreport-reportTitle\"><h2>Road Damage</h2></span>\r\n        //                     </Row>\r\n        //                     <Row className=\"reportDetails\">\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Where: Cainta Rizal</span>\r\n        //                             <span className=\"reportInfo\">Reported by: John Doe</span>\r\n        //                             <span className=\"reportInfo\">Date Submitted: September 17, 2021 11:17am</span>\r\n        //                         </Col>\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Status: Confirmed</span>\r\n        //                         </Col>\r\n        //                     </Row>\r\n        //                 </Col>\r\n        //         </Row>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default CitizenReports;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["489","490"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from '../../CitizenProposals/CreateProposals/CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\nimport './CitizenSubmitReport.css';\r\n\r\nconst CitizenSubmitReport = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const reportData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                reportData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/reports', reportData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            { redirect && (<Redirect to = '/citizen-reports' />) }\r\n            <Container className=\"citizenSubmitReport-container\">\r\n                <Row>\r\n                    <div className=\"citizen-header\">\r\n                        <h1>Found a Problem? Go Submit a Report</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className=\"citizenSubmitReport-edit\">\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className=\"citizenSubmitReport-input\">\r\n                                            <label>Report Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Report Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className=\"citizenSubmitReportQuote\">\r\n                                        <h2>Reporting a problem or an issue is your <span className=\"text-highlight\">ambag</span></h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    <Col className=\"citizenSubmitReport-input\">\r\n                                        <label>Location</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Location\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.CitizenCreateProposalPhotoInput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"ButtonDiv\">\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>  \r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CitizenSubmitReport;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { Formik, Form, ErrorMessage, Field, validateYupSchema } from 'formik';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './CitizenViewProposal.css';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport * as Yup from 'yup';\r\n\r\nconst CitizenViewProposal = () => {\r\n    const [proposal, setProposal] = useState([]);\r\n    const [comments, setComments] = useState();\r\n    const [upvoteclicked, upvotesetClicked] = useState(false);\r\n    const [downclicked, downsetClicked] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n    const [disable, setDisable] = useState(false);\r\n    const [arrEmpty, setarrEmpty] = useState();\r\n    let count = 0;\r\n    \r\n    const proposalId = localStorage.getItem('proposalid');\r\n    // const name = comments.user;\r\n    // const msg = comments.message;\r\n    \r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            // console.log(proposalId)\r\n            const response = await fetch(`/api/proposals/${proposalId}`);\r\n            // console.log(response)\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            // const newResponseData = JSON.stringify(responseData.data);\r\n            // console.log(newResponseData);\r\n            setProposal(responseData.data.proposal);\r\n            setComments(responseData.data.proposal.comments)\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(proposal.upvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.upvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    upvotesetClicked(true)\r\n                }else{\r\n                    upvotesetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    useEffect(()=>{\r\n        if(proposal.downvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.downvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    downsetClicked(true)\r\n                }else{\r\n                    downsetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    const castUpVote = async (proposalId, userId) =>{\r\n        upvotesetClicked(true);\r\n        const removeVote = {\r\n            downvote:userId\r\n        }\r\n        try{\r\n            if(downclicked){\r\n                const response = await axios.patch(`/api/proposals/removeDownVote/${proposalId}`, removeVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response2 = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                    if (result) {\r\n                        console.log(result)\r\n                        window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n\r\n    const castDownVote = async (proposalId, userId) =>{\r\n        downsetClicked(true);\r\n        const removeVote = {\r\n            upvote:userId\r\n        }\r\n        try{\r\n            if(upvoteclicked){\r\n                \r\n                    const response = await axios.patch(`/api/proposals/removeUpVote/${proposalId}`, removeVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n                    const addUserVote = {\r\n                        downvote:userId\r\n                    };\r\n                    // Add userId to proposals upvote array\r\n                    const response2 = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    downvote:userId\r\n                };\r\n                //Add userId to proposals upvote array\r\n                const response = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    // const postComment = async (proposalId,userId)\r\n\r\n    const initialValues = {\r\n        user:user.data.user.firstname+\" \"+user.data.user.lastname,\r\n        message:''\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        user: Yup.string(),\r\n        message:  Yup.string().required(\"Required\")\r\n    });\r\n\r\n    const onSubmit = async (values) => {\r\n        // console.log('Form values', values);\r\n\r\n        // const username = user.data.user.firstname+\" \"+user.data.user.lastname;\r\n        // const comment = {\r\n        //     user:username,\r\n        //     values\r\n        // };\r\n        console.log(values)\r\n        const res = await axios.patch(`/api/proposals/comments/${proposalId}`, values).catch(err => {\r\n            console.log('Error: ', err.res.values);\r\n        });\r\n        window.location.reload(false);\r\n        // const {...data} = newValues;\r\n        // const res = await axios.patch('/api/proposals/comments/', data).catch(err => {\r\n        //     console.log('Error: ', err.res.data);\r\n        // });\r\n\r\n        // setRedirect(true);\r\n    };\r\n    let test = proposal.comments\r\n    console.log(test);\r\n    // for(a=1; a < comments.length(), a++){\r\n\r\n    // };\r\n    return(\r\n        <Container className='citizenViewProposal-container'>\r\n                <Row className='citizenViewProposal-long'>\r\n                    <Col className='citizenViewProposal-title'>\r\n                        <h1>{proposal.title}</h1>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-description'>\r\n                        <p>{proposal.description}\r\n                        </p>\r\n\r\n                        <p>Where: {proposal.location}</p>\r\n                    </Col> \r\n                    \r\n                        <Col className='citizenViewProposal-img-frame'>\r\n                            <img src='https://imgur.com/7pFJPjg.png'  className='citizenViewProposal-img' alt='Proposal'/>\r\n                        </Col>\r\n                    \r\n                    <Col className='citizenViewProposal-auth'>\r\n                            <p>Proposed by: {proposal.userName}</p>\r\n                            <p>Proposed on: {proposal.createdAt}</p>\r\n                            <p>Status: {proposal.status}</p>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-status'>Status: {proposal.status}</Col>\r\n                    <Col className='citizenViewProposal-btn-container'>\r\n                        <Row className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user upvoted propopsal onClick={() => castUpVote(proposal._id, user.data.user._id)} {proposal.upvote.length ? proposal.upvote.length : 0}*/}\r\n                            <Button disabled={ upvoteclicked } onClick={() => castUpVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Upvote: </Button>\r\n                        </Row>\r\n                        <Row  className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user downvoted propopsal  onClick={() => castDownVote(proposal._id, user.data.user._id)} {proposal.downvote.length ? proposal.downvote.length : 0}*/}\r\n                            <Button disabled={ downclicked } onClick={() => castDownVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Downvote: </Button>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className='citizenViewProposal-inputcomment-container'>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form>\r\n                            <Field\r\n                                className='citizenViewProposal-writecomment'\r\n                                type='text'\r\n                                placeholder='write a comment'\r\n                                id='message'\r\n                                name='message'/>\r\n                            {/* <ErrorMessage name=\"comments\">\r\n                                    {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                </ErrorMessage> */}\r\n                                <div className='buttonContainer'>\r\n                                    <SubmitButton />\r\n                                </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </Row>\r\n                <Row className='citizenViewProposal-writecomment-container'>\r\n                    {/* <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img'>\r\n                            <img src='https://imgur.com/82XUVjV.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>Kevin Gojocco</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>John Doe</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col> */}\r\n                    {comments && comments.map(comment => (\r\n                    <Col className='citizenViewProposal-comment' key={comment._id}>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>{comment.user}</Col>\r\n                            <Col>{comment.message}</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    ))};\r\n                </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CitizenViewProposal;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["517"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../../context/Context';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport './CitizenProfile.css';\r\n\r\nconst CitizenProfile = () => {\r\n    const { user, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [logs, setLogs] = useState([]);\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [reports, setReports] = useState([]);\r\n    const [proposals, setProposals] = useState([]);\r\n    const [verifiedReports, setVerifiedReports] = useState([]);\r\n    const [approvedProposals, setApprovedProposals] = useState([]);\r\n    const [loading, setLoading] =  useState(true);\r\n    \r\n    const citizen = user.data.user.firstname + \" \" + user.data.user.lastname;\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/citizens/?user=${citizen}`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        const fetchReports = async () => {\r\n            const res = await axios.get(`/api/reports/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setReports(count);\r\n        }\r\n\r\n        const fetchProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.data.proposals.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setProposals(count);\r\n        }\r\n\r\n        const fetchVerifiedReports = async () => {\r\n            const res = await axios.get(`/api/reports/confirmed/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n            setVerifiedReports(count);\r\n        }\r\n\r\n        const fetchApprovedProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/approved/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setApprovedProposals(count);\r\n        }\r\n\r\n        fetchLogs();\r\n        fetchReports();\r\n        fetchProposals();\r\n        fetchVerifiedReports();\r\n        fetchApprovedProposals();\r\n    }, [])\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"UPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: user.token,\r\n        }\r\n        if (file) {\r\n            setLoading(false);\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                console.log(file.name);\r\n                try {\r\n                    const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                    dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n                    setLoading(true);\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"UPDATE_FAILURE\" })\r\n                    setLoading(true);\r\n                }\r\n            } catch (err) {\r\n                setLoading(true);\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n            setLoading(true);\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        {loading ? (\r\n        <Container className = 'citizenProfile-container'>\r\n            <div className = 'citizenAccountImg-shadow'>\r\n                <div className = 'citizenAccountImg'>\r\n                    <img src= {file ? (URL.createObjectURL(file)) : `${user.data.user.profilePic}`} alt=\"\" ></img>\r\n                </div>\r\n            </div>\r\n            \r\n            {iconUpload === false &&\r\n                <>\r\n                    <div className = 'citizenProfile-changeLink'>\r\n                        <p onClick = { setIconTrue }>Change Profile Picture?</p>\r\n                    </div>\r\n\r\n                    <div className=\"citizenProfile-changeImg\">\r\n                        <Form.Label ><i className=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {iconUpload &&\r\n                <div className=\"citizenProfile-changeImg\">\r\n                    <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n\r\n                    <ReactTooltip id=\"infoBtn\" place=\"top\" effect=\"solid\">\r\n                        If button is clicked and not submitting please input photo again. . .\r\n                    </ReactTooltip>\r\n                    <Form.Label  data-tip data-for=\"infoBtn\" htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                </div>\r\n            }\r\n\r\n            <div  className = 'col-md-10 offset-md-1' id = 'citizenProfile-body'>\r\n                <div className = 'citizenProfile-name'> \r\n                     <p>{user.data.user.firstname + \" \" + user.data.user.middlename + \" \" + user.data.user.lastname}</p>\r\n                 </div>\r\n                 <div className = 'citizenProfile-statsDesktop'>\r\n                    <Row>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Col className = 'citizenProfile-Badge'>\r\n                            <h4>Badge</h4>\r\n                            {verifiedReports === 5 &&\r\n                            <>\r\n                                <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached five (5) verified reports!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                </div>\r\n                            </>\r\n                            }\r\n\r\n                            {approvedProposals === 10 &&\r\n                            <>\r\n                                <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached ten (10) verified proposals!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                </div>\r\n                            </>\r\n                            }\r\n                        </Col>\r\n                        ) : (<></>)}\r\n                        <Col>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Proposals Created</h4>\r\n                                    <p>{ proposals }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Approved Proposals</h4>\r\n                                    <p>{ approvedProposals }</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Verified Reports</h4>\r\n                                    <p>{ verifiedReports }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Reports Created</h4>\r\n                                    <p>{ reports }</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className = 'citizenProfile-statsMobile'>\r\n                    <Col>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Row className = 'citizenProfile-Badge'>\r\n                                <Col>\r\n                                    <Row>\r\n                                        <Row><h4>Badge</h4></Row>\r\n                                        {verifiedReports === 5 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached five (5) verified reports!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n\r\n                                        {approvedProposals === 10 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached ten (10) verified proposals!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (<></>)}\r\n                        \r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Proposals Created</h4></Row>\r\n                                <Row><p>{ proposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                            <Row><h4>Approved Proposals</h4></Row>\r\n                            <Row><p>{ approvedProposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Verified Reports</h4></Row>\r\n                                <Row><p>{ verifiedReports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Reports Created</h4></Row>\r\n                                <Row><p>{ reports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n            \r\n            <Form className = 'citizenProfile-edit' onSubmit = { handleSubmit }>\r\n                <h3>Personal Information</h3>\r\n                  <Form.Group>\r\n                    <input\r\n                        id=\"iconImg\"\r\n                        type=\"file\"\r\n                        name=\"citizenImg\"\r\n                        required\r\n                        style = {{display: \"none\"}}\r\n                        onChange = {(e) => setFile(e.target.files[0])}\r\n                    />\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"lname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.lastname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"fname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.firstname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"mname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.middlename}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Suffix</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.suffix}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sex\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.sex}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Birth Date</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.birthdate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Full Address</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.street +\" \"+user.data.user.barangay +\" \"+user.data.user.city +\" \"+user.data.user.region}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button id=\"btnImg\" type = 'submit' style={{display:'none'}}></Button>\r\n            </Form>\r\n            <Link to = '/citizen-pass-update' className = 'citizenProfile-passwordUpdate'><i className=\"editIcon far fa-edit\"></i></Link>\r\n        </Container>\r\n        ) : (\r\n            <div className = 'citizenProfileLoading'>\r\n              <h2>Processing Please Wait</h2>\r\n              <div>\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"primary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"success\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"danger\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"warning\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"light\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"dark\" />\r\n              </div>\r\n            </div>\r\n        )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CitizenProfile;\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["518","519","520","521","522","523"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container } from 'react-bootstrap';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './CitizenViewProject.css';\r\n\r\nconst CitizenViewProject = () => {\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [project, setProject] = useState([]);\r\n    const [viewCount, setViewCount] = useState();\r\n    const projectId = localStorage.getItem('projectid');\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`/api/projects/${path}`);\r\n            const responseData = await response.json();\r\n            setProject(responseData.data.project);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const date = new Date(project.createdAt).toLocaleDateString()\r\n\r\n    console.log(project)\r\n\r\n    // console.log(viewCount)\r\n    return(\r\n        <Container className='citizenViewProject-container'>\r\n                <Row className='citizenViewProject-long'>\r\n                    <Col className='citizenViewProject-title'>\r\n                        <h1>{project.title}</h1>\r\n\r\n                        <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-description'>\r\n                        <p>{project.description}</p>\r\n                    </Col> \r\n\r\n                    <Col className='citizenViewProject-img-frame'>\r\n                        <img src={project.coverImage}  className='citizenViewProject-img' alt='Project'/>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-status'>\r\n                        <p>Date created: {date}</p>\r\n                        <p>Where: {project.location}</p>\r\n                        <p>Status: {project.status}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link className = 'citizen-backButton' to = '/citizen-projects'>\r\n                    Back\r\n                </Link>\r\n        </Container>\r\n    );\r\n};\r\nexport default CitizenViewProject;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["524","525"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CitizenCreateProposal = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const proposalData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                proposalData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/proposals', proposalData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n    // console.log(citizenUser.user.data.user._id);\r\n    return(\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-proposals' />) }\r\n            <Container className={classes.CitizenCreateProposalContentContainer}>\r\n                {/* <div className = 'col-lg-10 offset-lg-1'> */}\r\n                <Row>\r\n                    <div className={classes.QuoteDiv}>\r\n                        <h1>Go create your proposal and make an impact!</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.CitizenCreateProposalForm}>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Proposal Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Proposal Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        {/* <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"userName\"\r\n                                                id=\"userName\"\r\n                                                name=\"userName\"\r\n                                            />\r\n                                        </Row> */}\r\n                                    </Col>\r\n                                    <Col className={classes.CitizenCreateProposalHeader} sm={6}>\r\n                                            <h2>Pursue your calling </h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    {/* <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>When to Start Hopefully</label>\r\n                                        <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Date of Start hopefully\"\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                        />\r\n                                        <ErrorMessage name=\"date\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col> */}\r\n                                    <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>Where</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Where\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.citizensubmitreportphotoinput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={classes.ButtonDiv}>\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>    \r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n        </>\r\n\r\n    //  {/* <React.Fragment> */}\r\n    //          {/* <div className={classes.CitizenCreateProposalContentDiv}> */}\r\n    //              {/* <div className={classes.QuoteDiv}> */}\r\n    //                  {/* <h1>Go create your proposal and make an impact!</h1> */}\r\n    //              {/* </div> */}\r\n\r\n    //              {/* <Formik */}\r\n    //                 {/* //  initialValues={initialValues}\r\n    //                 //  validationSchema={validationSchema}\r\n    //                 //  onSubmit={onSubmit}\r\n    //             //  > */}\r\n    //                  {/* <Form className={classes.CitizenCreateProposalForm}> */}\r\n    //                      {/* <div className={classes.CitizenCreateProposalFormDiv}> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Proposal Title</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Proposal Title\"\r\n    //                                 //  id=\"title\"\r\n    //                                 //  name=\"title\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"title\"> */}\r\n    //                                  {/* {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>} */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Description</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Description\"\r\n    //                                 //  id=\"description\"\r\n    //                                 //  name=\"description\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"name\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>When</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"When\"\r\n    //                                 //  id=\"date\"\r\n    //                                 //  name=\"date\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"date\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Where</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Where\"\r\n    //                                 //  id=\"location\"\r\n    //                                 //  name=\"location\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"location\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                      {/* </div> */}\r\n    //                      {/* <div className={classes.ButtonDiv}> */}\r\n    //                          {/* <SubmitButton /> */}\r\n    //                          {/* <CancelButton /> */}\r\n    //                      {/* </div> */}\r\n    //                  {/* </Form> */}\r\n    //              {/* </Formik> */}\r\n    //          {/* </div> */}\r\n    //      {/* </React.Fragment> */}\r\n    );\r\n};\r\n\r\nexport default CitizenCreateProposal;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["526","527","528","529","530","531"],"import \"./CitizenProjects.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Column, Row, Container } from 'react-bootstrap'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst CitizenProjects = () => {\r\n    const [projects, setProjects] = useState();\r\n    const [views, setViews] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/projects');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData.data.projects);\r\n    }\r\n    \r\n    const categoryAccomplished = async () => {\r\n        const response = await fetch('/api/projects/accomplished');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n\r\n    const categoryOngoing = async () => {\r\n        const response = await fetch('/api/projects/ongoing');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n    \r\n    const getProjectId = async (projectId) => {\r\n        try {\r\n            await axios.post(`/api/projects/updateViewCount/${projectId}`);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n    // console.log(projects)\r\n    //Accomplished/Ongoing Category\r\n    //onClick={() => categoryAccomplished/Ongoing(status:Accomplished/Ongoing)}\r\n    //const categoryAccomplished/Ongoing = async (status) =>{}\r\n    // dito icocompare mo yung Accomplished/Ongoing na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n\r\n\r\n    return (\r\n        <div className='citizenprojects-container' >\r\n            <Row className='citizenprojects-catbar-container'>\r\n                <Col className='citizenprojects-catbar'>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAccomplished()}>Accomplished</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryOngoing()}>Ongoing</button>\r\n                </Col>\r\n            </Row> \r\n            {projects && projects.map(project =>(\r\n                <Row  className='citizenprojects-short' key={project._id}>\r\n                <Col className='citizenprojects-shortinfo'>\r\n                    <Row className='citizenprojects-shortinfo-auth'>\r\n                        <h2>{project.title}</h2>\r\n                        <Col className='citizenprojects-auth-container'>\r\n                            <div className='citizenprojects-auth'>{project.userId}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-desc'>\r\n                        {project.description}\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-status'>\r\n                        <p>Status: {project.status}</p>\r\n                        <div className='citizenprojects-shortinfo-status-views'>\r\n                            <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                        </div>\r\n                    </Row>\r\n                    {/* onClick{()=> viewCountUp(project._id)}  */}\r\n                    <Link className='citizenprojects-viewmore' onClick = { () => getProjectId(project._id) } to={`/citizen-view-project/${project._id}`} >\r\n                        View More\r\n                    </Link>\r\n                </Col>\r\n\r\n                <Col className='citizenprojects-shortinfo-img-container'>\r\n                    <div className='citizenprojects-shortinfo-img-frame'>\r\n                        <img src={project.coverImage}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default CitizenProjects;\r\n\r\n\r\n\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["532"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenChatOnline.module.css';\r\n\r\nconst CitizenChatOnline = ({currentId, setCurrentChat}) => {\r\n    const [allAdmins, setAllAdmins] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/admin');\r\n            const responseData = await response.json();\r\n            setAllAdmins(responseData);\r\n            // console.log(responseData.data)\r\n        }\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const handleClick = async (user) => {\r\n        try {\r\n            const res = await axios.get(`/api/conversations/${currentId}/${user._id}` );\r\n            //const resData = await res.json();\r\n            setCurrentChat(res)\r\n            console.log(res.data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n   //console.log(allAdmins);\r\n\r\n    return ( \r\n        <div className={classes.ChatOnline}>\r\n            {allAdmins && allAdmins.map((admin) => (\r\n            <div className={classes.ChatOnlineAdmin} key={admin._id}  onClick={() => handleClick(admin)}> \r\n                <div className={classes.ChatOnlineImageContainer}>\r\n                <img \r\n                    className={classes.ChatOnlineImage}\r\n                    src=\"https://images.pexels.com/photos/7322511/pexels-photo-7322511.jpeg?cs=srgb&dl=pexels-koolshooters-7322511.jpg&fm=jpg\" \r\n                />\r\n                <div className={classes.ChatOnlineBadge}></div>\r\n                </div>\r\n                <span className={classes.ChatOnlineName}>{admin.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CitizenChatOnline;\r\n\r\n","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["533"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenConversations.module.css';\r\n\r\nconst CitizenConversations = ({conversation, currentUser}) => {\r\n    const [adminUser, setAdminUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const adminId = conversation.members.find(m => m !== currentUser._id);\r\n        //console.log(\"current user \" + adminId);\r\n\r\n        const getAdminUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/admin/' + adminId);\r\n                setAdminUser(res.data);\r\n                // console.log(res.data);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }; \r\n        getAdminUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    \r\n    //console.log(currentUser);\r\n\r\n    return(\r\n        <div className={classes.CitizenConversations}>\r\n            <img \r\n                className={classes.CitizenConversationsImg}\r\n                src={currentUser.data.user.profilePic}\r\n                alt=\"sample-image\"\r\n            />\r\n            <span className={classes.ConversationName}>{adminUser?.username}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitizenConversations;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["534"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './AdminConversations.module.css';\r\n\r\nconst AdminConversations = ({conversation, currentUser}) => {\r\n    //insert soon\r\n    const [citizenUser, setCitizenUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const friendId = conversation.members.find(m => m !== currentUser._id);\r\n        \r\n        // console.log(\"current user is \" + currentUser.user._id);\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/citizen/' + friendId);\r\n                setCitizenUser(res.data);\r\n                // console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    //console.log(citizenUser);\r\n    //console.log(citizenUser._id);\r\n    return(\r\n        <div className={classes.AdminConversations}>\r\n            <img \r\n                className={classes.AdminConversationsImg} \r\n                src=\"https://images.pexels.com/photos/1165999/pexels-photo-1165999.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" \r\n                alt=\"sample-image\" />\r\n            <span className={classes.ConversationName}>{citizenUser?.firstname + ' ' + citizenUser?.lastname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminConversations;","E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"E:\\Document\\joshua's folder\\Capstone\\Team Repo\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],{"ruleId":"535","replacedBy":"536"},{"ruleId":"537","replacedBy":"538"},{"ruleId":"539","severity":1,"message":"540","line":48,"column":8,"nodeType":"541","messageId":"542","endLine":48,"endColumn":19},{"ruleId":"539","severity":1,"message":"543","line":49,"column":8,"nodeType":"541","messageId":"542","endLine":49,"endColumn":18},{"ruleId":"539","severity":1,"message":"544","line":7,"column":10,"nodeType":"541","messageId":"542","endLine":7,"endColumn":17},{"ruleId":"539","severity":1,"message":"545","line":26,"column":11,"nodeType":"541","messageId":"542","endLine":26,"endColumn":17},{"ruleId":"539","severity":1,"message":"546","line":1,"column":38,"nodeType":"541","messageId":"542","endLine":1,"endColumn":47},{"ruleId":"539","severity":1,"message":"547","line":1,"column":39,"nodeType":"541","messageId":"542","endLine":1,"endColumn":45},{"ruleId":"539","severity":1,"message":"548","line":5,"column":10,"nodeType":"541","messageId":"542","endLine":5,"endColumn":19},{"ruleId":"539","severity":1,"message":"549","line":28,"column":11,"nodeType":"541","messageId":"542","endLine":28,"endColumn":16},{"ruleId":"539","severity":1,"message":"550","line":28,"column":28,"nodeType":"541","messageId":"542","endLine":28,"endColumn":38},{"ruleId":"539","severity":1,"message":"551","line":3,"column":10,"nodeType":"541","messageId":"542","endLine":3,"endColumn":13},{"ruleId":"539","severity":1,"message":"552","line":3,"column":15,"nodeType":"541","messageId":"542","endLine":3,"endColumn":18},{"ruleId":"539","severity":1,"message":"553","line":3,"column":26,"nodeType":"541","messageId":"542","endLine":3,"endColumn":35},{"ruleId":"539","severity":1,"message":"554","line":11,"column":8,"nodeType":"541","messageId":"542","endLine":11,"endColumn":23},{"ruleId":"539","severity":1,"message":"555","line":18,"column":10,"nodeType":"541","messageId":"542","endLine":18,"endColumn":19},{"ruleId":"539","severity":1,"message":"556","line":19,"column":8,"nodeType":"541","messageId":"542","endLine":19,"endColumn":17},{"ruleId":"539","severity":1,"message":"557","line":23,"column":7,"nodeType":"541","messageId":"542","endLine":23,"endColumn":23},{"ruleId":"539","severity":1,"message":"558","line":4,"column":8,"nodeType":"541","messageId":"542","endLine":4,"endColumn":18},{"ruleId":"539","severity":1,"message":"559","line":1,"column":40,"nodeType":"541","messageId":"542","endLine":1,"endColumn":50},{"ruleId":"539","severity":1,"message":"560","line":3,"column":10,"nodeType":"541","messageId":"542","endLine":3,"endColumn":19},{"ruleId":"539","severity":1,"message":"561","line":4,"column":13,"nodeType":"541","messageId":"542","endLine":4,"endColumn":16},{"ruleId":"539","severity":1,"message":"562","line":10,"column":8,"nodeType":"541","messageId":"542","endLine":10,"endColumn":13},{"ruleId":"539","severity":1,"message":"549","line":18,"column":13,"nodeType":"541","messageId":"542","endLine":18,"endColumn":18},{"ruleId":"539","severity":1,"message":"563","line":44,"column":23,"nodeType":"541","messageId":"542","endLine":44,"endColumn":26},{"ruleId":"539","severity":1,"message":"564","line":1,"column":29,"nodeType":"541","messageId":"542","endLine":1,"endColumn":37},{"ruleId":"539","severity":1,"message":"561","line":4,"column":13,"nodeType":"541","messageId":"542","endLine":4,"endColumn":16},{"ruleId":"539","severity":1,"message":"562","line":9,"column":8,"nodeType":"541","messageId":"542","endLine":9,"endColumn":13},{"ruleId":"539","severity":1,"message":"563","line":45,"column":23,"nodeType":"541","messageId":"542","endLine":45,"endColumn":26},{"ruleId":"565","severity":1,"message":"566","line":22,"column":6,"nodeType":"567","endLine":22,"endColumn":8,"suggestions":"568"},{"ruleId":"569","severity":1,"message":"570","line":69,"column":13,"nodeType":"571","endLine":69,"endColumn":79},{"ruleId":"539","severity":1,"message":"572","line":2,"column":10,"nodeType":"541","messageId":"542","endLine":2,"endColumn":21},{"ruleId":"539","severity":1,"message":"560","line":3,"column":10,"nodeType":"541","messageId":"542","endLine":3,"endColumn":19},{"ruleId":"539","severity":1,"message":"573","line":3,"column":21,"nodeType":"541","messageId":"542","endLine":3,"endColumn":27},{"ruleId":"539","severity":1,"message":"574","line":3,"column":29,"nodeType":"541","messageId":"542","endLine":3,"endColumn":33},{"ruleId":"539","severity":1,"message":"575","line":3,"column":35,"nodeType":"541","messageId":"542","endLine":3,"endColumn":40},{"ruleId":"539","severity":1,"message":"576","line":3,"column":42,"nodeType":"541","messageId":"542","endLine":3,"endColumn":54},{"ruleId":"539","severity":1,"message":"561","line":5,"column":13,"nodeType":"541","messageId":"542","endLine":5,"endColumn":16},{"ruleId":"539","severity":1,"message":"562","line":10,"column":8,"nodeType":"541","messageId":"542","endLine":10,"endColumn":13},{"ruleId":"539","severity":1,"message":"577","line":12,"column":8,"nodeType":"541","messageId":"542","endLine":12,"endColumn":20},{"ruleId":"539","severity":1,"message":"578","line":13,"column":8,"nodeType":"541","messageId":"542","endLine":13,"endColumn":20},{"ruleId":"539","severity":1,"message":"549","line":19,"column":13,"nodeType":"541","messageId":"542","endLine":19,"endColumn":18},{"ruleId":"565","severity":1,"message":"566","line":33,"column":8,"nodeType":"567","endLine":33,"endColumn":10,"suggestions":"579"},{"ruleId":"539","severity":1,"message":"580","line":44,"column":52,"nodeType":"541","messageId":"542","endLine":44,"endColumn":59},{"ruleId":"539","severity":1,"message":"563","line":84,"column":23,"nodeType":"541","messageId":"542","endLine":84,"endColumn":26},{"ruleId":"539","severity":1,"message":"581","line":9,"column":8,"nodeType":"541","messageId":"542","endLine":9,"endColumn":14},{"ruleId":"539","severity":1,"message":"582","line":2,"column":27,"nodeType":"541","messageId":"542","endLine":2,"endColumn":33},{"ruleId":"539","severity":1,"message":"583","line":46,"column":11,"nodeType":"541","messageId":"542","endLine":46,"endColumn":23},{"ruleId":"539","severity":1,"message":"584","line":71,"column":11,"nodeType":"541","messageId":"542","endLine":71,"endColumn":23},{"ruleId":"539","severity":1,"message":"547","line":1,"column":27,"nodeType":"541","messageId":"542","endLine":1,"endColumn":33},{"ruleId":"539","severity":1,"message":"572","line":2,"column":10,"nodeType":"541","messageId":"542","endLine":2,"endColumn":21},{"ruleId":"539","severity":1,"message":"585","line":10,"column":19,"nodeType":"541","messageId":"542","endLine":10,"endColumn":29},{"ruleId":"565","severity":1,"message":"566","line":22,"column":6,"nodeType":"567","endLine":22,"endColumn":8,"suggestions":"586"},{"ruleId":"569","severity":1,"message":"570","line":56,"column":13,"nodeType":"571","endLine":56,"endColumn":78},{"ruleId":"565","severity":1,"message":"566","line":20,"column":6,"nodeType":"567","endLine":20,"endColumn":8,"suggestions":"587"},{"ruleId":"539","severity":1,"message":"563","line":44,"column":11,"nodeType":"541","messageId":"542","endLine":44,"endColumn":14},{"ruleId":"539","severity":1,"message":"588","line":2,"column":10,"nodeType":"541","messageId":"542","endLine":2,"endColumn":14},{"ruleId":"539","severity":1,"message":"589","line":4,"column":10,"nodeType":"541","messageId":"542","endLine":4,"endColumn":13},{"ruleId":"539","severity":1,"message":"588","line":2,"column":10,"nodeType":"541","messageId":"542","endLine":2,"endColumn":14},{"ruleId":"539","severity":1,"message":"589","line":4,"column":10,"nodeType":"541","messageId":"542","endLine":4,"endColumn":13},{"ruleId":"539","severity":1,"message":"578","line":8,"column":8,"nodeType":"541","messageId":"542","endLine":8,"endColumn":20},{"ruleId":"539","severity":1,"message":"574","line":2,"column":20,"nodeType":"541","messageId":"542","endLine":2,"endColumn":24},{"ruleId":"539","severity":1,"message":"582","line":2,"column":26,"nodeType":"541","messageId":"542","endLine":2,"endColumn":32},{"ruleId":"539","severity":1,"message":"588","line":3,"column":10,"nodeType":"541","messageId":"542","endLine":3,"endColumn":14},{"ruleId":"539","severity":1,"message":"559","line":1,"column":58,"nodeType":"541","messageId":"542","endLine":1,"endColumn":68},{"ruleId":"539","severity":1,"message":"590","line":6,"column":8,"nodeType":"541","messageId":"542","endLine":6,"endColumn":19},{"ruleId":"539","severity":1,"message":"591","line":23,"column":11,"nodeType":"541","messageId":"542","endLine":23,"endColumn":20},{"ruleId":"539","severity":1,"message":"582","line":7,"column":10,"nodeType":"541","messageId":"542","endLine":7,"endColumn":16},{"ruleId":"539","severity":1,"message":"592","line":31,"column":15,"nodeType":"541","messageId":"542","endLine":31,"endColumn":23},{"ruleId":"593","severity":1,"message":"594","line":208,"column":1,"nodeType":"595","messageId":"596","endLine":248,"endColumn":11},{"ruleId":"539","severity":1,"message":"543","line":5,"column":8,"nodeType":"541","messageId":"542","endLine":5,"endColumn":18},{"ruleId":"539","severity":1,"message":"574","line":6,"column":20,"nodeType":"541","messageId":"542","endLine":6,"endColumn":24},{"ruleId":"539","severity":1,"message":"582","line":6,"column":26,"nodeType":"541","messageId":"542","endLine":6,"endColumn":32},{"ruleId":"539","severity":1,"message":"597","line":7,"column":10,"nodeType":"541","messageId":"542","endLine":7,"endColumn":17},{"ruleId":"539","severity":1,"message":"598","line":21,"column":11,"nodeType":"541","messageId":"542","endLine":21,"endColumn":23},{"ruleId":"539","severity":1,"message":"592","line":23,"column":15,"nodeType":"541","messageId":"542","endLine":23,"endColumn":23},{"ruleId":"565","severity":1,"message":"599","line":31,"column":7,"nodeType":"567","endLine":31,"endColumn":9,"suggestions":"600"},{"ruleId":"539","severity":1,"message":"563","line":75,"column":27,"nodeType":"541","messageId":"542","endLine":75,"endColumn":30},{"ruleId":"539","severity":1,"message":"601","line":3,"column":39,"nodeType":"541","messageId":"542","endLine":3,"endColumn":48},{"ruleId":"539","severity":1,"message":"602","line":3,"column":50,"nodeType":"541","messageId":"542","endLine":3,"endColumn":63},{"ruleId":"539","severity":1,"message":"576","line":4,"column":24,"nodeType":"541","messageId":"542","endLine":4,"endColumn":36},{"ruleId":"539","severity":1,"message":"603","line":4,"column":45,"nodeType":"541","messageId":"542","endLine":4,"endColumn":62},{"ruleId":"539","severity":1,"message":"588","line":5,"column":10,"nodeType":"541","messageId":"542","endLine":5,"endColumn":14},{"ruleId":"539","severity":1,"message":"604","line":5,"column":16,"nodeType":"541","messageId":"542","endLine":5,"endColumn":24},{"ruleId":"539","severity":1,"message":"605","line":7,"column":8,"nodeType":"541","messageId":"542","endLine":7,"endColumn":19},{"ruleId":"539","severity":1,"message":"606","line":17,"column":19,"nodeType":"541","messageId":"542","endLine":17,"endColumn":27},{"ruleId":"539","severity":1,"message":"607","line":18,"column":12,"nodeType":"541","messageId":"542","endLine":18,"endColumn":19},{"ruleId":"539","severity":1,"message":"585","line":18,"column":21,"nodeType":"541","messageId":"542","endLine":18,"endColumn":31},{"ruleId":"539","severity":1,"message":"608","line":19,"column":12,"nodeType":"541","messageId":"542","endLine":19,"endColumn":20},{"ruleId":"539","severity":1,"message":"609","line":19,"column":22,"nodeType":"541","messageId":"542","endLine":19,"endColumn":33},{"ruleId":"539","severity":1,"message":"610","line":20,"column":9,"nodeType":"541","messageId":"542","endLine":20,"endColumn":14},{"ruleId":"565","severity":1,"message":"611","line":40,"column":7,"nodeType":"567","endLine":40,"endColumn":9,"suggestions":"612"},{"ruleId":"613","severity":1,"message":"614","line":55,"column":26,"nodeType":"615","messageId":"616","endLine":55,"endColumn":28},{"ruleId":"565","severity":1,"message":"617","line":63,"column":7,"nodeType":"567","endLine":63,"endColumn":17,"suggestions":"618"},{"ruleId":"613","severity":1,"message":"614","line":78,"column":26,"nodeType":"615","messageId":"616","endLine":78,"endColumn":28},{"ruleId":"565","severity":1,"message":"617","line":86,"column":7,"nodeType":"567","endLine":86,"endColumn":17,"suggestions":"619"},{"ruleId":"539","severity":1,"message":"592","line":95,"column":23,"nodeType":"541","messageId":"542","endLine":95,"endColumn":31},{"ruleId":"539","severity":1,"message":"620","line":105,"column":23,"nodeType":"541","messageId":"542","endLine":105,"endColumn":32},{"ruleId":"539","severity":1,"message":"592","line":117,"column":23,"nodeType":"541","messageId":"542","endLine":117,"endColumn":31},{"ruleId":"539","severity":1,"message":"592","line":140,"column":27,"nodeType":"541","messageId":"542","endLine":140,"endColumn":35},{"ruleId":"539","severity":1,"message":"620","line":151,"column":27,"nodeType":"541","messageId":"542","endLine":151,"endColumn":36},{"ruleId":"539","severity":1,"message":"592","line":164,"column":23,"nodeType":"541","messageId":"542","endLine":164,"endColumn":31},{"ruleId":"539","severity":1,"message":"563","line":198,"column":15,"nodeType":"541","messageId":"542","endLine":198,"endColumn":18},{"ruleId":"569","severity":1,"message":"570","line":303,"column":29,"nodeType":"571","endLine":303,"endColumn":71},{"ruleId":"565","severity":1,"message":"621","line":79,"column":8,"nodeType":"567","endLine":79,"endColumn":10,"suggestions":"622"},{"ruleId":"539","severity":1,"message":"623","line":2,"column":8,"nodeType":"541","messageId":"542","endLine":2,"endColumn":13},{"ruleId":"539","severity":1,"message":"582","line":3,"column":20,"nodeType":"541","messageId":"542","endLine":3,"endColumn":26},{"ruleId":"539","severity":1,"message":"624","line":11,"column":12,"nodeType":"541","messageId":"542","endLine":11,"endColumn":21},{"ruleId":"539","severity":1,"message":"625","line":11,"column":23,"nodeType":"541","messageId":"542","endLine":11,"endColumn":35},{"ruleId":"539","severity":1,"message":"626","line":12,"column":11,"nodeType":"541","messageId":"542","endLine":12,"endColumn":20},{"ruleId":"565","severity":1,"message":"627","line":21,"column":7,"nodeType":"567","endLine":21,"endColumn":9,"suggestions":"628"},{"ruleId":"565","severity":1,"message":"599","line":31,"column":7,"nodeType":"567","endLine":31,"endColumn":9,"suggestions":"629"},{"ruleId":"539","severity":1,"message":"563","line":75,"column":27,"nodeType":"541","messageId":"542","endLine":75,"endColumn":30},{"ruleId":"539","severity":1,"message":"630","line":4,"column":15,"nodeType":"541","messageId":"542","endLine":4,"endColumn":21},{"ruleId":"539","severity":1,"message":"553","line":4,"column":28,"nodeType":"541","messageId":"542","endLine":4,"endColumn":37},{"ruleId":"539","severity":1,"message":"597","line":5,"column":16,"nodeType":"541","messageId":"542","endLine":5,"endColumn":23},{"ruleId":"539","severity":1,"message":"631","line":9,"column":12,"nodeType":"541","messageId":"542","endLine":9,"endColumn":17},{"ruleId":"539","severity":1,"message":"632","line":9,"column":19,"nodeType":"541","messageId":"542","endLine":9,"endColumn":27},{"ruleId":"569","severity":1,"message":"570","line":93,"column":25,"nodeType":"571","endLine":93,"endColumn":56},{"ruleId":"569","severity":1,"message":"570","line":37,"column":17,"nodeType":"571","endLine":40,"endColumn":19},{"ruleId":"633","severity":1,"message":"634","line":30,"column":13,"nodeType":"571","endLine":34,"endColumn":15},{"ruleId":"633","severity":1,"message":"634","line":31,"column":13,"nodeType":"571","endLine":34,"endColumn":38},"no-native-reassign",["635"],"no-negated-in-lhs",["636"],"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'Context' is defined but never used.","'string' is assigned a value but never used.","'useParams' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'ProfileIconCard' is defined but never used.","'propTypes' is defined but never used.","'TextError' is defined but never used.","'validationSchema' is assigned a value but never used.","'CardHeader' is defined but never used.","'useReducer' is defined but never used.","'useFormik' is defined but never used.","'Yup' is defined but never used.","'Input' is defined but never used.","'res' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["637"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useLocation' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'SubmitButton' is defined but never used.","'CancelButton' is defined but never used.",["638"],"'control' is assigned a value but never used.","'Tables' is defined but never used.","'Button' is defined but never used.","'handleAccept' is assigned a value but never used.","'handleReject' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["639"],["640"],"'Link' is defined but never used.","'Nav' is defined but never used.","'AdminLayout' is defined but never used.","'scrollRef' is assigned a value but never used.","'response' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'NavLink' is defined but never used.","'deletereport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.",["641"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'disable' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["642"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["643"],["644"],"'response2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["645"],"'axios' is defined but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["646"],["647"],"'Column' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"648","fix":"649"},{"desc":"648","fix":"650"},{"desc":"648","fix":"651"},{"desc":"648","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"657","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"653","fix":"664"},"Update the dependencies array to be: [params.id]",{"range":"665","text":"666"},{"range":"667","text":"666"},{"range":"668","text":"666"},{"range":"669","text":"666"},"Update the dependencies array to be: [citizenUser]",{"range":"670","text":"671"},"Update the dependencies array to be: [proposalId]",{"range":"672","text":"673"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"674","text":"675"},{"range":"676","text":"675"},"Update the dependencies array to be: [citizen]",{"range":"677","text":"678"},"Update the dependencies array to be: [path]",{"range":"679","text":"680"},{"range":"681","text":"671"},[712,714],"[params.id]",[1284,1286],[812,814],[691,693],[1472,1474],"[citizenUser]",[1790,1792],"[proposalId]",[2572,2582],"[proposal, user.data.user._id]",[3361,3371],[2643,2645],"[citizen]",[805,807],"[path]",[1398,1400]]
[{"D:\\Projects\\SmartCTzen\\client\\src\\index.js":"1","D:\\Projects\\SmartCTzen\\client\\src\\App.js":"2","D:\\Projects\\SmartCTzen\\client\\src\\context\\Context.js":"3","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"4","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"5","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"6","D:\\Projects\\SmartCTzen\\client\\src\\context\\Reducer.js":"7","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"8","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"9","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"10","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"11","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"12","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"13","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"14","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"15","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"16","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"17","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"18","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"19","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"20","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"21","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"22","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"23","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"24","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"25","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"26","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"27","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"28","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"29","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"30","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"31","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"32","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"33","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"34","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"35","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"36","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"37","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"38","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"39","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"40","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"41","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"42","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"43","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"44","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"45","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"46","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"47","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"48","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"49","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"50","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"51","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"52","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"53","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"54","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"55","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"56","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"57","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"58","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"59","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"60","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"61","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"62","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"63","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"64","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"65","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"66","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"67","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"68","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"69","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"70","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"71","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"72","D:\\Projects\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"73","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js":"74","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"75","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"76","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js":"77","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"78","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"79","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"80","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"81","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"82","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"83","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"84","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"85","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"86","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"87","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"88","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"89","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"90","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"91","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"92","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"93","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"94","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"95"},{"size":502,"mtime":1632365168664,"results":"96","hashOfConfig":"97"},{"size":14896,"mtime":1633087179474,"results":"98","hashOfConfig":"97"},{"size":1216,"mtime":1631929926675,"results":"99","hashOfConfig":"97"},{"size":1886,"mtime":1631518050460,"results":"100","hashOfConfig":"97"},{"size":4061,"mtime":1632629366672,"results":"101","hashOfConfig":"97"},{"size":2508,"mtime":1630907286701,"results":"102","hashOfConfig":"97"},{"size":3965,"mtime":1632726352419,"results":"103","hashOfConfig":"97"},{"size":5002,"mtime":1632039421578,"results":"104","hashOfConfig":"97"},{"size":4355,"mtime":1632726042144,"results":"105","hashOfConfig":"97"},{"size":4032,"mtime":1632484710394,"results":"106","hashOfConfig":"97"},{"size":3502,"mtime":1632725017830,"results":"107","hashOfConfig":"97"},{"size":3661,"mtime":1632554339836,"results":"108","hashOfConfig":"97"},{"size":9631,"mtime":1632801320183,"results":"109","hashOfConfig":"97"},{"size":10297,"mtime":1632817327919,"results":"110","hashOfConfig":"97"},{"size":7516,"mtime":1633226527574,"results":"111","hashOfConfig":"97"},{"size":4229,"mtime":1632554393586,"results":"112","hashOfConfig":"97"},{"size":9254,"mtime":1632816924526,"results":"113","hashOfConfig":"97"},{"size":3656,"mtime":1632554210592,"results":"114","hashOfConfig":"97"},{"size":2946,"mtime":1632651341734,"results":"115","hashOfConfig":"97"},{"size":9944,"mtime":1632906515974,"results":"116","hashOfConfig":"97"},{"size":2988,"mtime":1632554863479,"results":"117","hashOfConfig":"97"},{"size":7491,"mtime":1632629366788,"results":"118","hashOfConfig":"97"},{"size":2542,"mtime":1632718430134,"results":"119","hashOfConfig":"97"},{"size":3383,"mtime":1632651341734,"results":"120","hashOfConfig":"97"},{"size":3386,"mtime":1632715742028,"results":"121","hashOfConfig":"97"},{"size":2633,"mtime":1632629366896,"results":"122","hashOfConfig":"97"},{"size":2757,"mtime":1632629366908,"results":"123","hashOfConfig":"97"},{"size":3674,"mtime":1632982698166,"results":"124","hashOfConfig":"97"},{"size":2346,"mtime":1632629366793,"results":"125","hashOfConfig":"97"},{"size":8492,"mtime":1632629366784,"results":"126","hashOfConfig":"97"},{"size":5913,"mtime":1632801320186,"results":"127","hashOfConfig":"97"},{"size":3483,"mtime":1632629366913,"results":"128","hashOfConfig":"97"},{"size":3385,"mtime":1632722170851,"results":"129","hashOfConfig":"97"},{"size":2965,"mtime":1632801320187,"results":"130","hashOfConfig":"97"},{"size":2133,"mtime":1632906500141,"results":"131","hashOfConfig":"97"},{"size":2510,"mtime":1632721861812,"results":"132","hashOfConfig":"97"},{"size":9136,"mtime":1632982906991,"results":"133","hashOfConfig":"97"},{"size":4954,"mtime":1632812360246,"results":"134","hashOfConfig":"97"},{"size":2935,"mtime":1633229436232,"results":"135","hashOfConfig":"97"},{"size":6176,"mtime":1633129334193,"results":"136","hashOfConfig":"97"},{"size":11442,"mtime":1633232395214,"results":"137","hashOfConfig":"97"},{"size":4028,"mtime":1633140558876,"results":"138","hashOfConfig":"97"},{"size":2792,"mtime":1633087179499,"results":"139","hashOfConfig":"97"},{"size":3773,"mtime":1632727220732,"results":"140","hashOfConfig":"97"},{"size":10568,"mtime":1633226835265,"results":"141","hashOfConfig":"97"},{"size":8255,"mtime":1633229772260,"results":"142","hashOfConfig":"97"},{"size":2747,"mtime":1633224447223,"results":"143","hashOfConfig":"97"},{"size":18162,"mtime":1633224447123,"results":"144","hashOfConfig":"97"},{"size":22543,"mtime":1633224447159,"results":"145","hashOfConfig":"97"},{"size":2557,"mtime":1633224447205,"results":"146","hashOfConfig":"97"},{"size":2751,"mtime":1633224447169,"results":"147","hashOfConfig":"97"},{"size":2771,"mtime":1633224447223,"results":"148","hashOfConfig":"97"},{"size":2401,"mtime":1633224447164,"results":"149","hashOfConfig":"97"},{"size":13151,"mtime":1633224447269,"results":"150","hashOfConfig":"97"},{"size":3134,"mtime":1633065809109,"results":"151","hashOfConfig":"97"},{"size":733,"mtime":1632288578955,"results":"152","hashOfConfig":"97"},{"size":4478,"mtime":1633229994825,"results":"153","hashOfConfig":"97"},{"size":1027,"mtime":1632288578959,"results":"154","hashOfConfig":"97"},{"size":1561,"mtime":1632552767751,"results":"155","hashOfConfig":"97"},{"size":8393,"mtime":1633224447418,"results":"156","hashOfConfig":"97"},{"size":9606,"mtime":1633224447423,"results":"157","hashOfConfig":"97"},{"size":13373,"mtime":1633224447359,"results":"158","hashOfConfig":"97"},{"size":18193,"mtime":1633227644225,"results":"159","hashOfConfig":"97"},{"size":16060,"mtime":1633224447359,"results":"160","hashOfConfig":"97"},{"size":2155,"mtime":1633224447333,"results":"161","hashOfConfig":"97"},{"size":14218,"mtime":1633224447388,"results":"162","hashOfConfig":"97"},{"size":4269,"mtime":1633224447328,"results":"163","hashOfConfig":"97"},{"size":6118,"mtime":1633140542740,"results":"164","hashOfConfig":"97"},{"size":789,"mtime":1631698332154,"results":"165","hashOfConfig":"97"},{"size":1966,"mtime":1631686854886,"results":"166","hashOfConfig":"97"},{"size":2183,"mtime":1631520057495,"results":"167","hashOfConfig":"97"},{"size":1584,"mtime":1632727118990,"results":"168","hashOfConfig":"97"},{"size":364,"mtime":1632288578857,"results":"169","hashOfConfig":"97"},{"size":221,"mtime":1633065809110,"results":"170","hashOfConfig":"97"},{"size":1403,"mtime":1633129334099,"results":"171","hashOfConfig":"97"},{"size":211,"mtime":1629626169110,"results":"172","hashOfConfig":"97"},{"size":166,"mtime":1629626169206,"results":"173","hashOfConfig":"97"},{"size":254,"mtime":1630124291336,"results":"174","hashOfConfig":"97"},{"size":210,"mtime":1630373983068,"results":"175","hashOfConfig":"97"},{"size":253,"mtime":1632965216307,"results":"176","hashOfConfig":"97"},{"size":297,"mtime":1629626169018,"results":"177","hashOfConfig":"97"},{"size":286,"mtime":1632629319830,"results":"178","hashOfConfig":"97"},{"size":425,"mtime":1633087166890,"results":"179","hashOfConfig":"97"},{"size":432,"mtime":1630569618623,"results":"180","hashOfConfig":"97"},{"size":255,"mtime":1632982896626,"results":"181","hashOfConfig":"97"},{"size":904,"mtime":1633140542537,"results":"182","hashOfConfig":"97"},{"size":359,"mtime":1633224447274,"results":"183","hashOfConfig":"97"},{"size":1696,"mtime":1633224447388,"results":"184","hashOfConfig":"97"},{"size":845,"mtime":1633140542948,"results":"185","hashOfConfig":"97"},{"size":1237,"mtime":1633140542760,"results":"186","hashOfConfig":"97"},{"size":205,"mtime":1632629319795,"results":"187","hashOfConfig":"97"},{"size":462,"mtime":1631932523519,"results":"188","hashOfConfig":"97"},{"size":250,"mtime":1631337799096,"results":"189","hashOfConfig":"97"},{"size":245,"mtime":1629626169525,"results":"190","hashOfConfig":"97"},{"size":219,"mtime":1629626169652,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"zotif",{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"194"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"194"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"194"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"194"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"194"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"194"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"194"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"194"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"194"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"194"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"194"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"194"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"194"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"194"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"194"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"194"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"194"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"194"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"194"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"194"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"194"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"194"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"194"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"194"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"194"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"D:\\Projects\\SmartCTzen\\client\\src\\index.js",[],["410","411"],"D:\\Projects\\SmartCTzen\\client\\src\\App.js",["412","413"],"import React, { useState, useContext } from 'react';\r\nimport { Context } from './context/Context';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport LandingNavBar from './components/Landing/Navigation/LandingNavBar';\r\nimport Home from './pages/Landing/Home/Home';\r\nimport CitizenLogin from './pages/Landing/CitizenLogin/CitizenLogin';\r\nimport CitizenForgot from './pages/Landing/CitizenForgot/CitizenForgot';\r\nimport CitizenEmail from './pages/Landing/CitizenEmail/CitizenEmail';\r\nimport Features from './pages/Landing/Feature/Features';\r\nimport Progress from './components/Landing/Register/Progress';\r\nimport FirstStep from './pages/Landing/Register/FirstStep';\r\nimport SecondStep from './pages/Landing/Register/SecondStep';\r\nimport ThirdStep from './pages/Landing/Register/ThirdStep';\r\nimport FourthStep from './pages/Landing/Register/FourthStep';\r\nimport FifthStep from './pages/Landing/Register/FifthStep';\r\nimport SixthStep from './pages/Landing/Register/SixthStep';\r\nimport SeventhStep from './pages/Landing/Register/SeventhStep';\r\n\r\nimport CitizenNavBar from './components/Citizen/CitizenNav/CitizenNav';\r\nimport CitizenProfile from './pages/Citizen/CitizenProfile/CitizenProfile';\r\nimport CitizenProposals from './pages/Citizen/CitizenProposals/CitizenProposals';\r\nimport CitizenReports from './pages/Citizen/CitizenReports/CitizenReports';\r\nimport CitizenProjects from './pages/Citizen/CitizenProjects/CitizenProjects';\r\n\r\nimport AdminForgot from './components/AllAdmin/Administrator/AdminForgot/AdminForgot';\r\nimport AdminEmail from './components/AllAdmin/Administrator/AdminEmail/AdminEmail';\r\nimport AdminProfile from './components/AllAdmin/Administrator/AdminProfile/AdminProfile';\r\nimport AdminLogin from './components/AllAdmin/Administrator/AdminLogin/AdminLogin';\r\nimport AdminProposals from './components/AllAdmin/Administrator/AdminProposals/AdminProposals';\r\nimport AdminReports from './components/AllAdmin/Administrator/AdminReports/AdminReports';\r\nimport AdminMessages from './components/AllAdmin/Administrator/AdminMessages/AdminMessages';\r\nimport AdminProjects from './components/AllAdmin/Administrator/AdminProjects/AdminProjects';\r\nimport AdminUsers from './components/AllAdmin/Administrator/AdminUsers/AdminUsers';\r\nimport Applicants from './components/AllAdmin/Administrator/Applicants/Applicants';\r\nimport SingleApplicants from './components/AllAdmin/Administrator/SingleApplicants/SingleApplicants';\r\nimport SingleUsers from './components/AllAdmin/Administrator/SingleUsers/SingleUsers';\r\nimport AdminCreateProposals from './components/AllAdmin/Administrator/AdminCreateProposals/AdminCreateProposals';\r\nimport AdminCreateProjects from './components/AllAdmin/Administrator/AdminCreateProjects/AdminCreateProjects';\r\n\r\nimport CitizenPassUpdate from './pages/Citizen/CitizenProfile/CitizenPassUpdate/CitizenPassUpdate';\r\nimport CitizenCreateProposal from './pages/Citizen/CitizenProposals/CreateProposals/CitizenCreateProposals';\r\nimport CitizenViewProposal from './pages/Citizen/CitizenProposals/ViewProposals/CitizenViewProposal';\r\nimport CitizenViewReport from './pages/Citizen/CitizenReports/ViewReports/CitizenViewReport';\r\nimport CitizenSubmitReport from './pages/Citizen/CitizenReports/SubmitReport/CitizenSubmitReport';\r\nimport CitizenChatReport from './pages/Citizen/CitizenReports/ChatReports/CitizenChatReport';\r\nimport CitizenViewProject from './pages/Citizen/CitizenProjects/CitizenViewProject/CitizenViewProject';\r\nimport ProposalNav from './components/Citizen/ProposalNav/ProposalNav';\r\nimport ReportsNav from './components/Citizen/ReportsNav/ReportsNav';\r\n\r\nimport SANavBar from './components/SuperAdmin/SaSideBar';\r\nimport SALogin from './pages/SuperAdmin/SALogin/SALogin';\r\nimport SAForgot from './pages/SuperAdmin/SAForgot/SAForgot';\r\nimport SAEmail from './pages/SuperAdmin/SAEmail/SAEmail';\r\nimport SAContentHome from './pages/SuperAdmin/SAContentHome/SAContentHome';\r\nimport SAAnnouncements from './pages/SuperAdmin/SAAnnouncements/SAAnnouncements';\r\nimport SAFeaturedMember from './pages/SuperAdmin/SAFeaturedMember/SAFeaturedMember';\r\nimport SAEula from './pages/SuperAdmin/SAEula/SAEula';\r\nimport SAAddFeaturedMember from './pages/SuperAdmin/SAAddFeaturedMember/SAAddFeaturedMember';\r\nimport SAContentFeature from './pages/SuperAdmin/SAContentFeature/SAContentFeature';\r\nimport SAAddFeature from './pages/SuperAdmin/SAAddFeature/SAAddFeature';\r\nimport SAFeatures from './pages/SuperAdmin/SAFeatures/SAFeatures';\r\nimport SAManage from './pages/SuperAdmin/SAManage/SAManage';\r\nimport SASearchAdmin from './pages/SuperAdmin/SASearchAdmin/SASearchAdmin';\r\nimport SAAddAdmin from './pages/SuperAdmin/SAAddAdmin/SAAddAdmin';\r\nimport SAAccount from './pages/SuperAdmin/SAAccount/SAAccount';\r\nimport AdminReportsDashboard from './components/AllAdmin/Administrator/AdminReportsDashboard/AdminReportsDashboard';\r\nimport AdminProposalsDashboard from './components/AllAdmin/Administrator/AdminProposalsDashboard/AdminProposalsDashboard';\r\nimport AdminEachProposal from './components/AllAdmin/Administrator/AdminEachProposal/AdminEachProposal';\r\nimport AdminEachProject from './components/AllAdmin/Administrator/AdminEachProject/AdminEachProject';\r\nimport AdminEachReport from './components/AllAdmin/Administrator/AdminEachReport/AdminEachReport';\r\nimport AdminUpdateProject from './components/AllAdmin/Administrator/AdminUpdateProject/AdminUpdateProject';\r\n\r\nconst App = () => {\r\n\r\n  //Register data passing...\r\n  const [citizen, setCitizen] = useState({});\r\n\r\n  const updateCitizen = (data) => {\r\n    setCitizen((prevCitizen) => ({ ...prevCitizen, ...data }));\r\n  };\r\n\r\n  const resetCitizen = () => {\r\n    setCitizen({});\r\n  };\r\n\r\n  //Citizen User...\r\n  const { user } = useContext(Context);\r\n\r\n  // console.log(user);\r\n\r\n  //Super Administrator User...\r\n  const { saUser } = useContext(Context);\r\n\r\n  //Administrator User...\r\n  const { aUser } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <LandingNavBar />\r\n      <Progress />\r\n\r\n      <CitizenNavBar />\r\n      {/* <ProposalNav /> */}\r\n\r\n      <SANavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/features\">\r\n            <Features />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/forgot-password\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenForgot />}\r\n          </Route>\r\n\r\n          <Route path=\"/change-password/:token\">\r\n            {user ? <Redirect to=\"/citizen-profile\" /> : <CitizenEmail />}\r\n          </Route>\r\n\r\n          <Route\r\n             render={(props) => (\r\n              <FirstStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen}/>\r\n            )}\r\n            path=\"/create-account\"\r\n             exact={true}\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SecondStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/second\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <ThirdStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/third\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FourthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fourth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <FifthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/fifth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SixthStep {...props} citizen={citizen} updateCitizen={updateCitizen} />\r\n            )}\r\n            path=\"/sixth\"\r\n          />\r\n\r\n          <Route\r\n            render={(props) => (\r\n              <SeventhStep {...props} citizen={citizen} updateCitizen={updateCitizen} resetCitizen={resetCitizen} />\r\n            )}\r\n            path=\"/seventh\"\r\n          />\r\n\r\n          {/**************************** CITIZEN Routes ****************************/}\r\n\r\n          <Route path=\"/citizen-profile\">  \r\n            {user ? <CitizenProfile /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-pass-update\">\r\n            {user ? <CitizenPassUpdate /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-proposals\">\r\n            {user ? <CitizenProposals /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-view-proposals\">\r\n            <CitizenViewProposal/>\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-create-proposals\">\r\n            {user ? <CitizenCreateProposal /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/citizen-reports\">\r\n            {user ? <CitizenReports /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-reports\">\r\n            {user ? <CitizenViewReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-submit-reports\">\r\n            {user ? <CitizenSubmitReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-chat-report\">\r\n            {user ? <CitizenChatReport /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-projects\">\r\n            {user ? <CitizenProjects /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          <Route path=\"/citizen-view-project\">\r\n            {user ? <CitizenViewProject /> : <Redirect to=\"/\" />}\r\n          </Route> \r\n\r\n          {/**************************** ADMIN Routes ****************************/} \r\n\r\n          <Route path=\"/admin-login\">\r\n            {aUser ? <Redirect to=\"/admin-profile\" /> : <AdminLogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-forgot\">\r\n            <AdminForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-change/:token\">\r\n            <AdminEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/admin-profile\">\r\n            {aUser ? <AdminProfile /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposals\">\r\n            {aUser ? <AdminProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n          \r\n          <Route path=\"/admin-proposal/:id\">\r\n            {aUser ? <AdminEachProposal /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-proposals\">\r\n            {aUser ? <AdminCreateProposals /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-reports\">\r\n            {aUser ? <AdminReports /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-report/:id\">\r\n            {aUser ? <AdminEachReport /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/reports\">\r\n            {aUser ? <AdminReportsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-messages\">\r\n            {aUser ? <AdminMessages /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-projects\">\r\n            {aUser ? <AdminProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-project/:id\">\r\n            {aUser ? <AdminEachProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-summary/proposals\">\r\n            {aUser ? <AdminProposalsDashboard /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-create-projects\">\r\n            {aUser ? <AdminCreateProjects /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-update-project/:id\">\r\n            {aUser ? <AdminUpdateProject /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/admin-users\">\r\n            {aUser ? <AdminUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants\">\r\n            {aUser ? <Applicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Applicants-Verification\">\r\n            {aUser ? <SingleApplicants /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/Admin-viewUsers\">\r\n            {aUser ? <SingleUsers /> : <Redirect to=\"/admin-login\" />}\r\n          </Route>\r\n\r\n          {/**************************** SUPER ADMIN Routes ****************************/}\r\n          \r\n          <Route path=\"/superAdmin-login\">\r\n            {saUser ? <Redirect to=\"/SAContent-home\" /> : <SALogin />}\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-forgot\">\r\n            <SAForgot />\r\n          </Route>\r\n\r\n          <Route path=\"/superAdmin-changePassword/:token\">\r\n            <SAEmail />\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-home\">\r\n            {saUser ? <SAContentHome /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-announcements\">\r\n            {saUser ? <SAAnnouncements /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-FeaturedMember\">\r\n            {saUser ? <SAFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-Eula\">\r\n            {saUser ? <SAEula /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-addFeaturedMember\">\r\n            {saUser ? <SAAddFeaturedMember /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAContent-feature\">\r\n            {saUser ? <SAContentFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-feature\">\r\n            {saUser ? <SAAddFeature /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-feature\">\r\n            {saUser ? <SAFeatures /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAManage-admin\">\r\n            {saUser ? <SAManage /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SASearch-admin\">\r\n            {saUser ? <SASearchAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SAAdd-admin\">\r\n            {saUser ? <SAAddAdmin /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route path=\"/SA-account\">\r\n            {saUser ? <SAAccount /> : <Redirect to=\"/superAdmin-login\" />}\r\n          </Route>\r\n\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n        </Switch>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\context\\Context.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["414"],"import React, { useContext, useEffect, useReducer, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport AdminConversations from './AdminConversations/AdminConversations';\r\nimport AdminMessage from './AdminMessage/AdminMessage';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminMessages.module.css';\r\n\r\nconst AdminMessages = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chatMessages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const { aUser } = useContext(Context);\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            }); \r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", aUser.data.user._id);\r\n        socket.current.on(\"getUsers\", aUser => {\r\n            console.log(aUser);\r\n        });\r\n    }, [aUser]);\r\n    // insert this code soon:\r\n    // const { user } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/conversations/\" + aUser.data?.user?._id);\r\n                setConversations(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        getConversations();\r\n    }, [aUser.data?.user?._id]);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n                setMessages(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat]);\r\n\r\n    // console.log(currentChat);\r\n   \r\n    // console.log(aUser.data.user._id);\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: aUser.data.user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        };\r\n\r\n        const receiverId = currentChat.members.find(member => member !== aUser.data.user._id);\r\n        \r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: aUser.data.user._id,\r\n            receiverId,\r\n            text: newMessage\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\"/api/messages/\", message);\r\n            setMessages([...chatMessages, res.data]);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [chatMessages])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        {\r\n                            conversations.map(c => (\r\n                                <div onClick={() => setCurrentChat(c)}>\r\n                                    <AdminConversations conversation={c} currentUser={aUser.data?.user}  />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {/* <AdminConversations /> */}\r\n                    </div>\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            {\r\n                                <>\r\n                                    <div className={classes.AdminChatBoxTop}>\r\n                                        {chatMessages.map(m => (\r\n                                            <div ref={scrollRef}>\r\n                                                <AdminMessage messages={m} own={m.sender === aUser.data.user?._id} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className={classes.AdminChatBoxBottom}>\r\n                                        <textarea\r\n                                            className={classes.ChatMessageInput}\r\n                                            placeholder=\"Write something...\"\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            value={newMessage}\r\n                                        ></textarea>\r\n                                        <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",["415","416","417","418","419","420"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["421"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport CardSummary from '../../../UI/Cards/CardDashboard/CardSummary';\r\n\r\nimport classes from './AdminProposalsDashboard.module.css';\r\nimport Tables from '../../../UI/Tables/Tables';\r\n\r\nconst AdminProposalsDashboard = () => {\r\n    const [topProposals, setTopProposals] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    let rCount = 0;\r\n    \r\n    useEffect(() => {\r\n        const fetchTopProposals = async () => {\r\n            const res = await axios.get('/api/proposals/topProposals');\r\n            setTopProposals(res.data);\r\n        }\r\n\r\n        fetchTopProposals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        const fetchApproved = async () => {\r\n            const res = await axios.get('/api/proposals/approved');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setAccepted(count);\r\n        }\r\n\r\n        fetchApproved();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchRejected = async () => {\r\n            const res = await axios.get('/api/proposals/rejected');\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setRejected(count);\r\n        }\r\n\r\n        fetchRejected();\r\n    }, []);\r\n\r\n    console.log(topProposals);\r\n    console.log(accepted);\r\n    console.log(rejected);\r\n\r\n    \r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProposalsDashboard}>\r\n                <CardHeader>\r\n                <h2 className={classes.Text}>Proposals Summary</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.LeaderboardsHeader}>\r\n                <h3>Leaderboards</h3>\r\n            </div>\r\n            <div className={classes.Divider}>\r\n                <div className={classes.TableDiv}>\r\n                    <table className={classes.Table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Proposal ID</th>\r\n                                <th>Proposal Title</th>\r\n                                <th>Upvote</th>\r\n                                <th>Downvote</th>\r\n                                <th>Percentage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {topProposals.map((p) => (\r\n                                <tr key = {p._id}>\r\n                                    <td>{++rCount}</td>\r\n                                    <td>{p._id}</td>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.upvote.length}</td>\r\n                                    <td>{p.downvote.length}</td>\r\n                                    <td>{Math.trunc(((p.upvote.length - p.downvote.length) / (p.upvote.length + p.downvote.length)) * 100)}%</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className={classes.CardData}>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Approved Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{accepted}</p>\r\n                    </CardSummary>\r\n                    <CardSummary>\r\n                        <h4 className={classes.SummaryCardHeader}>Rejected Proposals</h4>\r\n                        <p className={classes.SummaryDataText}>{rejected}</p>\r\n                    </CardSummary>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n};\r\n\r\nexport default AdminProposalsDashboard;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["422","423","424","425"],"import React, { useState, useContext, useRef } from 'react';\r\nimport CardForm from '../../../UI/Cards/CardForm/CardForm';\r\nimport Input from '../../../UI/Input/Input';\r\nimport LoginButton from '../../../UI/Buttons/LoginButton/LoginButton';\r\nimport { loginCall } from '../../../../api_calls/adminApiCall';\r\nimport { Context } from '../../../../context/Context';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport classes from './AdminLogin.module.css';\r\n\r\nconst AdminLogin = () => {\r\n    // const email = useRef();\r\n    // const password = useRef();\r\n    // const { user, isFetching, error, dispatch } = useContext(Context);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     loginCall(\r\n    //         { email: email.current.value, password: password.current.value }, \r\n    //         dispatch\r\n    //     );\r\n    // };\r\n\r\n    // console.log(user);\r\n//KD's code\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { aUser, dispatch, isFetching } = useContext(Context);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: \"ALOGIN_START\" });\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/admin/login\", {\r\n            email,\r\n            password,\r\n        })\r\n\r\n        dispatch({ type: \"ALOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: `${err.response.status}`,\r\n            text: `${err.response.data.message}`,\r\n        });\r\n        dispatch({ type: \"ALOGIN_FAILURE\" });\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        // <div className={classes.Content}>\r\n        //     <form className={classes.CardForm} onSubmit={handleSubmit}>\r\n        //         <h3>SmartCTLogo</h3>\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"email\"\r\n        //             placeholder=\"Email address\"\r\n        //             ref={email}\r\n        //             id=\"email\"\r\n        //         />\r\n        //         <input\r\n        //             className={classes.Input}\r\n        //             type=\"password\"\r\n        //             placeholder=\"Password\"\r\n        //             ref={password}\r\n        //             id=\"password\"\r\n\r\n        //         />\r\n        //         <div className={classes.ButtonDiv}>\r\n        //             <LoginButton type=\"submit\"/>\r\n        //         </div>\r\n        //         <div className={classes.HyperlinkDiv}>\r\n        //             <a href=\"/forgot-password\" className={classes.Hyperlink}>\r\n        //             Forgot Password\r\n        //             </a>\r\n        //         </div>\r\n        //     </form>\r\n        // </div>\r\n        //KD's Code\r\n        <div className={classes.Content}>\r\n            <CardForm onSubmit = { handleSubmit }>\r\n                <h3>SmartCTLogo</h3>\r\n                <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange = {e => setEmail(e.target.value)} \r\n                    id=\"email\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange = {e => setPassword(e.target.value)} \r\n                    id=\"password\"\r\n\r\n                />\r\n                <div className={classes.ButtonDiv}>\r\n                    <LoginButton type=\"submit\"/>\r\n                </div>\r\n                <div className={classes.HyperlinkDiv}>\r\n                    <a href=\"/admin-forgot\" className={classes.Hyperlink}>\r\n                    Forgot Password\r\n                    </a>\r\n                </div>\r\n            </CardForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["426","427"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["428"],"import React, { useEffect, useState, useParams } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\n\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport classes from './AdminProjects.module.css';\r\n\r\nconst AdminProjects = ( props ) => {\r\n    const [projects, setProjects] = useState();    \r\n    // const { handle } = useParams();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    //const string = 'watch?v=S_mgSHCWCmA';\r\n    console.log(projects);\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProjects}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Projects</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project ID</th>\r\n                            <th>Project Title</th>\r\n                            <th>Location</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Updated at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {projects && projects.map(project => (\r\n                        <tr key={project._id}>\r\n                            <td>{project._id}</td>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.location}</td>\r\n                            <td>{project.status}</td>\r\n                            <td>{format(project.createdAt)}</td>\r\n                            <td>{format(project.updatedAt)}</td>\r\n                            <td>\r\n                                <Link to={'/admin-project/' + project._id}>Click here</Link>\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-projects'>\r\n                        <button className={classes.Button}>Create Projects</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProjects;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["429","430","431","432","433"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProjects.module.css';\r\n\r\nconst AdminCreateProjects = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProject = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.post('/api/projects', createProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProjectsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProjectsContentDiv}>\r\n                <form className={classes.AdminCreateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProjectsFormDiv}>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.userName && <p className={classes.InputValidation}>{errors.userName.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProjectsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    )\r\n}\r\n\r\nexport default AdminCreateProjects;\r\n\r\n// const AdminCreateProjects = () => {\r\n//     const { aUser } = useContext(Context);\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: '',\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const {...data} = values;\r\n\r\n//             console.log('Form data', values);\r\n//             axios.post('/api/projects/', values);\r\n//                 // .catch(err => {\r\n//                 //     console.log('Error: ', err);\r\n//                 // });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n    \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <form className={classes.AdminCreateProjectsForm} onSubmit={formik.handleSubmit}>\r\n//                     <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='User'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.userName}\r\n//                                 disable\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Project Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Project Title'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProjectsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;\r\n\r\n// import React from 'react';\r\n// import { Formik, Form, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// import CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\n// import AdminLayout from '../AdminLayout/AdminLayout';\r\n// import Input from '../../../UI/Input/Input';\r\n// import FormikInput from '../../../UI/Input/FormikInput/FormikInput';\r\n// import SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\n// import CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\n\r\n// import classes from './AdminCreateProjects.module.css';\r\n// import axios from 'axios';\r\n\r\n\r\n// const initialValues = {\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     location: ''\r\n// };\r\n\r\n// const onSubmit = async (values) => {\r\n//     console.log('Form values', values);\r\n\r\n//     const {...data} = values;\r\n//     const res = await axios.post('/api/projects', data)\r\n//         .catch(err => {\r\n//             console.log('Error: ', err.res.data);\r\n//         });\r\n// };\r\n\r\n// // const validate = values => {\r\n// //     let errors ={};\r\n\r\n// //     if (!values.title) errors.title = \"Required\";\r\n// //     if (!values.description) errors.description = \"Required\";\r\n// //     if (!values.date) errors.date = \"Required\";\r\n// //     if (!values.location) errors.location = \"Required\";\r\n\r\n// //     return errors;\r\n// // }\r\n\r\n// const validationSchema = Yup.object({\r\n//     title: Yup.string().required('Required'),\r\n//     description: Yup.string().required('Required'),\r\n//     date: Yup.string().required('Required'),\r\n//     location: Yup.string().required('Required')\r\n// });\r\n\r\n// const AdminCreateProjects = ( props ) => {\r\n//     // const formik = useFormik({\r\n//     //     initialValues,\r\n//     //     onSubmit,\r\n//     //     validationSchema\r\n//     // });\r\n\r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProjectsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                 >\r\n//                     <Form className={classes.AdminCreateProjectsForm}>\r\n//                         <div className={classes.AdminCreateProjectsFormDiv}>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Title\"\r\n//                                     id=\"title\"\r\n//                                     name=\"title\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"title\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Project Description</label>\r\n//                                 <FormikInput\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Project Description\"\r\n//                                     id=\"description\"\r\n//                                     name=\"description\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"description\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>When</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Date\"\r\n//                                     id=\"date\"\r\n//                                     name=\"date\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"date\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                             <div className={classes.AdminCreateProjectsFormInput}>\r\n//                                 <label>Where</label>\r\n//                                 <FormikInput \r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Location\"\r\n//                                     id=\"location\"\r\n//                                     name=\"location\"\r\n//                                 />\r\n//                                 <ErrorMessage name=\"location\">\r\n//                                     {\r\n//                                         errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n//                                     }\r\n//                                 </ErrorMessage>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <SubmitButton />\r\n//                             <CancelButton />\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n            \r\n//         </AdminLayout>\r\n//     );\r\n// };\r\n\r\n// export default AdminCreateProjects;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["434","435","436","437"],"import React, { useContext, useState } from 'react';\r\n// import { useFormik } from 'formik';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Input from '../../../UI/Input/Input';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminCreateProposals.module.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminCreateProposals = () => {\r\n    const { aUser } = useContext(Context);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const coverImage = '';\r\n\r\n        const createProposal = {\r\n            userName: data.userName,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage,\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            createProposal.coverImage = res.data.secure_url;\r\n            // console.log(data);\r\n\r\n            try {\r\n                const res = await axios.post('/api/proposals/', createProposal);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data);\r\n        // console.log('data-image' + data.coverImage[0]);\r\n    }\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminCreateProposalsHeader}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Proposals</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminCreateProposalsContentDiv}>\r\n                <form className={classes.AdminCreateProposalForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminCreateProposalFormDiv}>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Username</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='userName'\r\n                                name='userName'\r\n                                placeholder='Username'\r\n                                defaultValue={aUser.data.user.username}\r\n                                ref={register}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Proposal Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Proposal Title'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Description</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Location</label>\r\n                            <input  \r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminCreateProposalsFormInput}>\r\n                            <label>Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <SubmitButton />\r\n                        <CancelButton />\r\n                    </div>\r\n                </form>\r\n                <div className={classes.QuoteDiv}>\r\n                    <p className={classes.Quote}></p>\r\n                </div>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [ coverImage, setCoverImage ] = useState()\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: ''\r\n//         },\r\n//         onSubmit: values => {\r\n\r\n//             let data = new FormData();\r\n//             data.append('coverImage', values.coverImage);\r\n\r\n//             console.log('Form data', values);\r\n//             console.log({\r\n//                 fileName: values.file.name,\r\n//             });\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n\r\n//     return(\r\n        // <AdminLayout>\r\n        //     <div className={classes.AdminCreateProposalsHeader}>\r\n        //         <CardHeader>\r\n        //             <h2 className={classes.Text}>Proposals</h2>\r\n        //         </CardHeader>\r\n        //     </div>\r\n        //     <div className={classes.AdminCreateProposalsContentDiv}>\r\n        //         <form className={classes.AdminCreateProposalForm} onSubmit={formik.handleSubmit}>\r\n        //             <div className={classes.AdminCreateProposalFormDiv}>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Username</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='userName'\r\n        //                         name='userName'\r\n        //                         placeholder='Username'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={aUser.user.username}\r\n        //                     />\r\n        //                     { formik.touched.userName && formik.errors.userName ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n        //                         ) : null }\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Proposal Title</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='title'\r\n        //                         name='title'\r\n        //                         placeholder='Proposal Title'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.title}\r\n        //                     />\r\n        //                     { formik.touched.title && formik.errors.title ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Description</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='description'\r\n        //                         name='description'\r\n        //                         placeholder='Description'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.description}\r\n        //                     />\r\n        //                     { formik.touched.description && formik.errors.description ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='text'\r\n        //                         id='location'\r\n        //                         name='location'\r\n        //                         placeholder='Location'\r\n        //                         onChange={formik.handleChange}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.location}\r\n        //                     />\r\n        //                     { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null}\r\n        //                 </div>\r\n        //                 <div className={classes.AdminCreateProposalsFormInput}>\r\n        //                     <label>Location</label>\r\n        //                     <Input\r\n        //                         type='file'\r\n        //                         id='coverImage'\r\n        //                         name='coverImage'\r\n        //                         placeholder='Location'\r\n        //                         onChange={(event) => {\r\n        //                             setCoverImage('coverImage', event.currentTarget.files[0]);\r\n        //                         }}\r\n        //                         onBlur={formik.handleBlur}\r\n        //                         value={formik.values.coverImage}\r\n        //                     />\r\n        //                     {/* { formik.touched.location && formik.errors.location ? (\r\n        //                         <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n        //                         ) : null} */}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className={classes.ButtonDiv}>\r\n        //                 <SubmitButton />\r\n        //                 <CancelButton />\r\n        //             </div>\r\n        //         </form>\r\n        //         <div className={classes.QuoteDiv}>\r\n        //             <p className={classes.Quote}>{messageCap}</p>\r\n        //         </div>\r\n        //     </div>\r\n        //  </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n\r\n// const AdminCreateProposals = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     // const [userName, setUserName] = useState('');\r\n//     // const [title, setTitle] = useState('');\r\n//     // const [description, setDescription] = useState('');\r\n//     // const [location, setLocation] = useState('');\r\n//     // const [message, setMessage] = useState('');\r\n//     // const [coverImage, setCoverImage] = useState(null);\r\n\r\n//     // const onChangeFile = e => {\r\n//     //     setCoverImage(e.target.files[0]);\r\n//     // }\r\n\r\n//     // const changeOnClick = (e) => {\r\n//     //     e.preventDefault();\r\n\r\n//     //     const formData = new FormData();\r\n//     //     formData.append('userName', userName);\r\n//     //     formData.append('title', title);\r\n//     //     formData.append('description', description);\r\n//     //     formData.append('location', location);\r\n//     //     formData.append('coverImage', coverImage);\r\n\r\n//     //     setUserName('');\r\n//     //     setTitle('');\r\n//     //     setDescription('');\r\n//     //     setLocation('');\r\n        \r\n//     //     console.log(formData);\r\n//     // }\r\n\r\n//     const validationSchema = Yup.object({\r\n//         userName: Yup.string().required('Required!'),\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             userName: aUser.user.username,\r\n//             title: '',\r\n//             description: '',\r\n//             location: '',\r\n//             coverImage: '',\r\n//         },\r\n//         onSubmit: values => {\r\n//             //const formData = new FormData();\r\n//             //formData.append('coverImage', coverImage);\r\n//             axios.post('/api/proposals', values);\r\n//             console.log(values);\r\n//             //console.log(formData)\r\n//             //const formData = await new FormData();\r\n\r\n//             // formData.append('userName', values.userName);\r\n//             // formData.append('title', title);\r\n//             // formData.append('description', description);\r\n//             // formData.append('location', location);\r\n\r\n//             // setUserName('');\r\n//             // setTitle('');\r\n//             // setDescription('');\r\n//             // setLocation('');\r\n\r\n//             // axios.post('/api/proposals', formData)\r\n//             //     .then((res) => setMessage(res.data))\r\n//             //     .catch((err) => {\r\n//             //         console.log(err);\r\n//             // });\r\n//             // console.log(userName);\r\n//         },\r\n//         validationSchema\r\n//     });\r\n\r\n//     const messageCap = '“When we succeed, we succeed because of our individual initiative, but also because we do things together.” -Barack Obama';\r\n\r\n//     //console.log(aUser.user.username);\r\n//     //console.log('Form values', formik.values); \r\n\r\n//     return(\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminCreateProposalsHeader}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Proposals</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminCreateProposalsContentDiv}>\r\n//                 <form className={classes.AdminCreateProposalForm} onSubmit={formik.onSubmit}>\r\n//                     <div className={classes.AdminCreateProposalFormDiv}>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Username</label>\r\n//                             <Input\r\n//                                 className={classes.Input}\r\n//                                 type='text'\r\n//                                 id='userName'\r\n//                                 name='userName'\r\n//                                 placeholder='Username'\r\n//                                 //onChange={(e) => setUserName(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={aUser.user.username}\r\n//                             />\r\n//                             { formik.touched.userName && formik.errors.userName ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.userName}</div>\r\n//                                 ) : null }\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Title</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='title'\r\n//                                 name='title'\r\n//                                 placeholder='Proposal Title'\r\n//                                 //onChange={(e) => setTitle(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.title}\r\n//                             />\r\n//                             {/* { formik.touched.title && formik.errors.title ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.title}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Description</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='description'\r\n//                                 name='description'\r\n//                                 placeholder='Description'\r\n//                                 // onChange={(e) => setDescription(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.description}\r\n//                             />\r\n//                             {/* { formik.touched.description && formik.errors.description ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.description}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Location</label>\r\n//                             <Input\r\n//                                 type='text'\r\n//                                 id='location'\r\n//                                 name='location'\r\n//                                 placeholder='Location'\r\n//                                 // onChange={(e) => setLocation(e.target.value)}\r\n//                                 onChange={formik.handleChange}\r\n//                                 onBlur={formik.handleBlur}\r\n//                                 value={formik.values.location}\r\n//                             />\r\n//                             {/* { formik.touched.location && formik.errors.location ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.location}</div>\r\n//                                 ) : null} */}\r\n//                         </div>\r\n//                         {/* <div className={classes.AdminCreateProposalsFormInput}>\r\n//                             <label>Proposal Image</label>\r\n//                             <Input\r\n//                                 type='file'\r\n//                                 id='coverImage'\r\n//                                 name='coverImage'\r\n//                                 placeholder='Insert Photo'\r\n//                                 onChange={onChangeFile}\r\n//                                 // onChange={e => {\r\n//                                 //     formik.handleChange;\r\n//                                 //     setFilename('coverImage', e.target.files[0]);\r\n//                                 // }}\r\n//                                 // value={formik.values.coverImage}\r\n//                             />\r\n//                             { formik.touched.coverImage && formik.errors.coverImage ? (\r\n//                                 <div className={classes.InputValidation}>{formik.errors.coverImage}</div>\r\n//                                 ) : null}\r\n//                         </div> */}\r\n//                     </div>\r\n//                     <div className={classes.ButtonDiv}>\r\n//                         <SubmitButton />\r\n//                         <CancelButton />\r\n//                     </div>\r\n//                 </form>\r\n//                 <div className={classes.QuoteDiv}>\r\n//                     <p className={classes.Quote}>{messageCap}</p>\r\n//                 </div>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminCreateProposals;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["438","439"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachReport.module.css\";\r\n\r\nconst AdminEachReport = () => {\r\n  const [currentReport, setCurrentReport] = useState([]);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findReport = async () => {\r\n      const response = await fetch('/api/reports/' + params.id);\r\n      const responseData = await response.json();\r\n \r\n      setCurrentReport(responseData.data.report);\r\n    }\r\n    findReport();\r\n  }, []);\r\n\r\n  const confirmReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Confirmed'\r\n    });\r\n    console.log(res);\r\n  };\r\n\r\n  const cancelReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Cancelled'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const resolveReport = async () => {\r\n    const res = await axios.patch('/api/reports/' + params.id, {\r\n      status: 'Resolved'\r\n    });\r\n    console.log(res);\r\n  }\r\n\r\n  const deleteReport = async () => {\r\n    const res = await axios.delete('/api/reports/' + params.id);\r\n    console.log('Delete Reports');\r\n  }\r\n\r\n  //console.log(currentReport);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachReport}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Reports</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ReportDiv}>\r\n        <h3 className={classes.TitleText}>{currentReport.title}</h3>\r\n        <div className={classes.ReportInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentReport.description}\r\n            </p>\r\n          </div>\r\n          <p>Image Source</p>\r\n        </div>\r\n        <div className={classes.Gallery}>\r\n            <h5>Image Placeholder</h5>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={confirmReport}>Confirm</button>\r\n          <button className={classes.Button} onClick={cancelReport}>Cancel</button>\r\n          <button className={classes.Button} onClick={resolveReport}>Resolved</button>\r\n          <button className={classes.Button} onClick={deleteReport}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachReport;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["440","441"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProposal.module.css\";\r\n\r\nconst AdminEachProposal = () => {\r\n  const [currentProposal, setCurrentProposal] = useState([]);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProposal = async () => {\r\n      const response = await fetch('/api/proposals/' + params.id);\r\n      const responseData = await response.json();\r\n\r\n      setCurrentProposal(responseData.data.proposal);\r\n    }\r\n    findProposal();\r\n  }, []);\r\n\r\n  \r\n  const approveProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Approved'\r\n    });\r\n  };\r\n\r\n  const rejectProposal = () => {\r\n    axios.patch('/api/proposals/' + params.id, {\r\n      status: 'Rejected'\r\n    });\r\n  };\r\n\r\n  const deleteProposal = () => {\r\n    axios.delete('/api/proposals/' + params.id);\r\n    console.log('Delete')\r\n  };\r\n\r\n  const upVoteProposal = () => {\r\n    axios.patch('/api/proposals/upVote/' + params.id);\r\n    console.log('Upvote');\r\n  }\r\n\r\n  const downVoteProposals = () => {\r\n    axios.patch('/api/proposals/downVote/' + params.id);\r\n    console.log('Downvote');\r\n  }\r\n  //console.log(currentProposal.coverImage);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProposals}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Proposals</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProposalDiv}>\r\n        <h3 className={classes.TitleText}>{currentProposal.title}</h3>\r\n        <div className={classes.ProposalInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n              {currentProposal.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProposal.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.VoteDiv}>\r\n        <button className={classes.VoteButton} onClick={upVoteProposal}>Upvote</button>\r\n        <button className={classes.VoteButton} onClick={downVoteProposals}>Downvote</button>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={approveProposal}>Approve</button>\r\n          <button className={classes.Button} onClick={rejectProposal}>Reject</button>\r\n          <button className={classes.Button} onClick={deleteProposal}>Delete</button>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProposal;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["442","443"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport Tables from '../../../UI/Tables/Tables';\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\n\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport classes from './AdminProposals.module.css';\r\n\r\nconst AdminProposals = () => {\r\n    //Without AXIOS\r\n    const [proposals, setProposals] = useState();\r\n    \r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('api/proposals');\r\n            \r\n            const responseData = await response.json();\r\n\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const string = 'watch?v=S_mgSHCWCmA';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AdminLayout>\r\n                <div className={classes.AdminProposals}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Proposals</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                <Tables>\r\n                    <thead>\r\n                        <tr>            \r\n                            <th>ID</th>  \r\n                            <th>Title</th>\r\n                            <th>Location</th>\r\n                            <th>Upvote</th>\r\n                            <th>Downvote</th>\r\n                            <th>Status</th>\r\n                            <th>Created at</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {proposals && proposals.map((proposal) => (\r\n                        <tr key={proposal._id}>\r\n                            <td>{proposal._id}</td>\r\n                            <td>{proposal.title}</td>\r\n                            <td>{proposal.location}</td>\r\n                            <td>{proposal.upvote.length}</td>\r\n                            <td>{proposal.downvote.length}</td>\r\n                            <td>{proposal.status}</td>\r\n                            <td>{proposal.createdAt}</td>\r\n                            <td><Link to={'/admin-proposal/' + proposal._id}>Click here</Link></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Tables>\r\n                <div className={classes.ButtonDiv}>\r\n                    <Link to='/admin-create-proposals'>\r\n                        <button className={classes.Button}>Create Proposals</button>\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminProposals;","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["444","445","446","447","448"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CardHeader from \"../../../UI/Cards/CardHeader/CardHeader\";\r\nimport AdminLayout from \"../AdminLayout/AdminLayout\";\r\nimport classes from \"./AdminEachProject.module.css\";\r\n\r\nconst AdminEachProject = () => {\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const findProject = async () => {\r\n      const response = await fetch('/api/projects/' + params.id);\r\n      const responseData = await response.json();\r\n      //console.log(responseData);\r\n      setCurrentProject(responseData.data.project);\r\n    }\r\n    findProject();\r\n  }, []);\r\n \r\n\r\n  const accomplished = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Accomplished'\r\n    });\r\n    console.log(response);\r\n  };\r\n\r\n  const ongoing = async () => {\r\n    const response = await axios.patch('/api/projects/' + params.id, {\r\n      status: 'Ongoing'\r\n    });\r\n    console.log(response);\r\n  };\r\n  \r\n  console.log(currentProject.coverImage);\r\n  return (\r\n    <AdminLayout>\r\n      <div className={classes.AdminEachProject}>\r\n        <CardHeader>\r\n          <h2 className={classes.Text}>Projects</h2>\r\n        </CardHeader>\r\n      </div>\r\n      <div className={classes.ProjectDiv}>\r\n        <h3 className={classes.TitleText}>{currentProject.title}</h3>\r\n        <div className={classes.ProjectInfo}>\r\n          <div className={classes.DescriptionContainer}>\r\n            <p className={classes.ParagraphText}>\r\n             {currentProject.description}\r\n            </p>\r\n          </div>\r\n          <div className={classes.Gallery}>\r\n            <img src={currentProject.coverImage} className={classes.Image} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n          <button className={classes.Button} onClick={ongoing} disabled={disable}>Ongoing</button>\r\n          <button className={classes.Button} onClick={accomplished}>Accomplished</button>\r\n          <Link to={'/admin-update-project/' + params.id}>\r\n            <button className={classes.Button}>Update</button>\r\n          </Link>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminEachProject;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport Input from '../../../UI/Input/Input';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport SubmitButton from '../../../UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../UI/Buttons/CancelButton/CancelButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './AdminUpdateProject.module.css';\r\n\r\n\r\nconst AdminUpdateProject = () => {\r\n    const { aUser } = useContext(Context);\r\n    \r\n    const [currentProject, setCurrentProject] = useState([]);\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const findProject = async () => {\r\n          const response = await fetch('/api/projects/' + params.id);\r\n          const responseData = await response.json();\r\n          //console.log(responseData);\r\n          setCurrentProject(responseData.data.project);\r\n        }\r\n        findProject();\r\n    }, []);\r\n\r\n    const defaultValues = {\r\n        title: currentProject.title,\r\n        description: currentProject.description,\r\n        location: currentProject.location,\r\n        coverImage: currentProject.coverImage\r\n    }\r\n\r\n    //console.log(currentProject.coverImage);\r\n\r\n    const { register, handleSubmit, errors, reset, control } = useForm({ defaultValues });\r\n    //console.log(currentProject);\r\n    // const preloadedValues = {\r\n    //     title: currentProject.title,\r\n    //     description: currentProject.description,\r\n    //     location: currentProject.location,\r\n    //     coverImage: currentProject.coverImage\r\n    // }\r\n\r\n\r\n    // const { register, handleSubmit, errors } = useForm({\r\n    //     defaultValue: preloadedValues\r\n    // });\r\n\r\n      const onSubmit = async (data) => {\r\n        console.log(data);\r\n        const coverImage = '';\r\n\r\n        const updateProject = {\r\n            // userId: aUser.data.user.userId,\r\n            // userName: aUser.data.user.userName,\r\n            // userType: aUser.data.user.userType,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            coverImage\r\n        };\r\n\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            updateProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.put(`/api/update-projects/${params.id}`, updateProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated',\r\n                    text: 'Proposal submitted'\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n        }\r\n\r\n        console.log(updateProject);\r\n\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    // console.log(currentProject);\r\n    return (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProjects}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminUpdateProjectsContentDiv}>\r\n                <form className={classes.AdminUpdateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminUpdateProjectsFormDiv}>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                defaultValue={defaultValues.title}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                defaultValue={defaultValues.description}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                defaultValue={defaultValues.location}\r\n                                readOnly\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Cover Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                files={defaultValues.coverImage}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n                        <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n                            console.log('Button');\r\n                            reset({ defaultValues })\r\n                        }}>Reset Data</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default AdminUpdateProject;\r\n\r\n// const AdminUpdateProject = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [userId, setUserId] = useState();\r\n//     const [redirect, setRedirect] = useState(false);\r\n//     const [file, setFile] = useState(null);\r\n//     const userType = aUser.data.user.userType;\r\n\r\n//     const [currentProject, setCurrentProject] = useState([]);\r\n//     const [formValues, setFormValues] = useState(null);\r\n\r\n//     const params = useParams();\r\n\r\n//     useEffect(() => {\r\n//         const findProject = async () => {\r\n//           const response = await fetch('/api/projects/' + params.id);\r\n//           const responseData = await response.json();\r\n//           console.log(responseData);\r\n//           setCurrentProject(responseData.data.project);\r\n//         }\r\n//         findProject();\r\n//     }, []);\r\n\r\n//     const initialValues = {\r\n//         userId: aUser.data.user._id,\r\n//         userName: aUser.data.user.username,\r\n//         title: '',\r\n//         description: '',\r\n//         location: ''\r\n//     };\r\n    \r\n//     const validationSchema = Yup.object({\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const onSubmit = values => {\r\n//         // console.log('Form values', values);\r\n//         // console.log('ID: ', values._id)\r\n\r\n//         console.log(values);\r\n\r\n//         //axios.patch('/api/projects/' + params.id, values);\r\n\r\n//     }\r\n   \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminProjects}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminUpdateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={formValues || initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                     enableReinitialize>\r\n//                     <Form className={classes.AdminUpdateProjectsForm}>\r\n//                         <div className={classes.AdminUpdateProjectsFormDiv}>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <Field\r\n//                                     className={classes.Input}\r\n//                                     type='text'\r\n//                                     id='title'\r\n//                                     name='title'\r\n//                                     placeholder='Project Title'\r\n//                                 />\r\n//                                 <ErrorMessage name='title' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Description</label>\r\n//                                 <Field\r\n//                                     className={classes.Textarea}\r\n//                                     type='text'\r\n//                                     component='textarea'\r\n//                                     rows={4}\r\n//                                     id='description'\r\n//                                     name='description'\r\n//                                     placeholder='Description'\r\n//                                 />\r\n//                                 <ErrorMessage name='description' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     className={classes.FormikInput}\r\n//                                     type='text'\r\n//                                     id='location'\r\n//                                     name='location'\r\n//                                     placeholder='Location'\r\n//                                 />\r\n//                                 <ErrorMessage name='location' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     type='file'\r\n//                                     id='file'\r\n//                                     name='file'\r\n//                                     placeholder='File'\r\n//                                 />\r\n//                                 <ErrorMessage name='file' />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n//                             <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n//                                 console.log('Button');\r\n//                                 setFormValues(currentProject);\r\n//                             }}>Load Data</button>\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminUpdateProject;","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["463","464"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ProposalNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ProposalNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg proposalNavbar-mainbg\">\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"proposalnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Approved\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                Rejected\r\n            </li>\r\n            <li className=\"proposalnav-item\">\r\n                My Proposals\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ProposalNav);","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["465","466"],"import React from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport './ReportsNav.css';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst ReportsNav =() => (\r\n    <nav className=\"navbar navbar-expand-lg reportNavbar-mainbg\">\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          type=\"button\" data-toggle=\"dropdown\" data-target=\"#reportNavbarSupportedContent\" aria-controls=\"reportNavbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <ul className=\"navbar-nav m-auto\">\r\n            <li className=\"reportnav-item\">\r\n                All\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Confirmed\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Cancelled\r\n            </li>\r\n            <li className=\"reportnav-item\">\r\n                Resolved\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default withRouter(ReportsNav);","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["467","468","469"],"import React from 'react';\r\nimport { Row, Col, Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './CitizenViewReport.css';\r\n\r\nconst CitizenViewReport = () => (\r\n    <>\r\n        <Container className = 'citizenViewReport-container'>\r\n            <Row className=\"citizenViewReport-header\">\r\n                <Row>\r\n                    <Col claasName=\"citizenViewReport-title\">\r\n                    <h2>Ahay</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-auth\">\r\n                    <Col>Reporter: IC</Col>\r\n                    <Col>Submitted on: September 22, 2021</Col>\r\n                </Row>\r\n            </Row>\r\n            <Row className=\"citizenViewReport-description\">\r\n                <p>So ayun nga, nag catgirl ata yung prof namin sa klase. Di ako sure mismo kasi nakaasa lang ako sa chat namin nung oras na yun.</p>\r\n            </Row> \r\n            <Row className=\"citizenViewReport-footer\">\r\n                <Row className=\"citizenViewReport-details\">\r\n                    <Col>Where: Cainta, Rizal</Col>\r\n                    <Col>Status: Confirmed</Col>\r\n                </Row>\r\n                <Row className=\"citizenViewReport-img-container\">\r\n                    <Col className=\"citizenViewReport-img-frame\">\r\n                        <img src=\"https://imgur.com/vxihw43.png\" alt=\"Report\"></img>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n);\r\nexport default CitizenViewReport;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["470","471","472","473","474","475"],"import \"./CitizenReports.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ReportsNav from \"../../../components/Citizen/ReportsNav/ReportsNav\";\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CitizenReports = () => {\r\n    const [reports, setReports] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/reports');\r\n            const responseData = await response.json();\r\n            setReports(responseData);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deletereport = async (reportlId) => {\r\n        console.log(reportlId);\r\n        const response = await axios.delete(`/api/reports/${reportlId}`);\r\n        const refresh = await fetch('/api/reports');\r\n        const responseData = await refresh.json();\r\n        setReports(responseData.data.report);\r\n    }\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/reports');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData.data.reports);\r\n    }\r\n\r\n    const categoryConfirmed = async () => {\r\n        const response = await fetch('/api/reports/confirmed');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n    const categoryCancelled = async () => {\r\n        const response = await fetch('/api/reports/cancelled');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n    \r\n    const categoryResolved = async () => {\r\n        const response = await fetch('/api/reports/resolved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setReports(responseData);   \r\n    }\r\n\r\n\r\n    return(\r\n        <Container className='citizenreports-Container'>\r\n            <Row className='citizenreports-catbar-container'>\r\n                <Col className='citizenreports-catbar'>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryConfirmed()}>Confirmed</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryCancelled()}>Cancelled</button>\r\n                    <button className='citizenreports-catbar-item' onClick={() => categoryResolved()}>Resolved</button>\r\n                </Col>\r\n            </Row>\r\n            <Row className='citizenreports-btn-container'>\r\n                <Col className='citizenreports-btnbar'>\r\n                    <Link className='citizenreports-btn-submit' to='/citizen-submit-reports'>Submit a report</Link> \r\n                    <Link className='far fa-comment citizenreports-btn-chat' to='/citizen-chat-report'/>\r\n                </Col>\r\n            </Row>\r\n            {/*\r\n            <Row className='citizenreports-short'>\r\n                <Col className='citizenreports-img-container'>\r\n                    <img className='citizenreports-img' alt='citizenreports-img'src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Row className='citizenreports-title-container'>\r\n                        <span className='citizenreports-title'><h2>Road Damage</h2></span>\r\n                    </Row>\r\n                    <Row className='citizenreports-details'>\r\n                        <Col className='citizenreports-info-container'>\r\n                            <span className='reportInfo'>Where: Cainta Rizal</span>\r\n                            <span className='reportInfo'>Reported by: John Doe</span>\r\n                            <span className='reportInfo'>Date Submitted: September 17, 2021 11:17am</span>\r\n                        </Col>\r\n                        <Col className='citizenreports-info-status-container'>\r\n                            <span className='reportInfo'>Status: Confirmed</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row> */}\r\n            {reports && reports.map(report => (\r\n                <Row className='citizenreports-short' key={report._id}>\r\n                    <Col className='citizenreports-img-container'>\r\n                        <img className='citizenreports-img' alt='citizenreports-img'src={report.images} onClick={()=> window.open(report.images, \"_blank\")}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className='citizenreports-title-container'>\r\n                            <span className='citizenreports-title'><h2>{report.title}</h2></span>\r\n                        </Row>\r\n                        <Row className='citizenreports-details'>\r\n                            <Col className='citizenreports-info-container'>\r\n                                <span className='reportInfo'>Where: {report.location}</span>\r\n                                <span className='reportInfo'>Desc : {report.description}</span>\r\n                                <span className='reportInfo'>Reported By : {report.userName}</span>\r\n                                <span className='reportInfo'>Date Submitted: {new Date(report.createdAt).toLocaleDateString()}</span>\r\n                                {/* <span className='reportInfo'><i onClick={()=> deletereport(report._id)} className=\"fas fa-trash\"></i></span> */}\r\n\r\n                            </Col>\r\n                            <Col className='citizenreports-info-status-container'>\r\n                                <span className='reportInfo'>Status: {report.status}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            ))}\r\n        </Container>\r\n        // <div className=\"reportsContainer\">\r\n        //      <div className=\"reportsMain\">\r\n        //          <div className=\"category\">\r\n        //              <React.Fragment>\r\n        //                     <ReportsNav/> \r\n        //             </React.Fragment> \r\n        //         </div>\r\n        //         <div className=\"citizenreports-btn-container\">\r\n        //             <NavLink to=\"/citizen-submit-reports\">\r\n        //                 <button className=\"citizenreports-submitreport-btn\">Create A Report</button>\r\n        //                 </NavLink>\r\n        //             <NavLink to=\"/citizen-chat-report\">\r\n        //                 <div className='chat-icon'>\r\n        //                     <i class=\"far fa-comment\"></i>\r\n        //                 </div>\r\n        //             </NavLink>\r\n        //         </div>\r\n        //         <Row className=\"citizenreportShort\">\r\n        //                 <Col className=\"citizenreportimg-container\">\r\n        //                     <img className=\"reportImg\" alt=\"reportimg\"src=\"https://th.bing.com/th/id/OIP.YLpvvCgXD0sI6X5dg0i6UgHaE7?pid=ImgDet&rs=1\"/>\r\n        //                 </Col>\r\n        //                 <Col>\r\n        //                     <Row className='citizenreport-reportTitleContainer'>\r\n        //                         <span className=\"citizenreport-reportTitle\"><h2>Road Damage</h2></span>\r\n        //                     </Row>\r\n        //                     <Row className=\"reportDetails\">\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Where: Cainta Rizal</span>\r\n        //                             <span className=\"reportInfo\">Reported by: John Doe</span>\r\n        //                             <span className=\"reportInfo\">Date Submitted: September 17, 2021 11:17am</span>\r\n        //                         </Col>\r\n        //                         <Col className='reportInfo-container'>\r\n        //                             <span className=\"reportInfo\">Status: Confirmed</span>\r\n        //                         </Col>\r\n        //                     </Row>\r\n        //                 </Col>\r\n        //         </Row>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default CitizenReports;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["476","477"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from '../../CitizenProposals/CreateProposals/CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\nimport './CitizenSubmitReport.css';\r\n\r\nconst CitizenSubmitReport = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const reportData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                reportData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/reports', reportData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            { redirect && (<Redirect to = '/citizen-reports' />) }\r\n            <Container className=\"citizenSubmitReport-container\">\r\n                <Row>\r\n                    <div className=\"citizen-header\">\r\n                        <h1>Found a Problem? Go Submit a Report</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className=\"citizenSubmitReport-edit\">\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className=\"citizenSubmitReport-input\">\r\n                                            <label>Report Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Report Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col className=\"citizenSubmitReportQuote\">\r\n                                        <h2>Reporting a problem or an issue is your <span className=\"text-highlight\">ambag</span></h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    <Col className=\"citizenSubmitReport-input\">\r\n                                        <label>Location</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Location\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className=\"InputValidation\">{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.CitizenCreateProposalPhotoInput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"ButtonDiv\">\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>  \r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CitizenSubmitReport;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["478","479","480"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport './CitizenProposals.css';\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Context } from '../../../context/Context';\r\n\r\n\r\nconst CitizenProposals = () => {\r\n    const user = useContext(Context)\r\n    const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n    // const [proposals, setProposals] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/proposals');\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            setProposals(responseData.data.proposals);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const deleteProposal = async (proposalId) => {\r\n        console.log(proposalId);\r\n        const response = await axios.delete(`/api/proposals/${proposalId}`);\r\n        const refresh = await fetch('/api/proposals');\r\n        const responseData = await refresh.json();\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n\r\n    const getProposalId = async (proposalId) => {\r\n        console.log(proposalId);\r\n        localStorage.setItem('proposalid', proposalId);\r\n    }\r\n    \r\n    \r\n    //ALL Category\r\n    //onClick={() => categoryAll(status:lahat ng status na meron)}  initialize nalang ng local array na [\"Pending\",\"Approved\",\"Rejected\"] \r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/proposals');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData.data.proposals);\r\n    }\r\n    \r\n    //const categoryAll = async (status) =>{}\r\n    // dito icocompare mo yung local content array to all proposal status\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryApproved = async () => {\r\n        const response = await fetch('/api/proposals/approved');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProposals(responseData);\r\n        // console.log(responseData)\r\n    }\r\n\r\n    const categoryRejected = async () => {\r\n        const response = await axios.get('/api/proposals/rejected');\r\n        // const responseData = await response.json();\r\n        // console.log(response.data)\r\n        setProposals(response.data);\r\n    }\r\n    //APPROVED/REJECTED Category\r\n    //onClick={() => categoryApproved/Rejected(status:Approved/Rejected)}\r\n    //const categoryApproved/Rejected = async (status) =>{}\r\n    // dito icocompare mo yung Approved/Rejected na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n    const categoryOwn = async () => {\r\n        // const currentuserid = user.user.data.user._id;\r\n        // const useridfilter = {\r\n        //     citizenId: currentuserid,\r\n        // }\r\n        // const response = await fetch('/api/proposals', userId);\r\n        // const responseData = await response.json();\r\n        // // console.log(responseData)\r\n        // setProposals(responseData.data.proposals);\r\n        const response = await axios.get(`/api/proposals/self/${user.user.data.user._id}`);\r\n        // // const responseData = await response.json();\r\n        // console.log(response.data);\r\n        setProposals(response.data);\r\n    }\r\n    //OWN Category\r\n    //onClick={() => categoryOwn(user.data.user._id)}\r\n    //const categoryOwn = async (userId) =>{}\r\n    //dito icocompare mo ang userId mo sa lahat ng userIds na meron sa proposals\r\n    //if nag true ididisplay\r\n    console.log(user.user.data.user._id);\r\n\r\n    return(\r\n        <Container className=\"proposalsContainer\">\r\n            <div className=\"proposalsMain\">\r\n                <Row className='citizenproposals-catbar-container'>\r\n                    <Col className='citizenproposals-catbar'> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryAll()}>All</button> \r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryApproved()}>Approved</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryRejected()}>Rejected</button>\r\n                        <button className='citizenproposals-catbar-item' onClick={() => categoryOwn()}>My Proposals</button>\r\n                    </Col>\r\n                </Row>\r\n                {/* <div className=\"proposalsCreateBtnContainer\"> */}\r\n                        <NavLink to=\"/citizen-create-proposals\">\r\n                            <button className=\"proposalCreate\">Create Proposal</button>\r\n                        </NavLink>\r\n                {/* </div> */}\r\n\r\n            {/* <div className=\"proposalShortContainer\">\r\n                <div className=\"proposalShort\">\r\n                    <div className=\"proposalTitleContainer\">\r\n                        <div className=\"proposalTitle\">\r\n                            <h2>Lorem Ipsum</h2>\r\n                        </div>\r\n                        <div className=\"proposalAuthImg\">\r\n                            <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                        </div>\r\n                        <div className=\"proposalAuth\">\r\n                            Juan Carlos\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"proposalContent\">\r\n                        <div className=\"proposalShortInfo\">\r\n                            <h2>Lorem ipsum</h2>\r\n                            <div className=\"proposalAuthContainer\">\r\n                                <div className=\"proposalAuthImg\">\r\n                                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                </div>\r\n                                <div className=\"proposalAuth\">\r\n                                    Juan Carlos\r\n                                </div>\r\n                            </div>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                                eu vulputate. </p>\r\n                            <p>Upvote: 14 </p><p> Downvote: 3</p>\r\n                        </div>\r\n                        <div className=\"proposalShortImgContainer\">\r\n                            <div className=\"proposalShortImgFrame\">\r\n                                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            {proposals && proposals.map(proposal => (\r\n                <div className=\"proposalShortContainer\" key={proposal._id}>\r\n                    <div className=\"proposalShort\">\r\n                        <div className=\"proposalTitleContainer\">\r\n                            <div className=\"proposalTitle\">\r\n                                <h2>{proposal.title}</h2>\r\n                            </div>\r\n                            <div className=\"proposalAuthImg\">\r\n                                <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                            </div>\r\n                            <div className=\"proposalAuth\">\r\n                                {proposal.userName}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"proposalContent\">\r\n                            <div className=\"proposalShortInfo\">\r\n                                <h2>{proposal.title}</h2>\r\n                                <div className=\"proposalAuthContainer\">\r\n                                    <div className=\"proposalAuthImg\">\r\n                                        <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                                    </div>\r\n                                    <div className=\"proposalAuth\">\r\n                                        {proposal.userName}\r\n                                    </div>\r\n                                </div>\r\n                                    <p>{proposal.description} </p>\r\n                                <div className=\"proposalsBody\">\r\n                                    <i className=\"fas fa-thumbs-up\"/>{proposal.upvote.length ? proposal.upvote.length : 0}\r\n                                    <i className=\"fas fa-thumbs-down\"/>{proposal.downvote.length ? proposal.downvote.length : 0}\r\n                                    <i onClick={()=> deleteProposal(proposal._id)} className=\"fas fa-trash\"></i>\r\n                                </div>\r\n                                {proposal.status === \"Rejected\" ?  \r\n                                null\r\n                                :\r\n                                <Link className='proposalsViewMore' to={`/citizen-view-proposals`} onClick={()=> getProposalId(proposal._id)}>\r\n                                    View More\r\n                                </Link>\r\n                                }\r\n                            </div>\r\n                            <div className=\"proposalShortImgContainer\">\r\n                                <div className=\"proposalShortImgFrame\">\r\n                                    <img src={proposal.images} alt=\"\" className=\"proposalImg\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>      \r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default CitizenProposals;\r\n\r\n\r\n//Backup code\r\n{/* <Row className=\"proposalShortContainer\"> gawing citizenproposals-shorts-container  dito lahat nakalagay\r\n\r\n\r\n        <Row className=\"proposalShort\">           citizenproposals-mobile-shortinfo\r\n            <Row className=\"proposalTitleContainer\">   delete\r\n                <Row className=\"proposalTitle\">          \r\n                    <h2>Lorem Ipsum</h2>               citizenproposal-mobile-shortinfo > h2\r\n                </Row>\r\n                <Col className=\"proposalAuthImg\">      citizenproposal-mobile-shortinfo > img\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </Col>\r\n                <Row className=\"proposalAuth\">Juan Carlos</Row>      citizenproposal-mobile-shortinfo > p\r\n            </Row>\r\n        </Row>\r\n\r\n\r\n\r\n    <Row className=\"proposalContent\">                   citizenproposals-shortinfo\r\n        <Row className=\"proposalShortInfo\">             delete\r\n            <h2>Lorem ipsum</h2>                        citizenproposals-shortinfo > h2\r\n            <div className=\"proposalAuthContainer\">     delete\r\n                <div className=\"proposalAuthImg\">       delete   citizenproposals-shortinfo > h2\r\n                    <img src=\"https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Author\"/>\r\n                </div>\r\n                <div className=\"proposalAuth\">          delete citizenproposals-shortinfo > h5\r\n                    <h5>Juan Carlos</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis efficitur orci et interdum vulputate. \r\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut vel euismod leo. Ut varius a magna \r\n                eu vulputate. </p>\r\n            <p>Upvote: 14 </p><p> Downvote: 3</p>       citizenproposals-shortinfo > p\r\n        </div>\r\n        <div className=\"proposalShortImgContainer\">     citizenproposals-shortinfo-img-frame\r\n            <div className=\"proposalShortImgFrame\">     citizenproposals-shortinfo-img-frame > img   \r\n                <img src=\"https://th.bing.com/th/id/R.b647d58e6001e77b9471b110f44c2641?rik=Kariecnl8cUg1g&riu=http%3a%2f%2ffilipinoaustralianjournal.com.au%2fwp-content%2fuploads%2f2016%2f03%2fphilippine-tricycles.jpg&ehk=%2fECLwkRpQ1vL3g8sFPsT8JnrucAFmfXhwjRaYgXJmxw%3d&risl=&pid=ImgRaw&r=0\" alt=\"\" className=\"proposalImg\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</Row> */}","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["481"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../../context/Context';\r\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport './CitizenProfile.css';\r\n\r\nconst CitizenProfile = () => {\r\n    const { user, dispatch } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const [logs, setLogs] = useState([]);\r\n    const [iconUpload, setIconUpload] = useState(false);\r\n    const [reports, setReports] = useState([]);\r\n    const [proposals, setProposals] = useState([]);\r\n    const [verifiedReports, setVerifiedReports] = useState([]);\r\n    const [approvedProposals, setApprovedProposals] = useState([]);\r\n    const [loading, setLoading] =  useState(true);\r\n    \r\n    const citizen = user.data.user.firstname + \" \" + user.data.user.lastname;\r\n\r\n    console.log(citizen)\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            const res = await axios.get(`/api/history/citizens/?user=${citizen}`);\r\n            setLogs(res.data);\r\n        }\r\n\r\n        const fetchReports = async () => {\r\n            const res = await axios.get(`/api/reports/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setReports(count);\r\n        }\r\n\r\n        const fetchProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.data.proposals.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setProposals(count);\r\n        }\r\n\r\n        const fetchVerifiedReports = async () => {\r\n            const res = await axios.get(`/api/reports/confirmed/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n            setVerifiedReports(count);\r\n        }\r\n\r\n        const fetchApprovedProposals = async () => {\r\n            const res = await axios.get(`/api/proposals/approved/?user=${citizen}`);\r\n            let count = 0\r\n            \r\n            res.data.forEach(() => {\r\n            count += 1;\r\n            })\r\n\r\n            setApprovedProposals(count);\r\n        }\r\n\r\n        fetchLogs();\r\n        fetchReports();\r\n        fetchProposals();\r\n        fetchVerifiedReports();\r\n        fetchApprovedProposals();\r\n    }, [])\r\n\r\n    const setIconTrue = () => {\r\n        setIconUpload(true);\r\n    }\r\n\r\n    const showLogs = async () => {\r\n        Swal.fire({\r\n            icon: 'info',\r\n            title: 'Activity Logs',\r\n            html: `${\r\n                logs.map((L) => {\r\n                const date = new Date(L.createdAt).toLocaleDateString();\r\n                return \"<p style ='text-align: justify'>Timestamp: \" + date + \" Reason: \" + L.reason + \" By: \" + L.user + \"<br/></p>\";\r\n            }).join('')}`,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({ type: \"UPDATE_START\" });\r\n        const updateAccount = {\r\n            profilePic,\r\n            token: user.token,\r\n        }\r\n        if (file) {\r\n            setLoading(false);\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                updateAccount.profilePic = res.data.secure_url;\r\n\r\n                console.log(file.name);\r\n                try {\r\n                    const res = await axios.put(\"/api/citizen/\" + user.data.user._id, updateAccount);\r\n                    dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Updated!',\r\n                        text: 'Profile Picture Changed',\r\n                    });\r\n                    setLoading(true);\r\n                    setIconUpload(false);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    dispatch({ type: \"UPDATE_FAILURE\" })\r\n                    setLoading(true);\r\n                }\r\n            } catch (err) {\r\n                setLoading(true);\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n            setIconUpload(false);\r\n            setProfilePic(\"\");\r\n            setLoading(true);\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        {loading ? (\r\n        <Container className = 'citizenProfile-container'>\r\n            <div className = 'citizenAccountImg-shadow'>\r\n                <div className = 'citizenAccountImg'>\r\n                    <img src= {file ? (URL.createObjectURL(file)) : `${user.data.user.profilePic}`} alt=\"\" ></img>\r\n                </div>\r\n            </div>\r\n            \r\n            {iconUpload === false &&\r\n                <>\r\n                    <div className = 'citizenProfile-changeLink'>\r\n                        <p onClick = { setIconTrue }>Change Profile Picture?</p>\r\n                    </div>\r\n\r\n                    <div className=\"citizenProfile-changeImg\">\r\n                        <Form.Label ><i className=\"fas fa-history\" onClick = { showLogs }></i></Form.Label>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {iconUpload &&\r\n                <div className=\"citizenProfile-changeImg\">\r\n                    <Form.Label  htmlFor=\"iconImg\"><i className=\"fas fa-image\"></i></Form.Label>\r\n\r\n                    <ReactTooltip id=\"infoBtn\" place=\"top\" effect=\"solid\">\r\n                        If button is clicked and not submitting please input photo again. . .\r\n                    </ReactTooltip>\r\n                    <Form.Label  data-tip data-for=\"infoBtn\" htmlFor=\"btnImg\"><i className=\"fas fa-upload\"></i></Form.Label>\r\n                </div>\r\n            }\r\n\r\n            <div  className = 'col-md-10 offset-md-1' id = 'citizenProfile-body'>\r\n                <div className = 'citizenProfile-name'> \r\n                     <p>{user.data.user.firstname + \" \" + user.data.user.middlename + \" \" + user.data.user.lastname}</p>\r\n                 </div>\r\n                 <div className = 'citizenProfile-statsDesktop'>\r\n                    <Row>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Col className = 'citizenProfile-Badge'>\r\n                            <h4>Badge</h4>\r\n                            {verifiedReports === 5 &&\r\n                            <>\r\n                                <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached five (5) verified reports!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                </div>\r\n                            </>\r\n                            }\r\n\r\n                            {approvedProposals === 10 &&\r\n                            <>\r\n                                <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                    You have reached ten (10) verified proposals!\r\n                                </ReactTooltip>\r\n                                <div className = 'citizenProfile-BadgeImg'>\r\n                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                </div>\r\n                            </>\r\n                            }\r\n                        </Col>\r\n                        ) : (<></>)}\r\n                        <Col>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Proposals Created</h4>\r\n                                    <p>{ proposals }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Approved Proposals</h4>\r\n                                    <p>{ approvedProposals }</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Verified Reports</h4>\r\n                                    <p>{ verifiedReports }</p>\r\n                                </Col>\r\n                                <Col className = 'citizenProfile-Stats'>\r\n                                    <h4>Reports Created</h4>\r\n                                    <p>{ reports }</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className = 'citizenProfile-statsMobile'>\r\n                    <Col>\r\n                        {approvedProposals === 10 || verifiedReports === 5 ? (\r\n                            <Row className = 'citizenProfile-Badge'>\r\n                                <Col>\r\n                                    <Row>\r\n                                        <Row><h4>Badge</h4></Row>\r\n                                        {verifiedReports === 5 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"reportsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached five (5) verified reports!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                <img data-tip data-for=\"reportsBadge\" src='https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/lxegqxd9012mtsfbr0wk.png' alt=\"badge\"></img> \r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n\r\n                                        {approvedProposals === 10 &&\r\n                                        <>\r\n                                            <ReactTooltip id=\"proposalsBadge\" place=\"top\" effect=\"solid\">\r\n                                                You have reached ten (10) verified proposals!\r\n                                            </ReactTooltip>\r\n                                            <div className = 'citizenProfile-BadgeImg'>\r\n                                                    <img data-tip data-for=\"proposalsBadge\" src=\"https://res.cloudinary.com/karlstorage/image/upload/v1633067410/free-img/swr8qrfxityadpnchoft.png\" alt=\"badge\"></img>\r\n                                            </div>\r\n                                        </>\r\n                                        }\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (<></>)}\r\n                        \r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Proposals Created</h4></Row>\r\n                                <Row><p>{ proposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                            <Row><h4>Approved Proposals</h4></Row>\r\n                            <Row><p>{ approvedProposals }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Verified Reports</h4></Row>\r\n                                <Row><p>{ verifiedReports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className = 'citizenProfile-StatsMD'>\r\n                            <Col>\r\n                                <Row><h4>Reports Created</h4></Row>\r\n                                <Row><p>{ reports }</p></Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n            \r\n            <Form className = 'citizenProfile-edit' onSubmit = { handleSubmit }>\r\n                <h3>Personal Information</h3>\r\n                  <Form.Group>\r\n                    <input\r\n                        id=\"iconImg\"\r\n                        type=\"file\"\r\n                        name=\"citizenImg\"\r\n                        required\r\n                        style = {{display: \"none\"}}\r\n                        onChange = {(e) => setFile(e.target.files[0])}\r\n                    />\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"lname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.lastname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"fname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.firstname}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"mname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.middlename}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Suffix</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sname\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.suffix}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Sex</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"sex\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.sex}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Birth Date</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"birthday\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.birthdate}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Full Address</Form.Label>\r\n                    <Form.Control\r\n                        className='citizenProfile-input'\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        autoComplete=\"off\"\r\n                        disabled\r\n                        placeholder={user.data.user.street +\" \"+user.data.user.barangay +\" \"+user.data.user.city +\" \"+user.data.user.region}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button id=\"btnImg\" type = 'submit' style={{display:'none'}}></Button>\r\n            </Form>\r\n            <Link to = '/citizen-pass-update' className = 'citizenProfile-passwordUpdate'><i className=\"editIcon far fa-edit\"></i></Link>\r\n        </Container>\r\n        ) : (\r\n            <div className = 'citizenProfileLoading'>\r\n              <h2>Processing Please Wait</h2>\r\n              <div>\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"primary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"success\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"danger\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"warning\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"light\" />\r\n                <ReactBootStrap.Spinner animation=\"grow\" variant=\"dark\" />\r\n              </div>\r\n            </div>\r\n        )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CitizenProfile;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["482","483"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Redirect } from 'react-router';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport CancelButton from '../../../../components/UI/Buttons/CancelButton/CancelButton';\r\nimport Swal from 'sweetalert2';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './CitizenCreateProposals.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CitizenCreateProposal = () => {\r\n    const citizenUser = useContext(Context);\r\n    const [userId, setUserId] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const userType = citizenUser.user.data.user.userType;\r\n\r\n    useEffect(() => {\r\n        const getUserId = async () => {\r\n            const { user:{ data: { user: { firstname } } }} = citizenUser;\r\n            const { user:{ data: { user: { lastname } } }} = citizenUser;\r\n            let username = JSON.stringify(firstname+\" \"+lastname);\r\n            username = username.replace(/['\"]+/g, '');\r\n            setUserId(username);\r\n        }\r\n        getUserId();\r\n    },[]);\r\n\r\n    console.log(userId);  \r\n    const initialValues = {\r\n        userId: citizenUser.user.data.user._id,\r\n        userName: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        status:'Pending',\r\n    \r\n    };\r\n    \r\n    \r\n    const onSubmit = async (values) => {\r\n        console.log('Form values', values);\r\n\r\n        const userName = values.userName.replace('',userId)\r\n        const newValues = {...values, userName, userType}\r\n        const images = \"\";\r\n\r\n        const proposalData = {\r\n            description: newValues.description,\r\n            location: newValues.location,\r\n            status: newValues.status,\r\n            title: newValues.title,\r\n            userId: newValues.userId,\r\n            userName: newValues.userName,\r\n            userType: newValues.userType,\r\n            images,\r\n        }\r\n\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            data.append(\"upload_preset\", \"dev_prac\");\r\n            data.append(\"cloud_name\", \"karlstorage\");\r\n            try {\r\n                const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", data);\r\n                proposalData.images = res.data.secure_url;\r\n\r\n                try {\r\n                    const res = await axios.post('/api/proposals', proposalData).catch(err => {\r\n                        console.log('Error: ', err.res.data);\r\n                    });\r\n                    \r\n                    setRedirect(true);\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Photo is requried!',\r\n                text: 'Upload a photo',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const validationSchema = Yup.object({\r\n        userName: Yup.string(),\r\n        title: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        location: Yup.string().required(\"Required\"),\r\n    });\r\n    // console.log(citizenUser.user.data.user._id);\r\n    return(\r\n        <>\r\n            { redirect && (<Redirect to = '/citizen-proposals' />) }\r\n            <Container className={classes.CitizenCreateProposalContentContainer}>\r\n                {/* <div className = 'col-lg-10 offset-lg-1'> */}\r\n                <Row>\r\n                    <div className={classes.QuoteDiv}>\r\n                        <h1>Go create your proposal and make an impact!</h1>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form className={classes.CitizenCreateProposalForm}>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col sm={6}>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Proposal Title</label>\r\n                                            <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Proposal Title\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            />\r\n                                            <ErrorMessage name=\"title\">\r\n                                                {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>}\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <label>Description</label>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"Description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                            />\r\n                                            <ErrorMessage name=\"description\">\r\n                                                {\r\n                                                    errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                                }\r\n                                            </ErrorMessage>\r\n                                        </Row>\r\n                                        {/* <Row className={classes.CitizenCreateProposalFormInput}>\r\n                                            <FormikInput \r\n                                                type=\"text\"\r\n                                                placeholder=\"userName\"\r\n                                                id=\"userName\"\r\n                                                name=\"userName\"\r\n                                            />\r\n                                        </Row> */}\r\n                                    </Col>\r\n                                    <Col className={classes.CitizenCreateProposalHeader} sm={6}>\r\n                                            <h2>Pursue your calling </h2>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row >\r\n                                    {/* <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>When to Start Hopefully</label>\r\n                                        <FormikInput \r\n                                        type=\"text\"\r\n                                        placeholder=\"Date of Start hopefully\"\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                        />\r\n                                        <ErrorMessage name=\"date\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col> */}\r\n                                    <Col className={classes.CitizenCreateProposalFormInput}>\r\n                                        <label>Where</label>\r\n                                        <FormikInput \r\n                                            type=\"text\"\r\n                                            placeholder=\"Where\"\r\n                                            id=\"location\"\r\n                                            name=\"location\"\r\n                                        />\r\n                                        <ErrorMessage name=\"location\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className={classes.citizensubmitreportphotoinput}>\r\n                                    <Col className={classes.CitizenCreateProposalFormInput} >\r\n                                        <label style={{textAlign: 'center', marginTop: '5%'}}>Photo</label>\r\n\r\n                                        <div className = 'CitizenCreateProposalImg'>\r\n                                            {file && <img src = { (URL.createObjectURL(file)) } alt = '' onClick={()=> window.open(URL.createObjectURL(file), \"_blank\")}/>}\r\n                                        </div>\r\n\r\n                                        <label  htmlFor=\"images\"><i className=\"fas fa-image\"></i></label>\r\n\r\n                                        <Field \r\n                                            type=\"file\"\r\n                                            id=\"images\"\r\n                                            name=\"images\"\r\n                                            style={{display: 'none'}}\r\n                                            onChange = {(e) => setFile(e.target.files[0])}\r\n                                        />\r\n                                        <ErrorMessage name=\"images\">\r\n                                            {\r\n                                                errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n                                            }\r\n                                        </ErrorMessage>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={classes.ButtonDiv}>\r\n                                            <SubmitButton />\r\n                                            <CancelButton />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                        </Form>\r\n                    </Formik>    \r\n                </Row>\r\n                {/* </div> */}\r\n            </Container>\r\n        </>\r\n\r\n    //  {/* <React.Fragment> */}\r\n    //          {/* <div className={classes.CitizenCreateProposalContentDiv}> */}\r\n    //              {/* <div className={classes.QuoteDiv}> */}\r\n    //                  {/* <h1>Go create your proposal and make an impact!</h1> */}\r\n    //              {/* </div> */}\r\n\r\n    //              {/* <Formik */}\r\n    //                 {/* //  initialValues={initialValues}\r\n    //                 //  validationSchema={validationSchema}\r\n    //                 //  onSubmit={onSubmit}\r\n    //             //  > */}\r\n    //                  {/* <Form className={classes.CitizenCreateProposalForm}> */}\r\n    //                      {/* <div className={classes.CitizenCreateProposalFormDiv}> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Proposal Title</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Proposal Title\"\r\n    //                                 //  id=\"title\"\r\n    //                                 //  name=\"title\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"title\"> */}\r\n    //                                  {/* {errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>} */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Description</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Description\"\r\n    //                                 //  id=\"description\"\r\n    //                                 //  name=\"description\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"name\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>When</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"When\"\r\n    //                                 //  id=\"date\"\r\n    //                                 //  name=\"date\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"date\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                          {/* <div className={classes.CitizenCreateProposalFormInput}> */}\r\n    //                              {/* <label>Where</label> */}\r\n    //                              {/* <FormikInput  */}\r\n    //                                 {/* //  type=\"text\"\r\n    //                                 //  placeholder=\"Where\"\r\n    //                                 //  id=\"location\"\r\n    //                                 //  name=\"location\"\r\n    //                             //  /> */}\r\n    //                              {/* <ErrorMessage name=\"location\"> */}\r\n    //                                  {/* { */}\r\n    //                                     {/* //  errorMsg => <div className={classes.InputValidation}>{errorMsg}</div>\r\n    //                                 //  } */}\r\n    //                              {/* </ErrorMessage> */}\r\n    //                          {/* </div> */}\r\n    //                      {/* </div> */}\r\n    //                      {/* <div className={classes.ButtonDiv}> */}\r\n    //                          {/* <SubmitButton /> */}\r\n    //                          {/* <CancelButton /> */}\r\n    //                      {/* </div> */}\r\n    //                  {/* </Form> */}\r\n    //              {/* </Formik> */}\r\n    //          {/* </div> */}\r\n    //      {/* </React.Fragment> */}\r\n    );\r\n};\r\n\r\nexport default CitizenCreateProposal;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["484","485","486","487","488","489"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container } from 'react-bootstrap';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './CitizenViewProject.css';\r\n\r\nconst CitizenViewProject = () => {\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [project, setProject] = useState([]);\r\n    const [viewCount, setViewCount] = useState();\r\n    const projectId = localStorage.getItem('projectid');\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`/api/projects/${path}`);\r\n            const responseData = await response.json();\r\n            setProject(responseData.data.project);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const date = new Date(project.createdAt).toLocaleDateString()\r\n\r\n    console.log(project)\r\n\r\n    // console.log(viewCount)\r\n    return(\r\n        <Container className='citizenViewProject-container'>\r\n                <Row className='citizenViewProject-long'>\r\n                    <Col className='citizenViewProject-title'>\r\n                        <h1>{project.title}</h1>\r\n\r\n                        <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-description'>\r\n                        <p>{project.description}</p>\r\n                    </Col> \r\n\r\n                    <Col className='citizenViewProject-img-frame'>\r\n                        <img src={project.coverImage}  className='citizenViewProject-img' alt='Project'/>\r\n                    </Col>\r\n\r\n                    <Col className='citizenViewProject-status'>\r\n                        <p>Date created: {date}</p>\r\n                        <p>Where: {project.location}</p>\r\n                        <p>Status: {project.status}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link className = 'citizen-backButton' to = '/citizen-projects'>\r\n                    Back\r\n                </Link>\r\n        </Container>\r\n    );\r\n};\r\nexport default CitizenViewProject;","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515"],"import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Container, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { Formik, Form, ErrorMessage, Field, validateYupSchema } from 'formik';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './CitizenViewProposal.css';\r\nimport FormikInput from '../../../../components/UI/Input/FormikInput/FormikInput';\r\nimport SubmitButton from '../../../../components/UI/Buttons/SubmitButton/SubmitButton';\r\nimport { Context } from '../../../../context/Context';\r\nimport * as Yup from 'yup';\r\n\r\nconst CitizenViewProposal = () => {\r\n    const [proposal, setProposal] = useState([]);\r\n    const [comments, setComments] = useState();\r\n    const [upvoteclicked, upvotesetClicked] = useState(false);\r\n    const [downclicked, downsetClicked] = useState(false);\r\n    const { user, dispatch } = useContext(Context);\r\n    const [disable, setDisable] = useState(false);\r\n    const [arrEmpty, setarrEmpty] = useState();\r\n    let count = 0;\r\n    \r\n    const proposalId = localStorage.getItem('proposalid');\r\n    // const name = comments.user;\r\n    // const msg = comments.message;\r\n    \r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            // console.log(proposalId)\r\n            const response = await fetch(`/api/proposals/${proposalId}`);\r\n            // console.log(response)\r\n            const responseData = await response.json();\r\n            // console.log(responseData)\r\n            // const newResponseData = JSON.stringify(responseData.data);\r\n            // console.log(newResponseData);\r\n            setProposal(responseData.data.proposal);\r\n            setComments(responseData.data.proposal.comments)\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(proposal.upvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.upvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    upvotesetClicked(true)\r\n                }else{\r\n                    upvotesetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    useEffect(()=>{\r\n        if(proposal.downvote){\r\n            const checkUser = async () => {\r\n                // Get UserId from context\r\n                const userId = user.data.user._id;\r\n                // Get UserId from upvotes Array (get proposal ID, get vote array)\r\n                const test = userId;\r\n                //Compare the two\r\n                const upvotes = proposal.downvote;\r\n                const result = upvotes.includes(test);\r\n\r\n                // console.log(result); // true\r\n                //if true Disable Button\r\n                if(result==true){\r\n                    downsetClicked(true)\r\n                }else{\r\n                    downsetClicked(false)\r\n                }\r\n            };\r\n            checkUser();\r\n        }\r\n    },[proposal])\r\n\r\n    const castUpVote = async (proposalId, userId) =>{\r\n        upvotesetClicked(true);\r\n        const removeVote = {\r\n            downvote:userId\r\n        }\r\n        try{\r\n            if(downclicked){\r\n                const response = await axios.patch(`/api/proposals/removeDownVote/${proposalId}`, removeVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response2 = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                    if (result) {\r\n                        console.log(result)\r\n                        window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    upvote:userId\r\n                };\r\n                const response = await axios.patch(`/api/proposals/upVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n\r\n    const castDownVote = async (proposalId, userId) =>{\r\n        downsetClicked(true);\r\n        const removeVote = {\r\n            upvote:userId\r\n        }\r\n        try{\r\n            if(upvoteclicked){\r\n                \r\n                    const response = await axios.patch(`/api/proposals/removeUpVote/${proposalId}`, removeVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n                    const addUserVote = {\r\n                        downvote:userId\r\n                    };\r\n                    // Add userId to proposals upvote array\r\n                    const response2 = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                            if (result) {\r\n                                console.log(result)\r\n                                window.location.reload(false);\r\n                            }\r\n                        }\r\n                    );\r\n            }\r\n            else{\r\n                const addUserVote = {\r\n                    downvote:userId\r\n                };\r\n                //Add userId to proposals upvote array\r\n                const response = await axios.patch(`/api/proposals/downVote/${proposalId}`, addUserVote).then((result)=>{\r\n                        if (result) {\r\n                            console.log(result)\r\n                            window.location.reload(false);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    // const postComment = async (proposalId,userId)\r\n\r\n    const initialValues = {\r\n        user:user.data.user.firstname+\" \"+user.data.user.lastname,\r\n        message:''\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        user: Yup.string(),\r\n        message:  Yup.string().required(\"Required\")\r\n    });\r\n\r\n    const onSubmit = async (values) => {\r\n        // console.log('Form values', values);\r\n\r\n        // const username = user.data.user.firstname+\" \"+user.data.user.lastname;\r\n        // const comment = {\r\n        //     user:username,\r\n        //     values\r\n        // };\r\n        console.log(values)\r\n        const res = await axios.patch(`/api/proposals/comments/${proposalId}`, values).catch(err => {\r\n            console.log('Error: ', err.res.values);\r\n        });\r\n        window.location.reload(false);\r\n        // const {...data} = newValues;\r\n        // const res = await axios.patch('/api/proposals/comments/', data).catch(err => {\r\n        //     console.log('Error: ', err.res.data);\r\n        // });\r\n\r\n        // setRedirect(true);\r\n    };\r\n    let test = proposal.comments\r\n    console.log(test);\r\n    // for(a=1; a < comments.length(), a++){\r\n\r\n    // };\r\n    return(\r\n        <Container className='citizenViewProposal-container'>\r\n                <Row className='citizenViewProposal-long'>\r\n                    <Col className='citizenViewProposal-title'>\r\n                        <h1>{proposal.title}</h1>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-description'>\r\n                        <p>{proposal.description}\r\n                        </p>\r\n\r\n                        <p>Where: {proposal.location}</p>\r\n                    </Col> \r\n                    \r\n                        <Col className='citizenViewProposal-img-frame'>\r\n                            <img src='https://imgur.com/7pFJPjg.png'  className='citizenViewProposal-img' alt='Proposal'/>\r\n                        </Col>\r\n                    \r\n                    <Col className='citizenViewProposal-auth'>\r\n                            <p>Proposed by: {proposal.userName}</p>\r\n                            <p>Proposed on: {proposal.createdAt}</p>\r\n                            <p>Status: {proposal.status}</p>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-status'>Status: {proposal.status}</Col>\r\n                    <Col className='citizenViewProposal-btn-container'>\r\n                        <Row className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user upvoted propopsal onClick={() => castUpVote(proposal._id, user.data.user._id)} {proposal.upvote.length ? proposal.upvote.length : 0}*/}\r\n                            <Button disabled={ upvoteclicked } onClick={() => castUpVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Upvote: </Button>\r\n                        </Row>\r\n                        <Row  className='citizenViewProposal-btn-frame'>\r\n                            {/* Set button to disabled when current user downvoted propopsal  onClick={() => castDownVote(proposal._id, user.data.user._id)} {proposal.downvote.length ? proposal.downvote.length : 0}*/}\r\n                            <Button disabled={ downclicked } onClick={() => castDownVote(proposal._id, user.data.user._id)} className='citizenViewProposal-btn'>Downvote: </Button>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className='citizenViewProposal-inputcomment-container'>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                    >\r\n                        <Form>\r\n                            <Field\r\n                                className='citizenViewProposal-writecomment'\r\n                                type='text'\r\n                                placeholder='write a comment'\r\n                                id='message'\r\n                                name='message'/>\r\n                            {/* <ErrorMessage name=\"comments\">\r\n                                    {errorMsg => <div className=\"InputValidation\">{errorMsg}</div>}\r\n                                </ErrorMessage> */}\r\n                                <div className='buttonContainer'>\r\n                                    <SubmitButton />\r\n                                </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </Row>\r\n                <Row className='citizenViewProposal-writecomment-container'>\r\n                    {/* <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img'>\r\n                            <img src='https://imgur.com/82XUVjV.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>Kevin Gojocco</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className='citizenViewProposal-comment'>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>John Doe</Col>\r\n                            <Col>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n                            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n                            anim id est laborum.</Col>\r\n                        </Row>\r\n                    </Col> */}\r\n                    {comments && comments.map(comment => (\r\n                    <Col className='citizenViewProposal-comment' key={comment._id}>\r\n                        <Row className='citizenViewProposal-comment-img' c={9}>\r\n                            <img src='https://imgur.com/urZfDtd.png'/>\r\n                        </Row>\r\n                        <Row className='citizenViewProposal-comment-body'>\r\n                            <Col>{comment.user}</Col>\r\n                            <Col>{comment.message}</Col>\r\n                        </Row>\r\n                    </Col>\r\n                    ))};\r\n                </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CitizenViewProposal;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["516","517","518","519","520","521"],"import \"./CitizenProjects.css\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Column, Row, Container } from 'react-bootstrap'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst CitizenProjects = () => {\r\n    const [projects, setProjects] = useState();\r\n    const [views, setViews] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/projects');\r\n            const responseData = await response.json();\r\n            setProjects(responseData.data.projects);\r\n        };\r\n        sendRequest();\r\n    },[]);\r\n\r\n    const categoryAll = async () => {\r\n        const response = await fetch('/api/projects');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData.data.projects);\r\n    }\r\n    \r\n    const categoryAccomplished = async () => {\r\n        const response = await fetch('/api/projects/accomplished');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n\r\n    const categoryOngoing = async () => {\r\n        const response = await fetch('/api/projects/ongoing');\r\n        const responseData = await response.json();\r\n        // console.log(responseData)\r\n        setProjects(responseData);   \r\n    }\r\n    \r\n    const getProjectId = async (projectId) => {\r\n        try {\r\n            await axios.post(`/api/projects/updateViewCount/${projectId}`);\r\n        } catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n\r\n    // console.log(projects)\r\n    //Accomplished/Ongoing Category\r\n    //onClick={() => categoryAccomplished/Ongoing(status:Accomplished/Ongoing)}\r\n    //const categoryAccomplished/Ongoing = async (status) =>{}\r\n    // dito icocompare mo yung Accomplished/Ongoing na status to all proposals\r\n    // if nag true ididsplay natin\r\n\r\n\r\n\r\n    return (\r\n        <div className='citizenprojects-container' >\r\n            <Row className='citizenprojects-catbar-container'>\r\n                <Col className='citizenprojects-catbar'>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAll()}>All</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryAccomplished()}>Accomplished</button>\r\n                    <button className='citizenprojects-catbar-item' onClick={() => categoryOngoing()}>Ongoing</button>\r\n                </Col>\r\n            </Row> \r\n            {projects && projects.map(project =>(\r\n                <Row  className='citizenprojects-short' key={project._id}>\r\n                <Col className='citizenprojects-shortinfo'>\r\n                    <Row className='citizenprojects-shortinfo-auth'>\r\n                        <h2>{project.title}</h2>\r\n                        <Col className='citizenprojects-auth-container'>\r\n                            <div className='citizenprojects-auth'>{project.userId}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-desc'>\r\n                        {project.description}\r\n                    </Row>\r\n                    <Row className='citizenprojects-shortinfo-status'>\r\n                        <p>Status: {project.status}</p>\r\n                        <div className='citizenprojects-shortinfo-status-views'>\r\n                            <i className=\"fas fa-eye\"/> <span>{project.viewCount}</span>\r\n                        </div>\r\n                    </Row>\r\n                    {/* onClick{()=> viewCountUp(project._id)}  */}\r\n                    <Link className='citizenprojects-viewmore' onClick = { () => getProjectId(project._id) } to={`/citizen-view-project/${project._id}`} >\r\n                        View More\r\n                    </Link>\r\n                </Col>\r\n\r\n                <Col className='citizenprojects-shortinfo-img-container'>\r\n                    <div className='citizenprojects-shortinfo-img-frame'>\r\n                        <img src={project.coverImage}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default CitizenProjects;\r\n\r\n\r\n\r\n","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",["522","523","524"],"import React, { useState, useRef, useEffect, useContext, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nimport CardHeader from '../../../../components/UI/Cards/CardHeader/CardHeader';\r\nimport AdminLayout from '../../../../components/AllAdmin/Administrator/AdminLayout/AdminLayout';\r\nimport CitizenConversations from './CitizenConversations/CitizenConversations';\r\nimport CitizenMessage from './CitizenMessage/CitizenMessage';\r\nimport { Context } from '../../../../context/Context';\r\n\r\nimport './CitizenChatReport.module.css';\r\nimport classes from './CitizenChatReport.module.css';\r\nimport CitizenChatOnline from './ChatOnline/CitizenChatOnline';\r\n\r\nconst CitizenChatReport = ( props ) => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chatMessages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const { user } = useContext(Context);\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost:8900\");\r\n        socket.current.on(\"getMessage\", data => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", user.data.user._id);\r\n        socket.current.on(\"getUsers\", user => {\r\n           console.log(user);\r\n        });\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/conversations/\" + user.data?.user?._id);\r\n                setConversations(res.data);\r\n                console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        getConversations();\r\n    }, [user.data?.user?._id]);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n                setMessages(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat]);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user.data.user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n\r\n        const receiverId = currentChat.members.find(member => member !== user.data.user._id);\r\n\r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: user.data.user._id,\r\n            receiverId,\r\n            text: newMessage \r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\"/api/messages/\", message);\r\n            setMessages([...chatMessages, res.data]);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // console.log(user.data.user._id);\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div className={classes.Container}>\r\n                <div className={classes.AdminMessages}>\r\n                    <CardHeader>\r\n                        <h2 className={classes.Text}>Messages</h2>\r\n                    </CardHeader>\r\n                </div>\r\n                {/* List of chats */}\r\n                <div className={classes.Messenger}>\r\n                    <div className={classes.AdminChatMenu}>\r\n                        <input\r\n                            placeholder=\"Search messages\"\r\n                            className={classes.AdminChatMenuSearch}\r\n                        />\r\n                        {conversations.map(c => (\r\n                            <div onClick={() => setCurrentChat(c)}>\r\n                                <CitizenConversations conversation={c} currentUser={user}  />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {/* Chatbox */}\r\n                    <div className={classes.AdminChat}>\r\n                        <div className={classes.AdminChatWrapper}>\r\n                            <div className={classes.AdminChatBoxTop}>\r\n                                {\r\n                                    chatMessages.map(m => (\r\n                                        <div>\r\n                                            <CitizenMessage messages={m} own={m.sender === user.data?.user?._id} />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className={classes.AdminChatBoxBottom}>\r\n                                <textarea\r\n                                    className={classes.ChatMessageInput}\r\n                                    placeholder=\"Write something...\"\r\n                                    onChange={(e) => setNewMessage(e.target.value)}\r\n                                    value={newMessage}\r\n                                ></textarea>\r\n                                <button className={classes.ChatSubmitButton} onClick={handleSubmit}>Send</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Admins */}\r\n                    <div className={classes.AdminList}>\r\n                        <CitizenChatOnline\r\n                            currentId={user.data.user._id}\r\n                            setCurrentChat={setCurrentChat}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default CitizenChatReport;\r\n","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Text\\TextError.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["525"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './AdminConversations.module.css';\r\n\r\nconst AdminConversations = ({conversation, currentUser}) => {\r\n    //insert soon\r\n    const [citizenUser, setCitizenUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const friendId = conversation.members.find(m => m !== currentUser._id);\r\n        \r\n        // console.log(\"current user is \" + currentUser.user._id);\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/citizen/' + friendId);\r\n                setCitizenUser(res.data);\r\n                // console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    //console.log(citizenUser);\r\n    //console.log(citizenUser._id);\r\n    return(\r\n        <div className={classes.AdminConversations}>\r\n            <img \r\n                className={classes.AdminConversationsImg} \r\n                src=\"https://images.pexels.com/photos/1165999/pexels-photo-1165999.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" \r\n                alt=\"sample-image\" />\r\n            <span className={classes.ConversationName}>{citizenUser?.firstname + ' ' + citizenUser?.lastname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminConversations;","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\ProfileIconCard\\ProfileIconCard.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["526","527"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenChatOnline.module.css';\r\n\r\nconst CitizenChatOnline = ({currentId, setCurrentChat}) => {\r\n    const [allAdmins, setAllAdmins] = useState();\r\n\r\n    useEffect(() => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('/api/admin');\r\n            const responseData = await response.json();\r\n            setAllAdmins(responseData);\r\n            //console.log(responseData)\r\n        }\r\n        sendRequest();\r\n    }, []);\r\n\r\n    const handleClick = async (user) => {\r\n        try {\r\n            const res = await fetch(`/api/conversations/${currentId}/${user._id}` );\r\n            //setCurrentChat(res)\r\n            console.log(res);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n   //console.log(allAdmins);\r\n\r\n    return ( \r\n        <div className={classes.ChatOnline}>\r\n            {allAdmins && allAdmins.map((admin) => (\r\n            <div className={classes.ChatOnlineAdmin} key={admin._id}  onClick={() => handleClick(admin)}> \r\n                <div className={classes.ChatOnlineImageContainer}>\r\n                <img \r\n                    className={classes.ChatOnlineImage}\r\n                    src=\"https://images.pexels.com/photos/7322511/pexels-photo-7322511.jpeg?cs=srgb&dl=pexels-koolshooters-7322511.jpg&fm=jpg\" \r\n                />\r\n                <div className={classes.ChatOnlineBadge}></div>\r\n                </div>\r\n                <span className={classes.ChatOnlineName}>{admin.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CitizenChatOnline;\r\n\r\n","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["528"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport classes from './CitizenConversations.module.css';\r\n\r\nconst CitizenConversations = ({conversation, currentUser}) => {\r\n    const [adminUser, setAdminUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const adminId = conversation.members.find(m => m !== currentUser._id);\r\n        //console.log(\"current user \" + adminId);\r\n\r\n        const getAdminUser = async () => {\r\n            try {\r\n                const res = await axios.get('/api/admin/' + adminId);\r\n                setAdminUser(res.data);\r\n                //console.log(res);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }; \r\n        getAdminUser();\r\n    }, [currentUser, conversation]);\r\n\r\n    \r\n    //console.log(currentUser);\r\n\r\n    return(\r\n        <div className={classes.CitizenConversations}>\r\n            <img \r\n                className={classes.CitizenConversationsImg}\r\n                src={currentUser.data.user.profilePic}\r\n                alt=\"sample-image\"\r\n            />\r\n            <span className={classes.ConversationName}>{adminUser?.username}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitizenConversations;","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","replacedBy":"532"},{"ruleId":"533","severity":1,"message":"534","line":48,"column":8,"nodeType":"535","messageId":"536","endLine":48,"endColumn":19},{"ruleId":"533","severity":1,"message":"537","line":49,"column":8,"nodeType":"535","messageId":"536","endLine":49,"endColumn":18},{"ruleId":"533","severity":1,"message":"538","line":1,"column":40,"nodeType":"535","messageId":"536","endLine":1,"endColumn":50},{"ruleId":"533","severity":1,"message":"539","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"540","line":3,"column":26,"nodeType":"535","messageId":"536","endLine":3,"endColumn":35},{"ruleId":"533","severity":1,"message":"541","line":4,"column":13,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"542","line":9,"column":8,"nodeType":"535","messageId":"536","endLine":9,"endColumn":20},{"ruleId":"533","severity":1,"message":"543","line":10,"column":8,"nodeType":"535","messageId":"536","endLine":10,"endColumn":20},{"ruleId":"533","severity":1,"message":"544","line":11,"column":8,"nodeType":"535","messageId":"536","endLine":11,"endColumn":20},{"ruleId":"533","severity":1,"message":"545","line":9,"column":8,"nodeType":"535","messageId":"536","endLine":9,"endColumn":14},{"ruleId":"533","severity":1,"message":"546","line":1,"column":39,"nodeType":"535","messageId":"536","endLine":1,"endColumn":45},{"ruleId":"533","severity":1,"message":"547","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":19},{"ruleId":"533","severity":1,"message":"548","line":28,"column":11,"nodeType":"535","messageId":"536","endLine":28,"endColumn":16},{"ruleId":"533","severity":1,"message":"549","line":28,"column":28,"nodeType":"535","messageId":"536","endLine":28,"endColumn":38},{"ruleId":"533","severity":1,"message":"550","line":1,"column":17,"nodeType":"535","messageId":"536","endLine":1,"endColumn":27},{"ruleId":"533","severity":1,"message":"551","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":17},{"ruleId":"533","severity":1,"message":"552","line":1,"column":38,"nodeType":"535","messageId":"536","endLine":1,"endColumn":47},{"ruleId":"533","severity":1,"message":"539","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":19},{"ruleId":"533","severity":1,"message":"541","line":4,"column":13,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"553","line":10,"column":8,"nodeType":"535","messageId":"536","endLine":10,"endColumn":13},{"ruleId":"533","severity":1,"message":"548","line":18,"column":13,"nodeType":"535","messageId":"536","endLine":18,"endColumn":18},{"ruleId":"533","severity":1,"message":"554","line":44,"column":23,"nodeType":"535","messageId":"536","endLine":44,"endColumn":26},{"ruleId":"533","severity":1,"message":"555","line":1,"column":29,"nodeType":"535","messageId":"536","endLine":1,"endColumn":37},{"ruleId":"533","severity":1,"message":"541","line":4,"column":13,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"553","line":9,"column":8,"nodeType":"535","messageId":"536","endLine":9,"endColumn":13},{"ruleId":"533","severity":1,"message":"554","line":45,"column":23,"nodeType":"535","messageId":"536","endLine":45,"endColumn":26},{"ruleId":"556","severity":1,"message":"557","line":20,"column":6,"nodeType":"558","endLine":20,"endColumn":8,"suggestions":"559"},{"ruleId":"533","severity":1,"message":"554","line":44,"column":11,"nodeType":"535","messageId":"536","endLine":44,"endColumn":14},{"ruleId":"556","severity":1,"message":"557","line":22,"column":6,"nodeType":"558","endLine":22,"endColumn":8,"suggestions":"560"},{"ruleId":"561","severity":1,"message":"562","line":69,"column":13,"nodeType":"563","endLine":69,"endColumn":79},{"ruleId":"533","severity":1,"message":"551","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":17},{"ruleId":"533","severity":1,"message":"564","line":26,"column":11,"nodeType":"535","messageId":"536","endLine":26,"endColumn":17},{"ruleId":"533","severity":1,"message":"546","line":1,"column":27,"nodeType":"535","messageId":"536","endLine":1,"endColumn":33},{"ruleId":"533","severity":1,"message":"565","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":21},{"ruleId":"533","severity":1,"message":"566","line":10,"column":19,"nodeType":"535","messageId":"536","endLine":10,"endColumn":29},{"ruleId":"556","severity":1,"message":"557","line":22,"column":6,"nodeType":"558","endLine":22,"endColumn":8,"suggestions":"567"},{"ruleId":"561","severity":1,"message":"562","line":56,"column":13,"nodeType":"563","endLine":56,"endColumn":78},{"ruleId":"533","severity":1,"message":"565","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":21},{"ruleId":"533","severity":1,"message":"539","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":19},{"ruleId":"533","severity":1,"message":"568","line":3,"column":21,"nodeType":"535","messageId":"536","endLine":3,"endColumn":27},{"ruleId":"533","severity":1,"message":"569","line":3,"column":29,"nodeType":"535","messageId":"536","endLine":3,"endColumn":33},{"ruleId":"533","severity":1,"message":"570","line":3,"column":35,"nodeType":"535","messageId":"536","endLine":3,"endColumn":40},{"ruleId":"533","severity":1,"message":"571","line":3,"column":42,"nodeType":"535","messageId":"536","endLine":3,"endColumn":54},{"ruleId":"533","severity":1,"message":"541","line":5,"column":13,"nodeType":"535","messageId":"536","endLine":5,"endColumn":16},{"ruleId":"533","severity":1,"message":"553","line":10,"column":8,"nodeType":"535","messageId":"536","endLine":10,"endColumn":13},{"ruleId":"533","severity":1,"message":"543","line":12,"column":8,"nodeType":"535","messageId":"536","endLine":12,"endColumn":20},{"ruleId":"533","severity":1,"message":"544","line":13,"column":8,"nodeType":"535","messageId":"536","endLine":13,"endColumn":20},{"ruleId":"533","severity":1,"message":"548","line":19,"column":13,"nodeType":"535","messageId":"536","endLine":19,"endColumn":18},{"ruleId":"556","severity":1,"message":"557","line":33,"column":8,"nodeType":"558","endLine":33,"endColumn":10,"suggestions":"572"},{"ruleId":"533","severity":1,"message":"573","line":44,"column":52,"nodeType":"535","messageId":"536","endLine":44,"endColumn":59},{"ruleId":"533","severity":1,"message":"554","line":84,"column":23,"nodeType":"535","messageId":"536","endLine":84,"endColumn":26},{"ruleId":"533","severity":1,"message":"574","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":14},{"ruleId":"533","severity":1,"message":"575","line":4,"column":10,"nodeType":"535","messageId":"536","endLine":4,"endColumn":13},{"ruleId":"533","severity":1,"message":"574","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":14},{"ruleId":"533","severity":1,"message":"575","line":4,"column":10,"nodeType":"535","messageId":"536","endLine":4,"endColumn":13},{"ruleId":"533","severity":1,"message":"569","line":2,"column":20,"nodeType":"535","messageId":"536","endLine":2,"endColumn":24},{"ruleId":"533","severity":1,"message":"576","line":2,"column":26,"nodeType":"535","messageId":"536","endLine":2,"endColumn":32},{"ruleId":"533","severity":1,"message":"574","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"537","line":5,"column":8,"nodeType":"535","messageId":"536","endLine":5,"endColumn":18},{"ruleId":"533","severity":1,"message":"569","line":6,"column":20,"nodeType":"535","messageId":"536","endLine":6,"endColumn":24},{"ruleId":"533","severity":1,"message":"576","line":6,"column":26,"nodeType":"535","messageId":"536","endLine":6,"endColumn":32},{"ruleId":"533","severity":1,"message":"577","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":17},{"ruleId":"533","severity":1,"message":"578","line":21,"column":11,"nodeType":"535","messageId":"536","endLine":21,"endColumn":23},{"ruleId":"533","severity":1,"message":"579","line":23,"column":15,"nodeType":"535","messageId":"536","endLine":23,"endColumn":23},{"ruleId":"556","severity":1,"message":"580","line":31,"column":7,"nodeType":"558","endLine":31,"endColumn":9,"suggestions":"581"},{"ruleId":"533","severity":1,"message":"554","line":75,"column":27,"nodeType":"535","messageId":"536","endLine":75,"endColumn":30},{"ruleId":"533","severity":1,"message":"576","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":16},{"ruleId":"533","severity":1,"message":"579","line":31,"column":15,"nodeType":"535","messageId":"536","endLine":31,"endColumn":23},{"ruleId":"582","severity":1,"message":"583","line":208,"column":1,"nodeType":"584","messageId":"585","endLine":248,"endColumn":11},{"ruleId":"556","severity":1,"message":"586","line":81,"column":8,"nodeType":"558","endLine":81,"endColumn":10,"suggestions":"587"},{"ruleId":"556","severity":1,"message":"580","line":31,"column":7,"nodeType":"558","endLine":31,"endColumn":9,"suggestions":"588"},{"ruleId":"533","severity":1,"message":"554","line":75,"column":27,"nodeType":"535","messageId":"536","endLine":75,"endColumn":30},{"ruleId":"533","severity":1,"message":"589","line":2,"column":8,"nodeType":"535","messageId":"536","endLine":2,"endColumn":13},{"ruleId":"533","severity":1,"message":"576","line":3,"column":20,"nodeType":"535","messageId":"536","endLine":3,"endColumn":26},{"ruleId":"533","severity":1,"message":"590","line":11,"column":12,"nodeType":"535","messageId":"536","endLine":11,"endColumn":21},{"ruleId":"533","severity":1,"message":"591","line":11,"column":23,"nodeType":"535","messageId":"536","endLine":11,"endColumn":35},{"ruleId":"533","severity":1,"message":"592","line":12,"column":11,"nodeType":"535","messageId":"536","endLine":12,"endColumn":20},{"ruleId":"556","severity":1,"message":"593","line":21,"column":7,"nodeType":"558","endLine":21,"endColumn":9,"suggestions":"594"},{"ruleId":"533","severity":1,"message":"595","line":3,"column":39,"nodeType":"535","messageId":"536","endLine":3,"endColumn":48},{"ruleId":"533","severity":1,"message":"596","line":3,"column":50,"nodeType":"535","messageId":"536","endLine":3,"endColumn":63},{"ruleId":"533","severity":1,"message":"571","line":4,"column":24,"nodeType":"535","messageId":"536","endLine":4,"endColumn":36},{"ruleId":"533","severity":1,"message":"597","line":4,"column":45,"nodeType":"535","messageId":"536","endLine":4,"endColumn":62},{"ruleId":"533","severity":1,"message":"574","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":14},{"ruleId":"533","severity":1,"message":"598","line":5,"column":16,"nodeType":"535","messageId":"536","endLine":5,"endColumn":24},{"ruleId":"533","severity":1,"message":"599","line":7,"column":8,"nodeType":"535","messageId":"536","endLine":7,"endColumn":19},{"ruleId":"533","severity":1,"message":"600","line":17,"column":19,"nodeType":"535","messageId":"536","endLine":17,"endColumn":27},{"ruleId":"533","severity":1,"message":"601","line":18,"column":12,"nodeType":"535","messageId":"536","endLine":18,"endColumn":19},{"ruleId":"533","severity":1,"message":"566","line":18,"column":21,"nodeType":"535","messageId":"536","endLine":18,"endColumn":31},{"ruleId":"533","severity":1,"message":"602","line":19,"column":12,"nodeType":"535","messageId":"536","endLine":19,"endColumn":20},{"ruleId":"533","severity":1,"message":"603","line":19,"column":22,"nodeType":"535","messageId":"536","endLine":19,"endColumn":33},{"ruleId":"533","severity":1,"message":"604","line":20,"column":9,"nodeType":"535","messageId":"536","endLine":20,"endColumn":14},{"ruleId":"556","severity":1,"message":"605","line":40,"column":7,"nodeType":"558","endLine":40,"endColumn":9,"suggestions":"606"},{"ruleId":"607","severity":1,"message":"608","line":55,"column":26,"nodeType":"609","messageId":"610","endLine":55,"endColumn":28},{"ruleId":"556","severity":1,"message":"611","line":63,"column":7,"nodeType":"558","endLine":63,"endColumn":17,"suggestions":"612"},{"ruleId":"607","severity":1,"message":"608","line":78,"column":26,"nodeType":"609","messageId":"610","endLine":78,"endColumn":28},{"ruleId":"556","severity":1,"message":"611","line":86,"column":7,"nodeType":"558","endLine":86,"endColumn":17,"suggestions":"613"},{"ruleId":"533","severity":1,"message":"579","line":95,"column":23,"nodeType":"535","messageId":"536","endLine":95,"endColumn":31},{"ruleId":"533","severity":1,"message":"614","line":105,"column":23,"nodeType":"535","messageId":"536","endLine":105,"endColumn":32},{"ruleId":"533","severity":1,"message":"579","line":117,"column":23,"nodeType":"535","messageId":"536","endLine":117,"endColumn":31},{"ruleId":"533","severity":1,"message":"579","line":140,"column":27,"nodeType":"535","messageId":"536","endLine":140,"endColumn":35},{"ruleId":"533","severity":1,"message":"614","line":151,"column":27,"nodeType":"535","messageId":"536","endLine":151,"endColumn":36},{"ruleId":"533","severity":1,"message":"579","line":164,"column":23,"nodeType":"535","messageId":"536","endLine":164,"endColumn":31},{"ruleId":"533","severity":1,"message":"554","line":198,"column":15,"nodeType":"535","messageId":"536","endLine":198,"endColumn":18},{"ruleId":"561","severity":1,"message":"562","line":303,"column":29,"nodeType":"563","endLine":303,"endColumn":71},{"ruleId":"533","severity":1,"message":"615","line":4,"column":15,"nodeType":"535","messageId":"536","endLine":4,"endColumn":21},{"ruleId":"533","severity":1,"message":"540","line":4,"column":28,"nodeType":"535","messageId":"536","endLine":4,"endColumn":37},{"ruleId":"533","severity":1,"message":"577","line":5,"column":16,"nodeType":"535","messageId":"536","endLine":5,"endColumn":23},{"ruleId":"533","severity":1,"message":"616","line":9,"column":12,"nodeType":"535","messageId":"536","endLine":9,"endColumn":17},{"ruleId":"533","severity":1,"message":"617","line":9,"column":19,"nodeType":"535","messageId":"536","endLine":9,"endColumn":27},{"ruleId":"561","severity":1,"message":"562","line":93,"column":25,"nodeType":"563","endLine":93,"endColumn":56},{"ruleId":"533","severity":1,"message":"538","line":1,"column":58,"nodeType":"535","messageId":"536","endLine":1,"endColumn":68},{"ruleId":"533","severity":1,"message":"618","line":6,"column":8,"nodeType":"535","messageId":"536","endLine":6,"endColumn":19},{"ruleId":"533","severity":1,"message":"619","line":23,"column":11,"nodeType":"535","messageId":"536","endLine":23,"endColumn":20},{"ruleId":"620","severity":1,"message":"621","line":31,"column":13,"nodeType":"563","endLine":34,"endColumn":38},{"ruleId":"533","severity":1,"message":"589","line":1,"column":8,"nodeType":"535","messageId":"536","endLine":1,"endColumn":13},{"ruleId":"561","severity":1,"message":"562","line":36,"column":17,"nodeType":"563","endLine":39,"endColumn":19},{"ruleId":"620","severity":1,"message":"621","line":30,"column":13,"nodeType":"563","endLine":34,"endColumn":15},"no-native-reassign",["622"],"no-negated-in-lhs",["623"],"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'useReducer' is defined but never used.","'useFormik' is defined but never used.","'Container' is defined but never used.","'Yup' is defined but never used.","'ProfileInput' is defined but never used.","'SubmitButton' is defined but never used.","'CancelButton' is defined but never used.","'Tables' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'useContext' is defined but never used.","'Context' is defined but never used.","'useParams' is defined but never used.","'Input' is defined but never used.","'res' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["624"],["625"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'string' is assigned a value but never used.","'useLocation' is defined but never used.","'setDisable' is assigned a value but never used.",["626"],"'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.",["627"],"'control' is assigned a value but never used.","'Link' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","'deletereport' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.",["628"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["629"],["630"],"'axios' is defined but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["631"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'disable' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["632"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["633"],["634"],"'response2' is assigned a value but never used.","'Column' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","'AdminLayout' is defined but never used.","'scrollRef' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"635","fix":"636"},{"desc":"635","fix":"637"},{"desc":"635","fix":"638"},{"desc":"635","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"640","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"649","fix":"651"},"Update the dependencies array to be: [params.id]",{"range":"652","text":"653"},{"range":"654","text":"653"},{"range":"655","text":"653"},{"range":"656","text":"653"},"Update the dependencies array to be: [citizenUser]",{"range":"657","text":"658"},"Update the dependencies array to be: [citizen]",{"range":"659","text":"660"},{"range":"661","text":"658"},"Update the dependencies array to be: [path]",{"range":"662","text":"663"},"Update the dependencies array to be: [proposalId]",{"range":"664","text":"665"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"666","text":"667"},{"range":"668","text":"667"},[691,693],"[params.id]",[712,714],[812,814],[1284,1286],[1472,1474],"[citizenUser]",[2671,2673],"[citizen]",[1398,1400],[805,807],"[path]",[1790,1792],"[proposalId]",[2572,2582],"[proposal, user.data.user._id]",[3361,3371]]
[{"D:\\Projects\\SmartCTzen\\client\\src\\index.js":"1","D:\\Projects\\SmartCTzen\\client\\src\\App.js":"2","D:\\Projects\\SmartCTzen\\client\\src\\context\\Context.js":"3","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js":"4","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js":"5","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js":"6","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js":"7","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js":"8","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js":"9","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js":"10","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js":"11","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js":"12","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js":"13","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js":"14","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js":"15","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js":"16","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js":"17","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js":"18","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js":"19","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js":"20","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js":"21","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js":"22","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js":"23","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js":"24","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js":"25","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js":"26","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js":"27","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js":"28","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js":"29","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js":"30","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js":"31","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js":"32","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js":"33","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js":"34","D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js":"35","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js":"36","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js":"37","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js":"38","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js":"39","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js":"40","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js":"41","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js":"42","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js":"43","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js":"44","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js":"45","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js":"46","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js":"47","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js":"48","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js":"49","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js":"50","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js":"51","D:\\Projects\\SmartCTzen\\client\\src\\context\\Reducer.js":"52","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js":"53","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js":"54","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx":"55","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx":"56","D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx":"57","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx":"58","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx":"59","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx":"60","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx":"61","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx":"62","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx":"63","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx":"64","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx":"65","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx":"66","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx":"67","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx":"68","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js":"69","D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js":"70","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js":"71","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js":"72","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js":"73","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js":"74","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js":"75","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js":"76","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js":"77","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js":"78","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx":"79","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx":"80","D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx":"81","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js":"82","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js":"83","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js":"84","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js":"85","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"86","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js":"87","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js":"88","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js":"89","D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js":"90","D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js":"91","D:\\Projects\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js":"92","D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js":"93"},{"size":502,"mtime":1632365168664,"results":"94","hashOfConfig":"95"},{"size":14896,"mtime":1633087179474,"results":"96","hashOfConfig":"95"},{"size":1216,"mtime":1631929926675,"results":"97","hashOfConfig":"95"},{"size":4061,"mtime":1632629366672,"results":"98","hashOfConfig":"95"},{"size":3502,"mtime":1632725017830,"results":"99","hashOfConfig":"95"},{"size":2508,"mtime":1630907286701,"results":"100","hashOfConfig":"95"},{"size":1886,"mtime":1631518050460,"results":"101","hashOfConfig":"95"},{"size":4032,"mtime":1632484710394,"results":"102","hashOfConfig":"95"},{"size":9631,"mtime":1632801320183,"results":"103","hashOfConfig":"95"},{"size":4355,"mtime":1632726042144,"results":"104","hashOfConfig":"95"},{"size":2988,"mtime":1632554863479,"results":"105","hashOfConfig":"95"},{"size":9254,"mtime":1632816924526,"results":"106","hashOfConfig":"95"},{"size":3656,"mtime":1632554210592,"results":"107","hashOfConfig":"95"},{"size":3661,"mtime":1632554339836,"results":"108","hashOfConfig":"95"},{"size":5002,"mtime":1632039421578,"results":"109","hashOfConfig":"95"},{"size":7516,"mtime":1633232615318,"results":"110","hashOfConfig":"95"},{"size":10297,"mtime":1632817327919,"results":"111","hashOfConfig":"95"},{"size":2542,"mtime":1632718430134,"results":"112","hashOfConfig":"95"},{"size":3386,"mtime":1632715742028,"results":"113","hashOfConfig":"95"},{"size":2346,"mtime":1632629366793,"results":"114","hashOfConfig":"95"},{"size":9944,"mtime":1632906515974,"results":"115","hashOfConfig":"95"},{"size":4229,"mtime":1632554393586,"results":"116","hashOfConfig":"95"},{"size":7491,"mtime":1632629366788,"results":"117","hashOfConfig":"95"},{"size":8492,"mtime":1632629366784,"results":"118","hashOfConfig":"95"},{"size":2965,"mtime":1632801320187,"results":"119","hashOfConfig":"95"},{"size":3383,"mtime":1632651341734,"results":"120","hashOfConfig":"95"},{"size":2633,"mtime":1632629366896,"results":"121","hashOfConfig":"95"},{"size":2946,"mtime":1632651341734,"results":"122","hashOfConfig":"95"},{"size":3483,"mtime":1632629366913,"results":"123","hashOfConfig":"95"},{"size":2757,"mtime":1632629366908,"results":"124","hashOfConfig":"95"},{"size":3385,"mtime":1632722170851,"results":"125","hashOfConfig":"95"},{"size":5913,"mtime":1632801320186,"results":"126","hashOfConfig":"95"},{"size":9136,"mtime":1632982906991,"results":"127","hashOfConfig":"95"},{"size":2510,"mtime":1632721861812,"results":"128","hashOfConfig":"95"},{"size":3674,"mtime":1632982698166,"results":"129","hashOfConfig":"95"},{"size":3773,"mtime":1632727220732,"results":"130","hashOfConfig":"95"},{"size":6176,"mtime":1633129334193,"results":"131","hashOfConfig":"95"},{"size":2792,"mtime":1633087179499,"results":"132","hashOfConfig":"95"},{"size":13699,"mtime":1633246020348,"results":"133","hashOfConfig":"95"},{"size":2935,"mtime":1633232615308,"results":"134","hashOfConfig":"95"},{"size":4954,"mtime":1632812360246,"results":"135","hashOfConfig":"95"},{"size":4028,"mtime":1633140558876,"results":"136","hashOfConfig":"95"},{"size":2771,"mtime":1633224447223,"results":"137","hashOfConfig":"95"},{"size":3190,"mtime":1633246983023,"results":"138","hashOfConfig":"95"},{"size":10568,"mtime":1633232615308,"results":"139","hashOfConfig":"95"},{"size":2133,"mtime":1632906500141,"results":"140","hashOfConfig":"95"},{"size":2747,"mtime":1633224447223,"results":"141","hashOfConfig":"95"},{"size":23842,"mtime":1633247452779,"results":"142","hashOfConfig":"95"},{"size":14310,"mtime":1633250338965,"results":"143","hashOfConfig":"95"},{"size":8255,"mtime":1633232615308,"results":"144","hashOfConfig":"95"},{"size":2707,"mtime":1633250499337,"results":"145","hashOfConfig":"95"},{"size":3965,"mtime":1632726352419,"results":"146","hashOfConfig":"95"},{"size":3354,"mtime":1633245621428,"results":"147","hashOfConfig":"95"},{"size":19662,"mtime":1633247699858,"results":"148","hashOfConfig":"95"},{"size":1027,"mtime":1632288578959,"results":"149","hashOfConfig":"95"},{"size":3134,"mtime":1633065809109,"results":"150","hashOfConfig":"95"},{"size":733,"mtime":1632288578955,"results":"151","hashOfConfig":"95"},{"size":18150,"mtime":1633240845163,"results":"152","hashOfConfig":"95"},{"size":11146,"mtime":1633252127624,"results":"153","hashOfConfig":"95"},{"size":8393,"mtime":1633224447418,"results":"154","hashOfConfig":"95"},{"size":4269,"mtime":1633224447328,"results":"155","hashOfConfig":"95"},{"size":2155,"mtime":1633224447333,"results":"156","hashOfConfig":"95"},{"size":1561,"mtime":1632552767751,"results":"157","hashOfConfig":"95"},{"size":17612,"mtime":1633252098378,"results":"158","hashOfConfig":"95"},{"size":4478,"mtime":1633232615308,"results":"159","hashOfConfig":"95"},{"size":14218,"mtime":1633224447388,"results":"160","hashOfConfig":"95"},{"size":13674,"mtime":1633251610891,"results":"161","hashOfConfig":"95"},{"size":7283,"mtime":1633232603251,"results":"162","hashOfConfig":"95"},{"size":789,"mtime":1631698332154,"results":"163","hashOfConfig":"95"},{"size":1966,"mtime":1631686854886,"results":"164","hashOfConfig":"95"},{"size":1584,"mtime":1632727118990,"results":"165","hashOfConfig":"95"},{"size":211,"mtime":1629626169110,"results":"166","hashOfConfig":"95"},{"size":286,"mtime":1632629319830,"results":"167","hashOfConfig":"95"},{"size":255,"mtime":1632982896626,"results":"168","hashOfConfig":"95"},{"size":254,"mtime":1630124291336,"results":"169","hashOfConfig":"95"},{"size":253,"mtime":1632965216307,"results":"170","hashOfConfig":"95"},{"size":425,"mtime":1633087166890,"results":"171","hashOfConfig":"95"},{"size":359,"mtime":1633224447274,"results":"172","hashOfConfig":"95"},{"size":845,"mtime":1633140542948,"results":"173","hashOfConfig":"95"},{"size":1758,"mtime":1633232603248,"results":"174","hashOfConfig":"95"},{"size":1243,"mtime":1633232603254,"results":"175","hashOfConfig":"95"},{"size":205,"mtime":1632629319795,"results":"176","hashOfConfig":"95"},{"size":245,"mtime":1629626169525,"results":"177","hashOfConfig":"95"},{"size":297,"mtime":1629626169018,"results":"178","hashOfConfig":"95"},{"size":219,"mtime":1629626169652,"results":"179","hashOfConfig":"95"},{"size":462,"mtime":1631932523519,"results":"180","hashOfConfig":"95"},{"size":432,"mtime":1630569618623,"results":"181","hashOfConfig":"95"},{"size":210,"mtime":1630373983068,"results":"182","hashOfConfig":"95"},{"size":904,"mtime":1633140542537,"results":"183","hashOfConfig":"95"},{"size":1403,"mtime":1633129334099,"results":"184","hashOfConfig":"95"},{"size":250,"mtime":1631337799096,"results":"185","hashOfConfig":"95"},{"size":364,"mtime":1632288578857,"results":"186","hashOfConfig":"95"},{"size":2183,"mtime":1631520057495,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zotif",{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\SmartCTzen\\client\\src\\index.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\App.js",["376","377"],"D:\\Projects\\SmartCTzen\\client\\src\\context\\Context.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenForgot\\CitizenForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Register\\Progress.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Navigation\\LandingNavBar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenLogin\\CitizenLogin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Home\\Home.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\CitizenEmail\\CitizenEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SecondStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FirstStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FourthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\FifthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Feature\\Features.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\ThirdStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SeventhStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAForgot\\SAForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEmail\\SAEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAnnouncements\\SAAnnouncements.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentHome\\SAContentHome.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Landing\\Register\\SixthStep.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeaturedMember\\SAAddFeaturedMember.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddFeature\\SAAddFeature.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAContentFeature\\SAContentFeature.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAEula\\SAEula.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeaturedMember\\SAFeaturedMember.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SALogin\\SALogin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAManage\\SAManage.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAFeatures\\SAFeatures.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEmail\\AdminEmail.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAddAdmin\\SAAddAdmin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SAAccount\\SAAccount.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminForgot\\AdminForgot.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\SuperAdmin\\SASearchAdmin\\SASearchAdmin.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLogin\\AdminLogin.js",["378","379","380","381"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessages.js",["382"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\Applicants\\Applicants.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProfile\\AdminProfile.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUsers\\AdminUsers.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReportsDashboard\\AdminReportsDashboard.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposalsDashboard\\AdminProposalsDashboard.js",["383"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProposals\\AdminProposals.js",["384","385"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachReport\\AdminEachReport.js",["386","387","388","389","390"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleApplicants\\SingleApplicants.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminReports\\AdminReports.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminProjects\\AdminProjects.js",["391"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProposals\\AdminCreateProposals.js",["392"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminUpdateProject\\AdminUpdateProject.js",["393","394","395"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\nimport AdminLayout from '../AdminLayout/AdminLayout';\r\nimport CardHeader from '../../../UI/Cards/CardHeader/CardHeader';\r\nimport { Context } from '../../../../context/Context';\r\nimport classes from './AdminUpdateProject.module.css';\r\n\r\n\r\nconst AdminUpdateProject = () => {\r\n    const { aUser } = useContext(Context);\r\n    const [currentProject, setCurrentProject] = useState([]);\r\n    const params = useParams();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [loading, setLoading] =  useState(true);\r\n\r\n    useEffect(() => {\r\n        const findProject = async () => {\r\n          const response = await fetch('/api/projects/' + params.id);\r\n          const responseData = await response.json();\r\n          //console.log(responseData);\r\n          setCurrentProject(responseData.data.project);\r\n        }\r\n        findProject();\r\n    }, []);\r\n\r\n    const defaultValues = {\r\n        title: currentProject.title,\r\n        description: currentProject.description,\r\n        location: currentProject.location,\r\n        coverImage: currentProject.coverImage\r\n    }\r\n\r\n    //console.log(currentProject.coverImage);\r\n\r\n    const { register, handleSubmit, errors, reset, control } = useForm({ defaultValues });\r\n    //console.log(currentProject);\r\n    // const preloadedValues = {\r\n    //     title: currentProject.title,\r\n    //     description: currentProject.description,\r\n    //     location: currentProject.location,\r\n    //     coverImage: currentProject.coverImage\r\n    // }\r\n\r\n\r\n    // const { register, handleSubmit, errors } = useForm({\r\n    //     defaultValue: preloadedValues\r\n    // });\r\n\r\n      const onSubmit = async (data) => {\r\n        console.log(data);\r\n        const coverImage = '';\r\n\r\n        const updateProject = {\r\n            // userId: aUser.data.user.userId,\r\n            userName: aUser.data.user.username,\r\n            userType: aUser.data.user.userType,\r\n            title: data.title,\r\n            description: data.description,\r\n            location: data.location,\r\n            status: currentProject.status,\r\n            coverImage\r\n        };\r\n\r\n        setLoading(false);\r\n        const formData = new FormData();\r\n        const filename = Date.now() + data.coverImage[0].name;\r\n        formData.append('name', filename);\r\n        formData.append('file', data.coverImage[0]);\r\n        formData.append(\"upload_preset\", \"dev_prac\");\r\n        formData.append(\"cloud_name\", \"karlstorage\");\r\n\r\n        try {\r\n            const res = await axios.post(\"https://api.cloudinary.com/v1_1/karlstorage/image/upload\", formData);\r\n            updateProject.coverImage = res.data.secure_url;\r\n\r\n            try {\r\n                const res = await axios.put(`/api/projects/update-projects/${params.id}`, updateProject);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Updated!',\r\n                    text: 'Project updated . . .'\r\n                });\r\n                \r\n                setLoading(true);\r\n                setRedirect(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setLoading(true);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log (err);\r\n            setLoading(true);\r\n        }\r\n        // await axios.post('/api/proposals', formData);\r\n        // console.log(data.coverImage[0].name);\r\n    }\r\n\r\n    // console.log(currentProject);\r\n    return (\r\n        <>\r\n        { redirect && (<Redirect to = '/admin-projects' />) }\r\n        {loading ? (\r\n        <AdminLayout>\r\n            <div className={classes.AdminProjects}>\r\n                <CardHeader>\r\n                    <h2 className={classes.Text}>Projects</h2>\r\n                </CardHeader>\r\n            </div>\r\n            <div className={classes.AdminUpdateProjectsContentDiv}>\r\n                <form className={classes.AdminUpdateProjectsForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.AdminUpdateProjectsFormDiv}>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Project Title</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='title'\r\n                                name='title'\r\n                                placeholder='Project Title'\r\n                                defaultValue={defaultValues.title}\r\n                                readOnly\r\n                            />\r\n                            {errors.title && <p className={classes.InputValidation}>{errors.title.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                className={classes.Textarea}\r\n                                type='textfield'\r\n                                id='description'\r\n                                name='description'\r\n                                placeholder='Description'\r\n                                defaultValue={defaultValues.description}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.description && <p className={classes.InputValidation}>{errors.description.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Location</label>\r\n                            <input\r\n                                className={classes.Input}\r\n                                type='text'\r\n                                id='location'\r\n                                name='location'\r\n                                placeholder='Location'\r\n                                defaultValue={defaultValues.location}\r\n                                readOnly\r\n                            />\r\n                            {errors.location && <p className={classes.InputValidation}>{errors.location.message}</p>}\r\n                        </div>\r\n                        <div className={classes.AdminUpdateProjectsFormInput}>\r\n                            <label>Cover Image</label>\r\n                            <input\r\n                                type='file'\r\n                                id='coverImage'\r\n                                name='coverImage'\r\n                                placeholder='Insert Image'\r\n                                files={defaultValues.coverImage}\r\n                                ref={register({ required: \"Required!\" })}\r\n                            />\r\n                            {errors.coverImage && <p className={classes.InputValidation}>{errors.coverImage.message}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.ButtonDiv}>\r\n                        <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n                        <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n                            console.log('Button');\r\n                            reset({ defaultValues })\r\n                        }}>Reset Data</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </AdminLayout>\r\n          ) : (\r\n                    <div style = {{\r\n                        color: '#777',\r\n                        textAlign: 'center',\r\n                    }}>\r\n                      <h2 style = {{marginTop: '10%'}}>Processing Please Wait</h2>\r\n                      <div>\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"primary\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"success\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"danger\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"warning\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"info\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"light\" />\r\n                        <ReactBootStrap.Spinner animation=\"grow\" variant=\"dark\" />\r\n                      </div>\r\n                    </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminUpdateProject;\r\n\r\n// const AdminUpdateProject = () => {\r\n//     const { aUser } = useContext(Context);\r\n//     const [userId, setUserId] = useState();\r\n//     const [redirect, setRedirect] = useState(false);\r\n//     const [file, setFile] = useState(null);\r\n//     const userType = aUser.data.user.userType;\r\n\r\n//     const [currentProject, setCurrentProject] = useState([]);\r\n//     const [formValues, setFormValues] = useState(null);\r\n\r\n//     const params = useParams();\r\n\r\n//     useEffect(() => {\r\n//         const findProject = async () => {\r\n//           const response = await fetch('/api/projects/' + params.id);\r\n//           const responseData = await response.json();\r\n//           console.log(responseData);\r\n//           setCurrentProject(responseData.data.project);\r\n//         }\r\n//         findProject();\r\n//     }, []);\r\n\r\n//     const initialValues = {\r\n//         userId: aUser.data.user._id,\r\n//         userName: aUser.data.user.username,\r\n//         title: '',\r\n//         description: '',\r\n//         location: ''\r\n//     };\r\n    \r\n//     const validationSchema = Yup.object({\r\n//         title: Yup.string().required('Required!'),\r\n//         description: Yup.string().required('Required!'),\r\n//         location: Yup.string().required('Required!')\r\n//     });\r\n\r\n//     const onSubmit = values => {\r\n//         // console.log('Form values', values);\r\n//         // console.log('ID: ', values._id)\r\n\r\n//         console.log(values);\r\n\r\n//         //axios.patch('/api/projects/' + params.id, values);\r\n\r\n//     }\r\n   \r\n//     return (\r\n//         <AdminLayout>\r\n//             <div className={classes.AdminProjects}>\r\n//                 <CardHeader>\r\n//                     <h2 className={classes.Text}>Projects</h2>\r\n//                 </CardHeader>\r\n//             </div>\r\n//             <div className={classes.AdminUpdateProjectsContentDiv}>\r\n//                 <Formik\r\n//                     initialValues={formValues || initialValues}\r\n//                     validationSchema={validationSchema}\r\n//                     onSubmit={onSubmit}\r\n//                     enableReinitialize>\r\n//                     <Form className={classes.AdminUpdateProjectsForm}>\r\n//                         <div className={classes.AdminUpdateProjectsFormDiv}>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Project Title</label>\r\n//                                 <Field\r\n//                                     className={classes.Input}\r\n//                                     type='text'\r\n//                                     id='title'\r\n//                                     name='title'\r\n//                                     placeholder='Project Title'\r\n//                                 />\r\n//                                 <ErrorMessage name='title' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Description</label>\r\n//                                 <Field\r\n//                                     className={classes.Textarea}\r\n//                                     type='text'\r\n//                                     component='textarea'\r\n//                                     rows={4}\r\n//                                     id='description'\r\n//                                     name='description'\r\n//                                     placeholder='Description'\r\n//                                 />\r\n//                                 <ErrorMessage name='description' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     className={classes.FormikInput}\r\n//                                     type='text'\r\n//                                     id='location'\r\n//                                     name='location'\r\n//                                     placeholder='Location'\r\n//                                 />\r\n//                                 <ErrorMessage name='location' />\r\n//                             </div>\r\n//                             <div className={classes.AdminUpdateProjectsFormInput}>\r\n//                                 <label>Location</label>\r\n//                                 <Field\r\n//                                     type='file'\r\n//                                     id='file'\r\n//                                     name='file'\r\n//                                     placeholder='File'\r\n//                                 />\r\n//                                 <ErrorMessage name='file' />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className={classes.ButtonDiv}>\r\n//                             <button className={classes.UpdateButton} type=\"submit\" >Update</button>\r\n//                             <button className={classes.LoadButton} type=\"button\" onClick={() => {\r\n//                                 console.log('Button');\r\n//                                 setFormValues(currentProject);\r\n//                             }}>Load Data</button>\r\n//                         </div>\r\n//                     </Form>\r\n//                 </Formik>\r\n//             </div>\r\n//         </AdminLayout>\r\n//     );\r\n// }\r\n\r\n// export default AdminUpdateProject;",["396","397"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\SingleUsers\\SingleUsers.js",["398","399"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProject\\AdminEachProject.js",["400","401","402","403"],"D:\\Projects\\SmartCTzen\\client\\src\\context\\Reducer.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminEachProposal\\AdminEachProposal.js",["404","405"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminCreateProjects\\AdminCreateProjects.js",["406"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ReportsNav\\ReportsNav.jsx",["407","408"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\CitizenNav\\CitizenNav.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Citizen\\ProposalNav\\ProposalNav.jsx",["409","410"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenProfile.jsx",["411"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\SubmitReport\\CitizenSubmitReport.jsx",["412","413"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\CitizenReports.jsx",["414","415","416","417","418","419"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenProjects.jsx",["420","421","422","423","424","425"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProjects\\CitizenViewProject\\CitizenViewProject.jsx",["426","427","428","429","430","431"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ViewReports\\CitizenViewReport.jsx",["432","433","434"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CreateProposals\\CitizenCreateProposals.jsx",["435","436"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProfile\\CitizenPassUpdate\\CitizenPassUpdate.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\ViewProposals\\CitizenViewProposal.jsx",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenProposals\\CitizenProposals.jsx",["463","464","465"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenChatReport.jsx",["466","467","468"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSideBarData.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\SuperAdmin\\SaSubMenu.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminLayout\\AdminLayout.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardHeader\\CardHeader.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardSummary.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\CancelButton\\CancelButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Tables\\Tables.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\SubmitButton\\SubmitButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\Input.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\FormikInput\\FormikInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenMessage\\CitizenMessage.jsx",[],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\ChatOnline\\CitizenChatOnline.jsx",["469"],"D:\\Projects\\SmartCTzen\\client\\src\\pages\\Citizen\\CitizenReports\\ChatReports\\CitizenConversations\\CitizenConversations.jsx",["470"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardDashboard\\CardGraph\\CardGraph.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItems.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\AdminProfileButton\\AdminProfileButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\Toolbar\\Toolbar.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Input\\ProfileInput\\ProfileInput.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Buttons\\LoginButton\\LoginButton.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminMessage\\AdminMessage.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\AllAdmin\\Administrator\\AdminMessages\\AdminConversations\\AdminConversations.js",["471"],"D:\\Projects\\SmartCTzen\\client\\src\\components\\UI\\Cards\\CardForm\\CardForm.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\api_calls\\adminApiCall.js",[],"D:\\Projects\\SmartCTzen\\client\\src\\components\\Landing\\Footer\\Footer.js",[],{"ruleId":"472","severity":1,"message":"473","line":48,"column":8,"nodeType":"474","messageId":"475","endLine":48,"endColumn":19},{"ruleId":"472","severity":1,"message":"476","line":49,"column":8,"nodeType":"474","messageId":"475","endLine":49,"endColumn":18},{"ruleId":"472","severity":1,"message":"477","line":1,"column":39,"nodeType":"474","messageId":"475","endLine":1,"endColumn":45},{"ruleId":"472","severity":1,"message":"478","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":19},{"ruleId":"472","severity":1,"message":"479","line":28,"column":11,"nodeType":"474","messageId":"475","endLine":28,"endColumn":16},{"ruleId":"472","severity":1,"message":"480","line":28,"column":28,"nodeType":"474","messageId":"475","endLine":28,"endColumn":38},{"ruleId":"472","severity":1,"message":"481","line":1,"column":40,"nodeType":"474","messageId":"475","endLine":1,"endColumn":50},{"ruleId":"472","severity":1,"message":"482","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":14},{"ruleId":"472","severity":1,"message":"483","line":7,"column":10,"nodeType":"474","messageId":"475","endLine":7,"endColumn":17},{"ruleId":"472","severity":1,"message":"484","line":26,"column":11,"nodeType":"474","messageId":"475","endLine":26,"endColumn":17},{"ruleId":"485","severity":1,"message":"486","line":23,"column":6,"nodeType":"487","endLine":23,"endColumn":8,"suggestions":"488"},{"ruleId":"472","severity":1,"message":"489","line":26,"column":11,"nodeType":"474","messageId":"475","endLine":26,"endColumn":14},{"ruleId":"472","severity":1,"message":"489","line":35,"column":11,"nodeType":"474","messageId":"475","endLine":35,"endColumn":14},{"ruleId":"472","severity":1,"message":"489","line":44,"column":11,"nodeType":"474","messageId":"475","endLine":44,"endColumn":14},{"ruleId":"472","severity":1,"message":"489","line":57,"column":11,"nodeType":"474","messageId":"475","endLine":57,"endColumn":14},{"ruleId":"472","severity":1,"message":"490","line":1,"column":38,"nodeType":"474","messageId":"475","endLine":1,"endColumn":47},{"ruleId":"472","severity":1,"message":"489","line":45,"column":23,"nodeType":"474","messageId":"475","endLine":45,"endColumn":26},{"ruleId":"485","severity":1,"message":"486","line":28,"column":8,"nodeType":"487","endLine":28,"endColumn":10,"suggestions":"491"},{"ruleId":"472","severity":1,"message":"492","line":39,"column":52,"nodeType":"474","messageId":"475","endLine":39,"endColumn":59},{"ruleId":"472","severity":1,"message":"489","line":81,"column":23,"nodeType":"474","messageId":"475","endLine":81,"endColumn":26},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"472","severity":1,"message":"497","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":27},{"ruleId":"472","severity":1,"message":"483","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":17},{"ruleId":"472","severity":1,"message":"498","line":11,"column":10,"nodeType":"474","messageId":"475","endLine":11,"endColumn":17},{"ruleId":"472","severity":1,"message":"499","line":11,"column":19,"nodeType":"474","messageId":"475","endLine":11,"endColumn":29},{"ruleId":"485","severity":1,"message":"486","line":24,"column":6,"nodeType":"487","endLine":24,"endColumn":8,"suggestions":"500"},{"ruleId":"501","severity":1,"message":"502","line":62,"column":13,"nodeType":"503","endLine":62,"endColumn":78},{"ruleId":"485","severity":1,"message":"486","line":23,"column":6,"nodeType":"487","endLine":23,"endColumn":8,"suggestions":"504"},{"ruleId":"501","severity":1,"message":"502","line":84,"column":13,"nodeType":"503","endLine":84,"endColumn":79},{"ruleId":"472","severity":1,"message":"489","line":46,"column":23,"nodeType":"474","messageId":"475","endLine":46,"endColumn":26},{"ruleId":"472","severity":1,"message":"505","line":2,"column":10,"nodeType":"474","messageId":"475","endLine":2,"endColumn":14},{"ruleId":"472","severity":1,"message":"506","line":4,"column":10,"nodeType":"474","messageId":"475","endLine":4,"endColumn":13},{"ruleId":"472","severity":1,"message":"505","line":2,"column":10,"nodeType":"474","messageId":"475","endLine":2,"endColumn":14},{"ruleId":"472","severity":1,"message":"506","line":4,"column":10,"nodeType":"474","messageId":"475","endLine":4,"endColumn":13},{"ruleId":"485","severity":1,"message":"507","line":81,"column":8,"nodeType":"487","endLine":81,"endColumn":10,"suggestions":"508"},{"ruleId":"485","severity":1,"message":"509","line":33,"column":7,"nodeType":"487","endLine":33,"endColumn":9,"suggestions":"510"},{"ruleId":"472","severity":1,"message":"489","line":78,"column":27,"nodeType":"474","messageId":"475","endLine":78,"endColumn":30},{"ruleId":"472","severity":1,"message":"476","line":5,"column":8,"nodeType":"474","messageId":"475","endLine":5,"endColumn":18},{"ruleId":"472","severity":1,"message":"511","line":6,"column":20,"nodeType":"474","messageId":"475","endLine":6,"endColumn":24},{"ruleId":"472","severity":1,"message":"512","line":6,"column":26,"nodeType":"474","messageId":"475","endLine":6,"endColumn":32},{"ruleId":"472","severity":1,"message":"513","line":7,"column":10,"nodeType":"474","messageId":"475","endLine":7,"endColumn":17},{"ruleId":"472","severity":1,"message":"514","line":21,"column":11,"nodeType":"474","messageId":"475","endLine":21,"endColumn":23},{"ruleId":"472","severity":1,"message":"515","line":23,"column":15,"nodeType":"474","messageId":"475","endLine":23,"endColumn":23},{"ruleId":"472","severity":1,"message":"516","line":4,"column":15,"nodeType":"474","messageId":"475","endLine":4,"endColumn":21},{"ruleId":"472","severity":1,"message":"517","line":4,"column":28,"nodeType":"474","messageId":"475","endLine":4,"endColumn":37},{"ruleId":"472","severity":1,"message":"513","line":5,"column":16,"nodeType":"474","messageId":"475","endLine":5,"endColumn":23},{"ruleId":"472","severity":1,"message":"518","line":9,"column":12,"nodeType":"474","messageId":"475","endLine":9,"endColumn":17},{"ruleId":"472","severity":1,"message":"519","line":9,"column":19,"nodeType":"474","messageId":"475","endLine":9,"endColumn":27},{"ruleId":"501","severity":1,"message":"502","line":93,"column":25,"nodeType":"503","endLine":93,"endColumn":56},{"ruleId":"472","severity":1,"message":"520","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":13},{"ruleId":"472","severity":1,"message":"512","line":3,"column":20,"nodeType":"474","messageId":"475","endLine":3,"endColumn":26},{"ruleId":"472","severity":1,"message":"521","line":11,"column":12,"nodeType":"474","messageId":"475","endLine":11,"endColumn":21},{"ruleId":"472","severity":1,"message":"522","line":11,"column":23,"nodeType":"474","messageId":"475","endLine":11,"endColumn":35},{"ruleId":"472","severity":1,"message":"523","line":12,"column":11,"nodeType":"474","messageId":"475","endLine":12,"endColumn":20},{"ruleId":"485","severity":1,"message":"524","line":21,"column":7,"nodeType":"487","endLine":21,"endColumn":9,"suggestions":"525"},{"ruleId":"472","severity":1,"message":"511","line":2,"column":20,"nodeType":"474","messageId":"475","endLine":2,"endColumn":24},{"ruleId":"472","severity":1,"message":"512","line":2,"column":26,"nodeType":"474","messageId":"475","endLine":2,"endColumn":32},{"ruleId":"472","severity":1,"message":"505","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":14},{"ruleId":"485","severity":1,"message":"509","line":33,"column":7,"nodeType":"487","endLine":33,"endColumn":9,"suggestions":"526"},{"ruleId":"472","severity":1,"message":"489","line":78,"column":27,"nodeType":"474","messageId":"475","endLine":78,"endColumn":30},{"ruleId":"472","severity":1,"message":"527","line":3,"column":39,"nodeType":"474","messageId":"475","endLine":3,"endColumn":48},{"ruleId":"472","severity":1,"message":"528","line":3,"column":50,"nodeType":"474","messageId":"475","endLine":3,"endColumn":63},{"ruleId":"472","severity":1,"message":"529","line":4,"column":24,"nodeType":"474","messageId":"475","endLine":4,"endColumn":36},{"ruleId":"472","severity":1,"message":"530","line":4,"column":45,"nodeType":"474","messageId":"475","endLine":4,"endColumn":62},{"ruleId":"472","severity":1,"message":"505","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":14},{"ruleId":"472","severity":1,"message":"531","line":5,"column":16,"nodeType":"474","messageId":"475","endLine":5,"endColumn":24},{"ruleId":"472","severity":1,"message":"532","line":7,"column":8,"nodeType":"474","messageId":"475","endLine":7,"endColumn":19},{"ruleId":"472","severity":1,"message":"533","line":17,"column":19,"nodeType":"474","messageId":"475","endLine":17,"endColumn":27},{"ruleId":"472","severity":1,"message":"498","line":18,"column":12,"nodeType":"474","messageId":"475","endLine":18,"endColumn":19},{"ruleId":"472","severity":1,"message":"499","line":18,"column":21,"nodeType":"474","messageId":"475","endLine":18,"endColumn":31},{"ruleId":"472","severity":1,"message":"534","line":19,"column":12,"nodeType":"474","messageId":"475","endLine":19,"endColumn":20},{"ruleId":"472","severity":1,"message":"535","line":19,"column":22,"nodeType":"474","messageId":"475","endLine":19,"endColumn":33},{"ruleId":"472","severity":1,"message":"536","line":20,"column":9,"nodeType":"474","messageId":"475","endLine":20,"endColumn":14},{"ruleId":"485","severity":1,"message":"537","line":40,"column":7,"nodeType":"487","endLine":40,"endColumn":9,"suggestions":"538"},{"ruleId":"539","severity":1,"message":"540","line":55,"column":26,"nodeType":"541","messageId":"542","endLine":55,"endColumn":28},{"ruleId":"485","severity":1,"message":"543","line":63,"column":7,"nodeType":"487","endLine":63,"endColumn":17,"suggestions":"544"},{"ruleId":"539","severity":1,"message":"540","line":78,"column":26,"nodeType":"541","messageId":"542","endLine":78,"endColumn":28},{"ruleId":"485","severity":1,"message":"543","line":86,"column":7,"nodeType":"487","endLine":86,"endColumn":17,"suggestions":"545"},{"ruleId":"472","severity":1,"message":"515","line":95,"column":23,"nodeType":"474","messageId":"475","endLine":95,"endColumn":31},{"ruleId":"472","severity":1,"message":"546","line":105,"column":23,"nodeType":"474","messageId":"475","endLine":105,"endColumn":32},{"ruleId":"472","severity":1,"message":"515","line":117,"column":23,"nodeType":"474","messageId":"475","endLine":117,"endColumn":31},{"ruleId":"472","severity":1,"message":"515","line":140,"column":27,"nodeType":"474","messageId":"475","endLine":140,"endColumn":35},{"ruleId":"472","severity":1,"message":"546","line":151,"column":27,"nodeType":"474","messageId":"475","endLine":151,"endColumn":36},{"ruleId":"472","severity":1,"message":"515","line":164,"column":23,"nodeType":"474","messageId":"475","endLine":164,"endColumn":31},{"ruleId":"472","severity":1,"message":"489","line":198,"column":15,"nodeType":"474","messageId":"475","endLine":198,"endColumn":18},{"ruleId":"501","severity":1,"message":"502","line":303,"column":29,"nodeType":"503","endLine":303,"endColumn":71},{"ruleId":"472","severity":1,"message":"512","line":7,"column":10,"nodeType":"474","messageId":"475","endLine":7,"endColumn":16},{"ruleId":"472","severity":1,"message":"515","line":35,"column":15,"nodeType":"474","messageId":"475","endLine":35,"endColumn":23},{"ruleId":"547","severity":1,"message":"548","line":212,"column":1,"nodeType":"549","messageId":"550","endLine":252,"endColumn":11},{"ruleId":"472","severity":1,"message":"481","line":1,"column":58,"nodeType":"474","messageId":"475","endLine":1,"endColumn":68},{"ruleId":"472","severity":1,"message":"551","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":19},{"ruleId":"472","severity":1,"message":"552","line":23,"column":11,"nodeType":"474","messageId":"475","endLine":23,"endColumn":20},{"ruleId":"501","severity":1,"message":"502","line":37,"column":17,"nodeType":"503","endLine":40,"endColumn":19},{"ruleId":"553","severity":1,"message":"554","line":30,"column":13,"nodeType":"503","endLine":34,"endColumn":15},{"ruleId":"553","severity":1,"message":"554","line":31,"column":13,"nodeType":"503","endLine":34,"endColumn":38},"no-unused-vars","'ProposalNav' is defined but never used.","Identifier","unusedVar","'ReportsNav' is defined but never used.","'useRef' is defined but never used.","'loginCall' is defined but never used.","'aUser' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'useReducer' is defined but never used.","'Tables' is defined but never used.","'Context' is defined but never used.","'string' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["555"],"'res' is assigned a value but never used.","'useParams' is defined but never used.",["556"],"'control' is assigned a value but never used.","no-native-reassign",["557"],"no-negated-in-lhs",["558"],"'useContext' is defined but never used.","'disable' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["559"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["560"],"'Link' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'citizen'. Either include it or remove the dependency array.",["561"],"React Hook useEffect has a missing dependency: 'citizenUser'. Either include it or remove the dependency array.",["562"],"'Form' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","'deletereport' is assigned a value but never used.","'response' is assigned a value but never used.","'Column' is defined but never used.","'Container' is defined but never used.","'views' is assigned a value but never used.","'setViews' is assigned a value but never used.","'axios' is defined but never used.","'viewCount' is assigned a value but never used.","'setViewCount' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["563"],["564"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'ErrorMessage' is defined but never used.","'validateYupSchema' is defined but never used.","'Redirect' is defined but never used.","'FormikInput' is defined but never used.","'dispatch' is assigned a value but never used.","'arrEmpty' is assigned a value but never used.","'setarrEmpty' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proposalId'. Either include it or remove the dependency array.",["565"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.data.user._id'. Either include it or remove the dependency array.",["566"],["567"],"'response2' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'AdminLayout' is defined but never used.","'scrollRef' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"568","fix":"569"},{"desc":"568","fix":"570"},"no-global-assign","no-unsafe-negation",{"desc":"568","fix":"571"},{"desc":"568","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"575","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"582","fix":"584"},"Update the dependencies array to be: [params.id]",{"range":"585","text":"586"},{"range":"587","text":"586"},{"range":"588","text":"586"},{"range":"589","text":"586"},"Update the dependencies array to be: [citizen]",{"range":"590","text":"591"},"Update the dependencies array to be: [citizenUser]",{"range":"592","text":"593"},"Update the dependencies array to be: [path]",{"range":"594","text":"595"},{"range":"596","text":"593"},"Update the dependencies array to be: [proposalId]",{"range":"597","text":"598"},"Update the dependencies array to be: [proposal, user.data.user._id]",{"range":"599","text":"600"},{"range":"601","text":"600"},[863,865],"[params.id]",[1132,1134],[961,963],[880,882],[2671,2673],"[citizen]",[1576,1578],"[citizenUser]",[805,807],"[path]",[1502,1504],[1790,1792],"[proposalId]",[2572,2582],"[proposal, user.data.user._id]",[3361,3371]]
